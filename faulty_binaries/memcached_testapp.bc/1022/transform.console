digraph {
newNodes:5
nodes:5 total:11
newNodes:5
  0 -> 7;
7,
  0 -> 5;
7,5,
  0 -> 6;
7,5,6,
  0 -> 8;
7,5,6,8,
  0 -> 9;
7,5,6,8,9,
  1 -> 6;
6,
  1 -> 8;
6,8,
  1 -> 9;
6,8,9,
  1 -> 5;
6,8,9,5,
  1 -> 7;
6,8,9,5,7,
  2 -> 7;
7,
  2 -> 5;
7,5,
  2 -> 6;
7,5,6,
  2 -> 8;
7,5,6,8,
  2 -> 9;
7,5,6,8,9,
  3 -> 5;
5,
  3 -> 6;
5,6,
  3 -> 7;
5,6,7,
  3 -> 8;
5,6,7,8,
  3 -> 9;
5,6,7,8,9,
  4 -> 6;
6,
  4 -> 5;
6,5,
  4 -> 7;
6,5,7,
  4 -> 8;
6,5,7,8,
  4 -> 9;
6,5,7,8,9,
nodes:10 total:11
newNodes:1
  1 -> 10;
6,8,9,5,7,10,
  5 -> 10;
10,
  6 -> 10;
10,
  7 -> 10;
10,
  8 -> 10;
10,
  9 -> 10;
10,
nodes:11 total:11
{
    "allCheckees": [
        "safe_recv",
        "safe_send",
        "validate_response_header",
        "cache_fail_constructor",
        "mc_swap64",
        "cache_free",
        "cache_free",
        "validate_response_header",
        "cache_fail_constructor",
        "mc_swap64",
        "safe_send",
        "safe_recv",
        "cache_free",
        "safe_recv",
        "safe_send",
        "validate_response_header",
        "cache_fail_constructor",
        "mc_swap64",
        "cache_free",
        "safe_send",
        "validate_response_header",
        "safe_recv",
        "cache_fail_constructor",
        "mc_swap64",
        "validate_response_header",
        "safe_send",
        "safe_recv",
        "cache_fail_constructor",
        "mc_swap64",
        "cache_free",
        "cache_free"
    ],
    "map": {
        "cache_constructor_test": [
            "safe_recv",
            "safe_send",
            "validate_response_header",
            "cache_fail_constructor",
            "mc_swap64"
        ],
        "cache_fail_constructor": [
            "cache_free"
        ],
        "mc_swap64": [
            "cache_free"
        ],
        "safe_recv": [
            "cache_free"
        ],
        "safe_send": [
            "cache_free"
        ],
        "test_binary_append": [
            "validate_response_header",
            "safe_send",
            "safe_recv",
            "cache_fail_constructor",
            "mc_swap64"
        ],
        "test_binary_gatk": [
            "safe_send",
            "validate_response_header",
            "safe_recv",
            "cache_fail_constructor",
            "mc_swap64"
        ],
        "test_binary_replace": [
            "safe_recv",
            "safe_send",
            "validate_response_header",
            "cache_fail_constructor",
            "mc_swap64"
        ],
        "test_issue_92": [
            "validate_response_header",
            "cache_fail_constructor",
            "mc_swap64",
            "safe_send",
            "safe_recv",
            "cache_free"
        ],
        "validate_response_header": [
            "cache_free"
        ]
    },
    "topologicalsort": [
        "safe_recv",
        "safe_send",
        "validate_response_header",
        "cache_fail_constructor",
        "mc_swap64",
        "cache_constructor_test",
        "test_issue_92",
        "test_binary_replace",
        "test_binary_gatk",
        "test_binary_append"
    ]
}
{
    "avgConnectivity": 5.16666666666667,
    "desiredConnectivity": 5,
    "numberOfGuardInstructions": 31,
    "numberOfGuards": 31,
    "numberOfProtectedFunctions": 6,
    "numberOfProtectedInstructions": 636,
    "numberOfSensitiveInstructions": 731,
    "stdConnectivity": 0.372677996249965
}
{
    "numberOfAssertCalls": 0,
    "numberOfHashCalls": 0,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 0
}
