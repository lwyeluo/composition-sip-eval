Running input dependency analysis pass
Processing function generic_init
Processing function endname0
Processing function endname
Processing function parse_argv00
Processing function parse_argv0
Processing function set_format0
Processing function set_format
Processing function version0
Processing function version
Processing function help0
Processing function help
Processing function main0
Processing function catch_signals0
Did not find function assigned   store void (...)* %1, void (...)** %fun.addr.el, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Did not find function assigned   store void (...)* %18, void (...)** %17, !extraction_store !12, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Processing function catch_signals
Did not find function assigned   store void (...)* %fun, void (...)** %fun.addr, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
Processing function open_input0
Processing function normalname0
Processing function emalloc0
Processing function onintr0
Processing function onintr1
Processing function onintr
Processing function emalloc
Processing function suffix
Processing function normalname1
Processing function normalname2
Processing function normalname3
Processing function normalname
Processing function codename
Processing function open_input1
Processing function open_input2
Processing function open_input3
Processing function open_input4
Processing function okay_as_input0
Processing function okay_as_input1
Processing function okay_as_input
Processing function plainname
Processing function grok_format0
Processing function grok_format
Processing function prepare_io
Processing function open_input
Processing function open_output0
Processing function length_okay0
Processing function length_okay
Processing function open_output1
Processing function ok_to_replace0
Processing function ok_to_replace1
Processing function ok_to_replace2
Processing function ok_to_replace
Processing function open_output2
Processing function open_output3
Processing function open_output4
Processing function open_output
Processing function update_times0
Processing function update_times
Processing function update_mode0
Processing function update_mode
Processing function update_own0
Processing function update_own
Processing function process0
Processing function process1
Processing function process2
Processing function process3
Processing function process4
Processing function process5
Processing function process6
Processing function process7
Processing function process
Processing function main
Processing function gsm_create
Processing function process_decode0
Processing function gsm_option
Processing function gsm_destroy
Processing function APCM_quantization_xmaxc_to_exp_mant0
Processing function APCM_quantization_xmaxc_to_exp_mant1
Processing function APCM_quantization_xmaxc_to_exp_mant2
Processing function APCM_quantization_xmaxc_to_exp_mant3
Processing function APCM_quantization_xmaxc_to_exp_mant4
Processing function APCM_quantization_xmaxc_to_exp_mant
Processing function gsm_sub
Processing function gsm_asl0
Processing function gsm_asr0
Processing function gsm_asr1
Processing function gsm_asr2
Processing function gsm_asr
Processing function gsm_asl1
Processing function gsm_asl2
Processing function gsm_asl
Processing function APCM_inverse_quantization0
Processing function APCM_inverse_quantization
Processing function RPE_grid_positioning0
Processing function RPE_grid_positioning1
Processing function RPE_grid_positioning2
Processing function RPE_grid_positioning3
Processing function RPE_grid_positioning4
Processing function RPE_grid_positioning
Processing function Gsm_RPE_Decoding0
Processing function Gsm_RPE_Decoding
Processing function Gsm_Long_Term_Synthesis_Filtering0
Processing function Gsm_Long_Term_Synthesis_Filtering1
Processing function Gsm_Long_Term_Synthesis_Filtering2
Processing function Gsm_Long_Term_Synthesis_Filtering
Processing function Gsm_Decoder0
Processing function Decoding_of_the_coded_Log_Area_Ratios
Processing function Coefficients_0_120
Processing function Coefficients_0_12
Processing function LARp_to_rp0
Processing function LARp_to_rp
Processing function Short_term_synthesis_filtering0
Processing function Short_term_synthesis_filtering1
Processing function Short_term_synthesis_filtering
Processing function Coefficients_13_260
Processing function Coefficients_13_26
Processing function Coefficients_27_390
Processing function Coefficients_27_39
Processing function Coefficients_40_1590
Processing function Coefficients_40_1591
Processing function Coefficients_40_159
Processing function Gsm_Short_Term_Synthesis_Filter
Processing function Postprocessing0
Processing function Postprocessing
Processing function Gsm_Decoder
Processing function gsm_decode
Processing function process_decode
Processing function process_encode0
Processing function Gsm_Preprocess
Processing function Autocorrelation0
Processing function gsm_norm0
Processing function gsm_norm
Processing function Autocorrelation1
Processing function Autocorrelation2
Processing function Autocorrelation3
Processing function Autocorrelation4
Processing function Autocorrelation5
Processing function Autocorrelation6
Processing function Autocorrelation7
Processing function Autocorrelation8
Processing function Autocorrelation9
Processing function Autocorrelation10
Processing function Autocorrelation11
Processing function Autocorrelation12
Processing function Autocorrelation13
Processing function Autocorrelation14
Processing function Autocorrelation15
Processing function Autocorrelation16
Processing function Autocorrelation
Processing function Reflection_coefficients0
Processing function Reflection_coefficients1
Processing function Reflection_coefficients2
Processing function Reflection_coefficients3
Processing function Reflection_coefficients4
Processing function Reflection_coefficients5
Processing function Reflection_coefficients6
Processing function gsm_div0
Processing function gsm_div1
Processing function gsm_div2
Processing function gsm_div
Processing function Reflection_coefficients7
Processing function Reflection_coefficients8
Processing function Reflection_coefficients
Processing function Transformation_to_Log_Area_Ratios0
Processing function Transformation_to_Log_Area_Ratios1
Processing function Transformation_to_Log_Area_Ratios2
Processing function Transformation_to_Log_Area_Ratios3
Processing function Transformation_to_Log_Area_Ratios
Processing function Quantization_and_coding
Processing function Gsm_LPC_Analysis0
Processing function Gsm_LPC_Analysis
Processing function Short_term_analysis_filtering0
Processing function Short_term_analysis_filtering1
Processing function Short_term_analysis_filtering2
Processing function Short_term_analysis_filtering
Processing function Gsm_Short_Term_Analysis_Filter
Processing function Calculation_of_the_LTP_parameters0
Processing function Calculation_of_the_LTP_parameters1
Processing function Calculation_of_the_LTP_parameters2
Processing function Calculation_of_the_LTP_parameters3
Processing function Calculation_of_the_LTP_parameters4
Processing function Calculation_of_the_LTP_parameters5
Processing function Calculation_of_the_LTP_parameters6
Processing function Calculation_of_the_LTP_parameters7
Processing function Calculation_of_the_LTP_parameters8
Processing function Calculation_of_the_LTP_parameters9
Processing function gsm_mult0
Processing function gsm_mult
Processing function Calculation_of_the_LTP_parameters10
Processing function Calculation_of_the_LTP_parameters11
Processing function Calculation_of_the_LTP_parameters
Processing function Long_term_analysis_filtering0
Processing function Long_term_analysis_filtering1
Processing function Long_term_analysis_filtering2
Processing function Long_term_analysis_filtering3
Processing function Long_term_analysis_filtering
Processing function Gsm_Long_Term_Predictor0
Processing function Gsm_Long_Term_Predictor
Processing function Weighting_filter0
Processing function Weighting_filter
Processing function RPE_grid_selection0
Processing function RPE_grid_selection1
Processing function RPE_grid_selection2
Processing function RPE_grid_selection3
Processing function RPE_grid_selection4
Processing function RPE_grid_selection5
Processing function RPE_grid_selection
Processing function APCM_quantization0
Processing function APCM_quantization1
Processing function APCM_quantization2
Processing function APCM_quantization3
Processing function gsm_add
Processing function APCM_quantization4
Processing function APCM_quantization5
Processing function APCM_quantization6
Processing function APCM_quantization7
Processing function APCM_quantization
Processing function Gsm_RPE_Encoding0
Processing function Gsm_RPE_Encoding
Processing function Gsm_Coder0
Processing function Gsm_Coder1
Processing function Gsm_Coder
Processing function gsm_encode
Processing function process_encode
Processing function linear_input
Processing function linear_output
Processing function ulaw_input0
Processing function ulaw_input1
Processing function ulaw_input2
Processing function ulaw_input
Processing function ulaw_output0
Processing function ulaw_output
Processing function alaw_input0
Processing function alaw_input1
Processing function alaw_input2
Processing function alaw_input
Processing function alaw_output0
Processing function alaw_output
Processing function get_u320
Processing function get_u32
Processing function audio_init_input0
Processing function audio_init_input
Processing function put_u32
Processing function audio_init_output
Processing function gsm_mult_r0
Processing function gsm_mult_r
Processing function gsm_abs
Processing function gsm_L_mult
Processing function gsm_L_add0
Processing function gsm_L_add1
Processing function gsm_L_add
Processing function gsm_L_sub0
Processing function gsm_L_sub1
Processing function gsm_L_sub
Processing function gsm_L_asl0
Processing function gsm_L_asr0
Processing function gsm_L_asr1
Processing function gsm_L_asr2
Processing function gsm_L_asr
Processing function gsm_L_asl1
Processing function gsm_L_asl2
Processing function gsm_L_asl
Processing function gsm_debug_words0
Processing function gsm_debug_words1
Processing function gsm_debug_words2
Processing function gsm_debug_words
Processing function gsm_debug_longwords0
Processing function gsm_debug_longwords1
Processing function gsm_debug_longwords2
Processing function gsm_debug_longwords
Processing function gsm_debug_longword0
Processing function gsm_debug_longword
Processing function gsm_debug_word0
Processing function gsm_debug_word
Processing function gsm_explode0
Processing function gsm_explode
Processing function gsm_implode0
Processing function gsm_implode
Processing function gsm_print
Finalizing gsm_print
Finalizing gsm_implode
Finalizing gsm_implode0
Mark Input dependent function gsm_implode0
Finalizing gsm_explode
Finalizing gsm_explode0
Mark Input dependent function gsm_explode0
Finalizing gsm_debug_word
Finalizing gsm_debug_word0
Mark Input dependent function gsm_debug_word0
Finalizing gsm_debug_longword
Finalizing gsm_debug_longword0
Mark Input dependent function gsm_debug_longword0
Finalizing gsm_debug_longwords
Finalizing gsm_debug_longwords2
Mark Input dependent function gsm_debug_longwords2
Finalizing gsm_debug_longwords1
Mark Input dependent function gsm_debug_longwords1
Finalizing gsm_debug_longwords0
Mark Input dependent function gsm_debug_longwords0
Finalizing gsm_debug_words
Finalizing gsm_debug_words2
Mark Input dependent function gsm_debug_words2
Finalizing gsm_debug_words1
Mark Input dependent function gsm_debug_words1
Finalizing gsm_debug_words0
Mark Input dependent function gsm_debug_words0
Finalizing gsm_L_asl
Finalizing gsm_L_asl2
Mark Input dependent function gsm_L_asl2
Finalizing gsm_L_asl1
Mark Input dependent function gsm_L_asl1
Finalizing gsm_L_asr
Mark Input dependent function gsm_L_asr
Finalizing gsm_L_asr2
Mark Input dependent function gsm_L_asr2
Finalizing gsm_L_asr1
Mark Input dependent function gsm_L_asr1
Finalizing gsm_L_asr0
Mark Input dependent function gsm_L_asr0
Finalizing gsm_L_asl0
Mark Input dependent function gsm_L_asl0
Finalizing gsm_L_sub
Finalizing gsm_L_sub1
Mark Input dependent function gsm_L_sub1
Finalizing gsm_L_sub0
Mark Input dependent function gsm_L_sub0
Finalizing gsm_L_add
Finalizing gsm_L_add1
Mark Input dependent function gsm_L_add1
Finalizing gsm_L_add0
Mark Input dependent function gsm_L_add0
Finalizing gsm_L_mult
Finalizing gsm_abs
Finalizing gsm_mult_r
Finalizing gsm_mult_r0
Mark Input dependent function gsm_mult_r0
Finalizing audio_init_output
Finalizing put_u32
Mark Input dependent function put_u32
Finalizing audio_init_input
Finalizing audio_init_input0
Mark Input dependent function audio_init_input0
Finalizing get_u32
Mark Input dependent function get_u32
Finalizing get_u320
Mark Input dependent function get_u320
Finalizing alaw_output
Finalizing alaw_output0
Mark Input dependent function alaw_output0
Finalizing alaw_input
Finalizing alaw_input2
Mark Input dependent function alaw_input2
Finalizing alaw_input1
Mark Input dependent function alaw_input1
Finalizing alaw_input0
Mark Input dependent function alaw_input0
Finalizing ulaw_output
Finalizing ulaw_output0
Mark Input dependent function ulaw_output0
Finalizing ulaw_input
Finalizing ulaw_input2
Mark Input dependent function ulaw_input2
Finalizing ulaw_input1
Mark Input dependent function ulaw_input1
Finalizing ulaw_input0
Mark Input dependent function ulaw_input0
Finalizing linear_output
Finalizing linear_input
Finalizing process_encode
Finalizing gsm_encode
Mark Input dependent function gsm_encode
Finalizing Gsm_Coder
Mark Input dependent function Gsm_Coder
Finalizing Gsm_Coder1
Mark Input dependent function Gsm_Coder1
Finalizing Gsm_Coder0
Mark Input dependent function Gsm_Coder0
Finalizing Gsm_RPE_Encoding
Mark Input dependent function Gsm_RPE_Encoding
Finalizing Gsm_RPE_Encoding0
Mark Input dependent function Gsm_RPE_Encoding0
Finalizing APCM_quantization
Mark Input dependent function APCM_quantization
Finalizing APCM_quantization7
Mark Input dependent function APCM_quantization7
Finalizing APCM_quantization6
Mark Input dependent function APCM_quantization6
Finalizing APCM_quantization5
Mark Input dependent function APCM_quantization5
Finalizing APCM_quantization4
Mark Input dependent function APCM_quantization4
Finalizing gsm_add
Mark Input dependent function gsm_add
Finalizing APCM_quantization3
Mark Input dependent function APCM_quantization3
Finalizing APCM_quantization2
Mark Input dependent function APCM_quantization2
Finalizing APCM_quantization1
Mark Input dependent function APCM_quantization1
Finalizing APCM_quantization0
Mark Input dependent function APCM_quantization0
Finalizing RPE_grid_selection
Mark Input dependent function RPE_grid_selection
Finalizing RPE_grid_selection5
Mark Input dependent function RPE_grid_selection5
Finalizing RPE_grid_selection4
Mark Input dependent function RPE_grid_selection4
Finalizing RPE_grid_selection3
Mark Input dependent function RPE_grid_selection3
Finalizing RPE_grid_selection2
Mark Input dependent function RPE_grid_selection2
Finalizing RPE_grid_selection1
Mark Input dependent function RPE_grid_selection1
Finalizing RPE_grid_selection0
Mark Input dependent function RPE_grid_selection0
Finalizing Weighting_filter
Mark Input dependent function Weighting_filter
Finalizing Weighting_filter0
Mark Input dependent function Weighting_filter0
Finalizing Gsm_Long_Term_Predictor
Mark Input dependent function Gsm_Long_Term_Predictor
Finalizing Gsm_Long_Term_Predictor0
Mark Input dependent function Gsm_Long_Term_Predictor0
Finalizing Long_term_analysis_filtering
Mark Input dependent function Long_term_analysis_filtering
Finalizing Long_term_analysis_filtering3
Mark Input dependent function Long_term_analysis_filtering3
Finalizing Long_term_analysis_filtering2
Mark Input dependent function Long_term_analysis_filtering2
Finalizing Long_term_analysis_filtering1
Mark Input dependent function Long_term_analysis_filtering1
Finalizing Long_term_analysis_filtering0
Mark Input dependent function Long_term_analysis_filtering0
Finalizing Calculation_of_the_LTP_parameters
Mark Input dependent function Calculation_of_the_LTP_parameters
Finalizing Calculation_of_the_LTP_parameters11
Mark Input dependent function Calculation_of_the_LTP_parameters11
Finalizing Calculation_of_the_LTP_parameters10
Mark Input dependent function Calculation_of_the_LTP_parameters10
Finalizing gsm_mult
Mark Input dependent function gsm_mult
Finalizing gsm_mult0
Mark Input dependent function gsm_mult0
Finalizing Calculation_of_the_LTP_parameters9
Mark Input dependent function Calculation_of_the_LTP_parameters9
Finalizing Calculation_of_the_LTP_parameters8
Mark Input dependent function Calculation_of_the_LTP_parameters8
Finalizing Calculation_of_the_LTP_parameters7
Mark Input dependent function Calculation_of_the_LTP_parameters7
Finalizing Calculation_of_the_LTP_parameters6
Mark Input dependent function Calculation_of_the_LTP_parameters6
Finalizing Calculation_of_the_LTP_parameters5
Mark Input dependent function Calculation_of_the_LTP_parameters5
Finalizing Calculation_of_the_LTP_parameters4
Mark Input dependent function Calculation_of_the_LTP_parameters4
Finalizing Calculation_of_the_LTP_parameters3
Mark Input dependent function Calculation_of_the_LTP_parameters3
Finalizing Calculation_of_the_LTP_parameters2
Mark Input dependent function Calculation_of_the_LTP_parameters2
Finalizing Calculation_of_the_LTP_parameters1
Mark Input dependent function Calculation_of_the_LTP_parameters1
Finalizing Calculation_of_the_LTP_parameters0
Mark Input dependent function Calculation_of_the_LTP_parameters0
Finalizing Gsm_Short_Term_Analysis_Filter
Mark Input dependent function Gsm_Short_Term_Analysis_Filter
Finalizing Short_term_analysis_filtering
Mark Input dependent function Short_term_analysis_filtering
Finalizing Short_term_analysis_filtering2
Mark Input dependent function Short_term_analysis_filtering2
Finalizing Short_term_analysis_filtering1
Mark Input dependent function Short_term_analysis_filtering1
Finalizing Short_term_analysis_filtering0
Mark Input dependent function Short_term_analysis_filtering0
Finalizing Gsm_LPC_Analysis
Mark Input dependent function Gsm_LPC_Analysis
Finalizing Gsm_LPC_Analysis0
Mark Input dependent function Gsm_LPC_Analysis0
Finalizing Quantization_and_coding
Mark Input dependent function Quantization_and_coding
Finalizing Transformation_to_Log_Area_Ratios
Mark Input dependent function Transformation_to_Log_Area_Ratios
Finalizing Transformation_to_Log_Area_Ratios3
Mark Input dependent function Transformation_to_Log_Area_Ratios3
Finalizing Transformation_to_Log_Area_Ratios2
Mark Input dependent function Transformation_to_Log_Area_Ratios2
Finalizing Transformation_to_Log_Area_Ratios1
Mark Input dependent function Transformation_to_Log_Area_Ratios1
Finalizing Transformation_to_Log_Area_Ratios0
Mark Input dependent function Transformation_to_Log_Area_Ratios0
Finalizing Reflection_coefficients
Mark Input dependent function Reflection_coefficients
Finalizing Reflection_coefficients8
Mark Input dependent function Reflection_coefficients8
Finalizing Reflection_coefficients7
Mark Input dependent function Reflection_coefficients7
Finalizing gsm_div
Mark Input dependent function gsm_div
Finalizing gsm_div2
Mark Input dependent function gsm_div2
Finalizing gsm_div1
Mark Input dependent function gsm_div1
Finalizing gsm_div0
Mark Input dependent function gsm_div0
Finalizing Reflection_coefficients6
Mark Input dependent function Reflection_coefficients6
Finalizing Reflection_coefficients5
Mark Input dependent function Reflection_coefficients5
Finalizing Reflection_coefficients4
Mark Input dependent function Reflection_coefficients4
Finalizing Reflection_coefficients3
Mark Input dependent function Reflection_coefficients3
Finalizing Reflection_coefficients2
Mark Input dependent function Reflection_coefficients2
Finalizing Reflection_coefficients1
Mark Input dependent function Reflection_coefficients1
Finalizing Reflection_coefficients0
Mark Input dependent function Reflection_coefficients0
Finalizing Autocorrelation
Mark Input dependent function Autocorrelation
Finalizing Autocorrelation16
Mark Input dependent function Autocorrelation16
Finalizing Autocorrelation15
Mark Input dependent function Autocorrelation15
Finalizing Autocorrelation14
Mark Input dependent function Autocorrelation14
Finalizing Autocorrelation13
Mark Input dependent function Autocorrelation13
Finalizing Autocorrelation12
Mark Input dependent function Autocorrelation12
Finalizing Autocorrelation11
Mark Input dependent function Autocorrelation11
Finalizing Autocorrelation10
Mark Input dependent function Autocorrelation10
Finalizing Autocorrelation9
Mark Input dependent function Autocorrelation9
Finalizing Autocorrelation8
Mark Input dependent function Autocorrelation8
Finalizing Autocorrelation7
Mark Input dependent function Autocorrelation7
Finalizing Autocorrelation6
Mark Input dependent function Autocorrelation6
Finalizing Autocorrelation5
Mark Input dependent function Autocorrelation5
Finalizing Autocorrelation4
Mark Input dependent function Autocorrelation4
Finalizing Autocorrelation3
Mark Input dependent function Autocorrelation3
Finalizing Autocorrelation2
Mark Input dependent function Autocorrelation2
Finalizing Autocorrelation1
Mark Input dependent function Autocorrelation1
Finalizing gsm_norm
Mark Input dependent function gsm_norm
Finalizing gsm_norm0
Mark Input dependent function gsm_norm0
Finalizing Autocorrelation0
Mark Input dependent function Autocorrelation0
Finalizing Gsm_Preprocess
Mark Input dependent function Gsm_Preprocess
Finalizing process_encode0
Mark Input dependent function process_encode0
Finalizing process_decode
Finalizing gsm_decode
Mark Input dependent function gsm_decode
Finalizing Gsm_Decoder
Mark Input dependent function Gsm_Decoder
Finalizing Postprocessing
Mark Input dependent function Postprocessing
Finalizing Postprocessing0
Mark Input dependent function Postprocessing0
Finalizing Gsm_Short_Term_Synthesis_Filter
Mark Input dependent function Gsm_Short_Term_Synthesis_Filter
Finalizing Coefficients_40_159
Mark Input dependent function Coefficients_40_159
Finalizing Coefficients_40_1591
Mark Input dependent function Coefficients_40_1591
Finalizing Coefficients_40_1590
Mark Input dependent function Coefficients_40_1590
Finalizing Coefficients_27_39
Mark Input dependent function Coefficients_27_39
Finalizing Coefficients_27_390
Mark Input dependent function Coefficients_27_390
Finalizing Coefficients_13_26
Mark Input dependent function Coefficients_13_26
Finalizing Coefficients_13_260
Mark Input dependent function Coefficients_13_260
Finalizing Short_term_synthesis_filtering
Mark Input dependent function Short_term_synthesis_filtering
Finalizing Short_term_synthesis_filtering1
Mark Input dependent function Short_term_synthesis_filtering1
Finalizing Short_term_synthesis_filtering0
Mark Input dependent function Short_term_synthesis_filtering0
Finalizing LARp_to_rp
Mark Input dependent function LARp_to_rp
Finalizing LARp_to_rp0
Mark Input dependent function LARp_to_rp0
Finalizing Coefficients_0_12
Mark Input dependent function Coefficients_0_12
Finalizing Coefficients_0_120
Mark Input dependent function Coefficients_0_120
Finalizing Decoding_of_the_coded_Log_Area_Ratios
Mark Input dependent function Decoding_of_the_coded_Log_Area_Ratios
Finalizing Gsm_Decoder0
Mark Input dependent function Gsm_Decoder0
Finalizing Gsm_Long_Term_Synthesis_Filtering
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering
Finalizing Gsm_Long_Term_Synthesis_Filtering2
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering2
Finalizing Gsm_Long_Term_Synthesis_Filtering1
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering1
Finalizing Gsm_Long_Term_Synthesis_Filtering0
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering0
Finalizing Gsm_RPE_Decoding
Mark Input dependent function Gsm_RPE_Decoding
Finalizing Gsm_RPE_Decoding0
Mark Input dependent function Gsm_RPE_Decoding0
Finalizing RPE_grid_positioning
Mark Input dependent function RPE_grid_positioning
Finalizing RPE_grid_positioning4
Mark Input dependent function RPE_grid_positioning4
Finalizing RPE_grid_positioning3
Mark Input dependent function RPE_grid_positioning3
Finalizing RPE_grid_positioning2
Mark Input dependent function RPE_grid_positioning2
Finalizing RPE_grid_positioning1
Mark Input dependent function RPE_grid_positioning1
Finalizing RPE_grid_positioning0
Mark Input dependent function RPE_grid_positioning0
Finalizing APCM_inverse_quantization
Mark Input dependent function APCM_inverse_quantization
Finalizing APCM_inverse_quantization0
Mark Input dependent function APCM_inverse_quantization0
Finalizing gsm_asl
Mark Input dependent function gsm_asl
Finalizing gsm_asl2
Mark Input dependent function gsm_asl2
Finalizing gsm_asl1
Mark Input dependent function gsm_asl1
Finalizing gsm_asr
Mark Input dependent function gsm_asr
Finalizing gsm_asr2
Mark Input dependent function gsm_asr2
Finalizing gsm_asr1
Mark Input dependent function gsm_asr1
Finalizing gsm_asr0
Mark Input dependent function gsm_asr0
Finalizing gsm_asl0
Mark Input dependent function gsm_asl0
Finalizing gsm_sub
Mark Input dependent function gsm_sub
Finalizing APCM_quantization_xmaxc_to_exp_mant
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant
Finalizing APCM_quantization_xmaxc_to_exp_mant4
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant4
Finalizing APCM_quantization_xmaxc_to_exp_mant3
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant3
Finalizing APCM_quantization_xmaxc_to_exp_mant2
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant2
Finalizing APCM_quantization_xmaxc_to_exp_mant1
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant1
Finalizing APCM_quantization_xmaxc_to_exp_mant0
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant0
Finalizing gsm_destroy
Mark Input dependent function gsm_destroy
Finalizing gsm_option
Mark Input dependent function gsm_option
Finalizing process_decode0
Mark Input dependent function process_decode0
Finalizing gsm_create
Finalizing main
Finalizing process
Mark Input dependent function process
Finalizing process7
Mark Input dependent function process7
Finalizing process6
Mark Input dependent function process6
Finalizing process5
Mark Input dependent function process5
Finalizing process4
Mark Input dependent function process4
Finalizing process3
Mark Input dependent function process3
Finalizing process2
Mark Input dependent function process2
Finalizing process1
Mark Input dependent function process1
Finalizing process0
Mark Input dependent function process0
Finalizing update_own
Mark Input dependent function update_own
Finalizing update_own0
Mark Input dependent function update_own0
Finalizing update_mode
Mark Input dependent function update_mode
Finalizing update_mode0
Mark Input dependent function update_mode0
Finalizing update_times
Mark Input dependent function update_times
Finalizing update_times0
Mark Input dependent function update_times0
Finalizing open_output
Mark Input dependent function open_output
Finalizing open_output4
Mark Input dependent function open_output4
Finalizing open_output3
Mark Input dependent function open_output3
Finalizing open_output2
Mark Input dependent function open_output2
Finalizing ok_to_replace
Mark Input dependent function ok_to_replace
Finalizing ok_to_replace2
Mark Input dependent function ok_to_replace2
Finalizing ok_to_replace1
Mark Input dependent function ok_to_replace1
Finalizing ok_to_replace0
Mark Input dependent function ok_to_replace0
Finalizing open_output1
Mark Input dependent function open_output1
Finalizing length_okay
Mark Input dependent function length_okay
Finalizing length_okay0
Mark Input dependent function length_okay0
Finalizing open_output0
Mark Input dependent function open_output0
Finalizing open_input
Mark Input dependent function open_input
Finalizing prepare_io
Mark Input dependent function prepare_io
Finalizing grok_format
Mark Input dependent function grok_format
Finalizing grok_format0
Mark Input dependent function grok_format0
Finalizing plainname
Mark Input dependent function plainname
Finalizing okay_as_input
Mark Input dependent function okay_as_input
Finalizing okay_as_input1
Mark Input dependent function okay_as_input1
Finalizing okay_as_input0
Mark Input dependent function okay_as_input0
Finalizing open_input4
Mark Input dependent function open_input4
Finalizing open_input3
Mark Input dependent function open_input3
Finalizing open_input2
Mark Input dependent function open_input2
Finalizing open_input1
Mark Input dependent function open_input1
Finalizing codename
Mark Input dependent function codename
Finalizing normalname
Mark Input dependent function normalname
Finalizing normalname3
Mark Input dependent function normalname3
Finalizing normalname2
Mark Input dependent function normalname2
Finalizing normalname1
Mark Input dependent function normalname1
Finalizing suffix
Mark Input dependent function suffix
Finalizing emalloc
Mark Input dependent function emalloc
Finalizing onintr
Mark Input dependent function onintr
Finalizing onintr1
Mark Input dependent function onintr1
Finalizing onintr0
Mark Input dependent function onintr0
Finalizing emalloc0
Mark Input dependent function emalloc0
Finalizing normalname0
Mark Input dependent function normalname0
Finalizing open_input0
Mark Input dependent function open_input0
Finalizing catch_signals
Mark Input dependent function catch_signals
Finalizing catch_signals0
Mark Input dependent function catch_signals0
Finalizing main0
Mark Input dependent function main0
Finalizing help
Mark Input dependent function help
Finalizing help0
Mark Input dependent function help0
Finalizing version
Mark Input dependent function version
Finalizing version0
Mark Input dependent function version0
Finalizing set_format
Mark Input dependent function set_format
Finalizing set_format0
Mark Input dependent function set_format0
Finalizing parse_argv0
Finalizing parse_argv00
Mark Input dependent function parse_argv00
Finalizing endname
Mark Input dependent function endname
Finalizing endname0
Mark Input dependent function endname0
Finalizing generic_init
Mark Input dependent function generic_init
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/toast.x.bc/10/0
here!:gsm_L_asl1
here!:Calculation_of_the_LTP_parameters5
here!:gsm_L_asl
here!:audio_init_output
here!:update_mode0
here!:RPE_grid_positioning0
here!:alaw_output0
here!:Autocorrelation0
here!:APCM_quantization_xmaxc_to_exp_mant1
here!:onintr0
here!:update_times0
here!:Weighting_filter0
here!:gsm_destroy
here!:gsm_add
here!:alaw_output
here!:gsm_norm
here!:Reflection_coefficients1
here!:Quantization_and_coding
here!:LARp_to_rp0
here!:RPE_grid_selection2
here!:Gsm_RPE_Encoding0
here!:parse_argv00
here!:Reflection_coefficients4
here!:main
here!:process
here!:RPE_grid_selection
here!:emalloc0
here!:emalloc0
got filter function names
did not find generic_init demangled to generic_init
Add filter function main
FunctionInfo. Adding function:main
did not find parse_argv0 demangled to parse_argv0
did not find getopt demangled to getopt
did not find set_format demangled to set_format
did not find version demangled to version
did not find exit demangled to exit
did not find help demangled to help
did not find fprintf demangled to fprintf
did not find onintr demangled to onintr
did not find catch_signals demangled to catch_signals
Add filter function process
FunctionInfo. Adding function:process
did not find open_input demangled to open_input
did not find open_output demangled to open_output
did not find process_decode demangled to process_decode
did not find process_encode demangled to process_encode
did not find fflush demangled to fflush
did not find ferror demangled to ferror
did not find perror demangled to perror
did not find update_times demangled to update_times
did not find update_mode demangled to update_mode
did not find update_own demangled to update_own
did not find fclose demangled to fclose
did not find free demangled to free
did not find unlink demangled to unlink
did not find __errno_location demangled to __errno_location
did not find fileno demangled to fileno
did not find fchown demangled to fchown
did not find fchmod demangled to fchmod
did not find utime demangled to utime
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fwrite demangled to fwrite
did not find fread demangled to fread
did not find plainname demangled to plainname
did not find codename demangled to codename
did not find length_okay demangled to length_okay
did not find open demangled to open
did not find fdopen demangled to fdopen
did not find ok_to_replace demangled to ok_to_replace
did not find fopen demangled to fopen
did not find close demangled to close
did not find isatty demangled to isatty
did not find getchar demangled to getchar
did not find endname demangled to endname
did not find strlen demangled to strlen
did not find strrchr demangled to strrchr
did not find normalname demangled to normalname
did not find emalloc demangled to emalloc
did not find strcpy demangled to strcpy
did not find suffix demangled to suffix
did not find strcat demangled to strcat
did not find memcmp demangled to memcmp
did not find malloc demangled to malloc
did not find okay_as_input demangled to okay_as_input
did not find grok_format demangled to grok_format
did not find prepare_io demangled to prepare_io
did not find fstat demangled to fstat
did not find __sysv_signal demangled to __sysv_signal
did not find printf demangled to printf
did not find strncmp demangled to strncmp
did not find strcmp demangled to strcmp
did not find linear_input demangled to linear_input
did not find linear_output demangled to linear_output
did not find ulaw_input demangled to ulaw_input
did not find fgetc demangled to fgetc
did not find ulaw_output demangled to ulaw_output
did not find fputc demangled to fputc
did not find alaw_input demangled to alaw_input
Add filter function alaw_output
FunctionInfo. Adding function:alaw_output
did not find audio_init_input demangled to audio_init_input
did not find get_u32 demangled to get_u32
did not find fseek demangled to fseek
did not find _IO_getc demangled to _IO_getc
Add filter function audio_init_output
FunctionInfo. Adding function:audio_init_output
did not find fputs demangled to fputs
did not find put_u32 demangled to put_u32
did not find _IO_putc demangled to _IO_putc
Add filter function gsm_add
FunctionInfo. Adding function:gsm_add
did not find gsm_sub demangled to gsm_sub
did not find gsm_mult demangled to gsm_mult
did not find gsm_mult_r demangled to gsm_mult_r
did not find gsm_abs demangled to gsm_abs
did not find gsm_L_mult demangled to gsm_L_mult
did not find __assert_fail demangled to __assert_fail
did not find gsm_L_add demangled to gsm_L_add
did not find gsm_L_sub demangled to gsm_L_sub
Add filter function gsm_norm
FunctionInfo. Adding function:gsm_norm
Add filter function gsm_L_asl
FunctionInfo. Adding function:gsm_L_asl
did not find gsm_L_asr demangled to gsm_L_asr
did not find gsm_asl demangled to gsm_asl
did not find gsm_asr demangled to gsm_asr
did not find gsm_div demangled to gsm_div
did not find Gsm_Coder demangled to Gsm_Coder
did not find Gsm_Preprocess demangled to Gsm_Preprocess
did not find Gsm_LPC_Analysis demangled to Gsm_LPC_Analysis
did not find Gsm_Short_Term_Analysis_Filter demangled to Gsm_Short_Term_Analysis_Filter
did not find Gsm_Long_Term_Predictor demangled to Gsm_Long_Term_Predictor
did not find Gsm_RPE_Encoding demangled to Gsm_RPE_Encoding
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find Weighting_filter demangled to Weighting_filter
Add filter function RPE_grid_selection
FunctionInfo. Adding function:RPE_grid_selection
did not find APCM_quantization demangled to APCM_quantization
did not find APCM_inverse_quantization demangled to APCM_inverse_quantization
did not find RPE_grid_positioning demangled to RPE_grid_positioning
did not find APCM_quantization_xmaxc_to_exp_mant demangled to APCM_quantization_xmaxc_to_exp_mant
did not find Calculation_of_the_LTP_parameters demangled to Calculation_of_the_LTP_parameters
did not find Long_term_analysis_filtering demangled to Long_term_analysis_filtering
did not find Decoding_of_the_coded_Log_Area_Ratios demangled to Decoding_of_the_coded_Log_Area_Ratios
did not find Coefficients_0_12 demangled to Coefficients_0_12
did not find LARp_to_rp demangled to LARp_to_rp
did not find Short_term_analysis_filtering demangled to Short_term_analysis_filtering
did not find Coefficients_13_26 demangled to Coefficients_13_26
did not find Coefficients_27_39 demangled to Coefficients_27_39
did not find Coefficients_40_159 demangled to Coefficients_40_159
did not find Autocorrelation demangled to Autocorrelation
did not find Reflection_coefficients demangled to Reflection_coefficients
did not find Transformation_to_Log_Area_Ratios demangled to Transformation_to_Log_Area_Ratios
Add filter function Quantization_and_coding
FunctionInfo. Adding function:Quantization_and_coding
did not find gsm_debug_words demangled to gsm_debug_words
did not find gsm_debug_longwords demangled to gsm_debug_longwords
did not find gsm_debug_longword demangled to gsm_debug_longword
did not find gsm_debug_word demangled to gsm_debug_word
did not find Gsm_Decoder demangled to Gsm_Decoder
did not find Gsm_RPE_Decoding demangled to Gsm_RPE_Decoding
did not find Gsm_Long_Term_Synthesis_Filtering demangled to Gsm_Long_Term_Synthesis_Filtering
did not find Gsm_Short_Term_Synthesis_Filter demangled to Gsm_Short_Term_Synthesis_Filter
did not find Postprocessing demangled to Postprocessing
did not find Short_term_synthesis_filtering demangled to Short_term_synthesis_filtering
Add filter function gsm_destroy
FunctionInfo. Adding function:gsm_destroy
did not find gsm_decode demangled to gsm_decode
did not find gsm_encode demangled to gsm_encode
did not find gsm_explode demangled to gsm_explode
did not find gsm_implode demangled to gsm_implode
did not find gsm_create demangled to gsm_create
did not find gsm_print demangled to gsm_print
did not find gsm_option demangled to gsm_option
did not find main0 demangled to main0
Add filter function parse_argv00
FunctionInfo. Adding function:parse_argv00
did not find set_format0 demangled to set_format0
did not find version0 demangled to version0
did not find help0 demangled to help0
Add filter function onintr0
FunctionInfo. Adding function:onintr0
did not find onintr1 demangled to onintr1
did not find catch_signals0 demangled to catch_signals0
did not find process0 demangled to process0
did not find process1 demangled to process1
did not find process2 demangled to process2
did not find process3 demangled to process3
did not find process4 demangled to process4
did not find process5 demangled to process5
did not find process6 demangled to process6
did not find process7 demangled to process7
did not find open_input0 demangled to open_input0
did not find open_input1 demangled to open_input1
did not find open_input2 demangled to open_input2
did not find open_input3 demangled to open_input3
did not find open_input4 demangled to open_input4
did not find open_output0 demangled to open_output0
did not find open_output1 demangled to open_output1
did not find open_output2 demangled to open_output2
did not find open_output3 demangled to open_output3
did not find open_output4 demangled to open_output4
did not find process_decode0 demangled to process_decode0
did not find process_encode0 demangled to process_encode0
Add filter function update_times0
FunctionInfo. Adding function:update_times0
Add filter function update_mode0
FunctionInfo. Adding function:update_mode0
did not find update_own0 demangled to update_own0
did not find length_okay0 demangled to length_okay0
did not find ok_to_replace0 demangled to ok_to_replace0
did not find ok_to_replace1 demangled to ok_to_replace1
did not find ok_to_replace2 demangled to ok_to_replace2
did not find endname0 demangled to endname0
did not find normalname0 demangled to normalname0
did not find normalname1 demangled to normalname1
did not find normalname2 demangled to normalname2
did not find normalname3 demangled to normalname3
Add filter function emalloc0
FunctionInfo. Adding function:emalloc0
did not find okay_as_input0 demangled to okay_as_input0
did not find okay_as_input1 demangled to okay_as_input1
did not find grok_format0 demangled to grok_format0
did not find ulaw_input0 demangled to ulaw_input0
did not find ulaw_input1 demangled to ulaw_input1
did not find ulaw_input2 demangled to ulaw_input2
did not find ulaw_output0 demangled to ulaw_output0
did not find alaw_input0 demangled to alaw_input0
did not find alaw_input1 demangled to alaw_input1
did not find alaw_input2 demangled to alaw_input2
Add filter function alaw_output0
FunctionInfo. Adding function:alaw_output0
did not find audio_init_input0 demangled to audio_init_input0
did not find get_u320 demangled to get_u320
did not find gsm_mult0 demangled to gsm_mult0
did not find gsm_mult_r0 demangled to gsm_mult_r0
did not find gsm_L_add0 demangled to gsm_L_add0
did not find gsm_L_add1 demangled to gsm_L_add1
did not find gsm_L_sub0 demangled to gsm_L_sub0
did not find gsm_L_sub1 demangled to gsm_L_sub1
did not find gsm_norm0 demangled to gsm_norm0
did not find gsm_L_asl0 demangled to gsm_L_asl0
Add filter function gsm_L_asl1
FunctionInfo. Adding function:gsm_L_asl1
did not find gsm_L_asl2 demangled to gsm_L_asl2
did not find gsm_L_asr0 demangled to gsm_L_asr0
did not find gsm_L_asr1 demangled to gsm_L_asr1
did not find gsm_L_asr2 demangled to gsm_L_asr2
did not find gsm_asl0 demangled to gsm_asl0
did not find gsm_asl1 demangled to gsm_asl1
did not find gsm_asl2 demangled to gsm_asl2
did not find gsm_asr0 demangled to gsm_asr0
did not find gsm_asr1 demangled to gsm_asr1
did not find gsm_asr2 demangled to gsm_asr2
did not find gsm_div0 demangled to gsm_div0
did not find gsm_div1 demangled to gsm_div1
did not find gsm_div2 demangled to gsm_div2
did not find Gsm_Coder0 demangled to Gsm_Coder0
did not find Gsm_Coder1 demangled to Gsm_Coder1
did not find Gsm_LPC_Analysis0 demangled to Gsm_LPC_Analysis0
did not find Gsm_Long_Term_Predictor0 demangled to Gsm_Long_Term_Predictor0
Add filter function Gsm_RPE_Encoding0
FunctionInfo. Adding function:Gsm_RPE_Encoding0
Add filter function Weighting_filter0
FunctionInfo. Adding function:Weighting_filter0
did not find RPE_grid_selection0 demangled to RPE_grid_selection0
did not find RPE_grid_selection1 demangled to RPE_grid_selection1
Add filter function RPE_grid_selection2
FunctionInfo. Adding function:RPE_grid_selection2
did not find RPE_grid_selection3 demangled to RPE_grid_selection3
did not find RPE_grid_selection4 demangled to RPE_grid_selection4
did not find RPE_grid_selection5 demangled to RPE_grid_selection5
did not find APCM_quantization0 demangled to APCM_quantization0
did not find APCM_quantization1 demangled to APCM_quantization1
did not find APCM_quantization2 demangled to APCM_quantization2
did not find APCM_quantization3 demangled to APCM_quantization3
did not find APCM_quantization4 demangled to APCM_quantization4
did not find APCM_quantization5 demangled to APCM_quantization5
did not find APCM_quantization6 demangled to APCM_quantization6
did not find APCM_quantization7 demangled to APCM_quantization7
did not find APCM_inverse_quantization0 demangled to APCM_inverse_quantization0
Add filter function RPE_grid_positioning0
FunctionInfo. Adding function:RPE_grid_positioning0
did not find RPE_grid_positioning1 demangled to RPE_grid_positioning1
did not find RPE_grid_positioning2 demangled to RPE_grid_positioning2
did not find RPE_grid_positioning3 demangled to RPE_grid_positioning3
did not find RPE_grid_positioning4 demangled to RPE_grid_positioning4
did not find APCM_quantization_xmaxc_to_exp_mant0 demangled to APCM_quantization_xmaxc_to_exp_mant0
Add filter function APCM_quantization_xmaxc_to_exp_mant1
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant1
did not find APCM_quantization_xmaxc_to_exp_mant2 demangled to APCM_quantization_xmaxc_to_exp_mant2
did not find APCM_quantization_xmaxc_to_exp_mant3 demangled to APCM_quantization_xmaxc_to_exp_mant3
did not find APCM_quantization_xmaxc_to_exp_mant4 demangled to APCM_quantization_xmaxc_to_exp_mant4
did not find Calculation_of_the_LTP_parameters0 demangled to Calculation_of_the_LTP_parameters0
did not find Calculation_of_the_LTP_parameters1 demangled to Calculation_of_the_LTP_parameters1
did not find Calculation_of_the_LTP_parameters2 demangled to Calculation_of_the_LTP_parameters2
did not find Calculation_of_the_LTP_parameters3 demangled to Calculation_of_the_LTP_parameters3
did not find Calculation_of_the_LTP_parameters4 demangled to Calculation_of_the_LTP_parameters4
Add filter function Calculation_of_the_LTP_parameters5
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters5
did not find Calculation_of_the_LTP_parameters6 demangled to Calculation_of_the_LTP_parameters6
did not find Calculation_of_the_LTP_parameters7 demangled to Calculation_of_the_LTP_parameters7
did not find Calculation_of_the_LTP_parameters8 demangled to Calculation_of_the_LTP_parameters8
did not find Calculation_of_the_LTP_parameters9 demangled to Calculation_of_the_LTP_parameters9
did not find Calculation_of_the_LTP_parameters10 demangled to Calculation_of_the_LTP_parameters10
did not find Calculation_of_the_LTP_parameters11 demangled to Calculation_of_the_LTP_parameters11
did not find Long_term_analysis_filtering0 demangled to Long_term_analysis_filtering0
did not find Long_term_analysis_filtering1 demangled to Long_term_analysis_filtering1
did not find Long_term_analysis_filtering2 demangled to Long_term_analysis_filtering2
did not find Long_term_analysis_filtering3 demangled to Long_term_analysis_filtering3
did not find Coefficients_0_120 demangled to Coefficients_0_120
Add filter function LARp_to_rp0
FunctionInfo. Adding function:LARp_to_rp0
did not find Short_term_analysis_filtering0 demangled to Short_term_analysis_filtering0
did not find Short_term_analysis_filtering1 demangled to Short_term_analysis_filtering1
did not find Short_term_analysis_filtering2 demangled to Short_term_analysis_filtering2
did not find Coefficients_13_260 demangled to Coefficients_13_260
did not find Coefficients_27_390 demangled to Coefficients_27_390
did not find Coefficients_40_1590 demangled to Coefficients_40_1590
did not find Coefficients_40_1591 demangled to Coefficients_40_1591
Add filter function Autocorrelation0
FunctionInfo. Adding function:Autocorrelation0
did not find Autocorrelation1 demangled to Autocorrelation1
did not find Autocorrelation2 demangled to Autocorrelation2
did not find Autocorrelation3 demangled to Autocorrelation3
did not find Autocorrelation4 demangled to Autocorrelation4
did not find Autocorrelation5 demangled to Autocorrelation5
did not find Autocorrelation6 demangled to Autocorrelation6
did not find Autocorrelation7 demangled to Autocorrelation7
did not find Autocorrelation8 demangled to Autocorrelation8
did not find Autocorrelation9 demangled to Autocorrelation9
did not find Autocorrelation10 demangled to Autocorrelation10
did not find Autocorrelation11 demangled to Autocorrelation11
did not find Autocorrelation12 demangled to Autocorrelation12
did not find Autocorrelation13 demangled to Autocorrelation13
did not find Autocorrelation14 demangled to Autocorrelation14
did not find Autocorrelation15 demangled to Autocorrelation15
did not find Autocorrelation16 demangled to Autocorrelation16
did not find Reflection_coefficients0 demangled to Reflection_coefficients0
Add filter function Reflection_coefficients1
FunctionInfo. Adding function:Reflection_coefficients1
did not find Reflection_coefficients2 demangled to Reflection_coefficients2
did not find Reflection_coefficients3 demangled to Reflection_coefficients3
Add filter function Reflection_coefficients4
FunctionInfo. Adding function:Reflection_coefficients4
did not find Reflection_coefficients5 demangled to Reflection_coefficients5
did not find Reflection_coefficients6 demangled to Reflection_coefficients6
did not find Reflection_coefficients7 demangled to Reflection_coefficients7
did not find Reflection_coefficients8 demangled to Reflection_coefficients8
did not find Transformation_to_Log_Area_Ratios0 demangled to Transformation_to_Log_Area_Ratios0
did not find Transformation_to_Log_Area_Ratios1 demangled to Transformation_to_Log_Area_Ratios1
did not find Transformation_to_Log_Area_Ratios2 demangled to Transformation_to_Log_Area_Ratios2
did not find Transformation_to_Log_Area_Ratios3 demangled to Transformation_to_Log_Area_Ratios3
did not find gsm_debug_words0 demangled to gsm_debug_words0
did not find gsm_debug_words1 demangled to gsm_debug_words1
did not find gsm_debug_words2 demangled to gsm_debug_words2
did not find gsm_debug_longwords0 demangled to gsm_debug_longwords0
did not find gsm_debug_longwords1 demangled to gsm_debug_longwords1
did not find gsm_debug_longwords2 demangled to gsm_debug_longwords2
did not find gsm_debug_longword0 demangled to gsm_debug_longword0
did not find gsm_debug_word0 demangled to gsm_debug_word0
did not find Gsm_Decoder0 demangled to Gsm_Decoder0
did not find Gsm_RPE_Decoding0 demangled to Gsm_RPE_Decoding0
did not find Gsm_Long_Term_Synthesis_Filtering0 demangled to Gsm_Long_Term_Synthesis_Filtering0
did not find Gsm_Long_Term_Synthesis_Filtering1 demangled to Gsm_Long_Term_Synthesis_Filtering1
did not find Gsm_Long_Term_Synthesis_Filtering2 demangled to Gsm_Long_Term_Synthesis_Filtering2
did not find Postprocessing0 demangled to Postprocessing0
did not find Short_term_synthesis_filtering0 demangled to Short_term_synthesis_filtering0
did not find Short_term_synthesis_filtering1 demangled to Short_term_synthesis_filtering1
did not find gsm_explode0 demangled to gsm_explode0
did not find gsm_implode0 demangled to gsm_implode0
Adding generic_init other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding parse_argv0 other functions, ExtractedOnly mode uses other functions
Adding set_format other functions, ExtractedOnly mode uses other functions
Adding version other functions, ExtractedOnly mode uses other functions
Adding help other functions, ExtractedOnly mode uses other functions
Adding onintr other functions, ExtractedOnly mode uses other functions
Adding catch_signals other functions, ExtractedOnly mode uses other functions
Adding process other functions, ExtractedOnly mode uses other functions
Adding open_input other functions, ExtractedOnly mode uses other functions
Adding open_output other functions, ExtractedOnly mode uses other functions
Adding process_decode other functions, ExtractedOnly mode uses other functions
Adding process_encode other functions, ExtractedOnly mode uses other functions
Adding update_times other functions, ExtractedOnly mode uses other functions
Adding update_mode other functions, ExtractedOnly mode uses other functions
Adding update_own other functions, ExtractedOnly mode uses other functions
Adding plainname other functions, ExtractedOnly mode uses other functions
Adding codename other functions, ExtractedOnly mode uses other functions
Adding length_okay other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace other functions, ExtractedOnly mode uses other functions
Adding endname other functions, ExtractedOnly mode uses other functions
Adding normalname other functions, ExtractedOnly mode uses other functions
Adding emalloc other functions, ExtractedOnly mode uses other functions
Adding suffix other functions, ExtractedOnly mode uses other functions
Adding okay_as_input other functions, ExtractedOnly mode uses other functions
Adding grok_format other functions, ExtractedOnly mode uses other functions
Adding prepare_io other functions, ExtractedOnly mode uses other functions
Adding linear_input other functions, ExtractedOnly mode uses other functions
Adding linear_output other functions, ExtractedOnly mode uses other functions
Adding ulaw_input other functions, ExtractedOnly mode uses other functions
Adding ulaw_output other functions, ExtractedOnly mode uses other functions
Adding alaw_input other functions, ExtractedOnly mode uses other functions
Adding alaw_output other functions, ExtractedOnly mode uses other functions
Adding audio_init_input other functions, ExtractedOnly mode uses other functions
Adding get_u32 other functions, ExtractedOnly mode uses other functions
Adding audio_init_output other functions, ExtractedOnly mode uses other functions
Adding put_u32 other functions, ExtractedOnly mode uses other functions
Adding gsm_add other functions, ExtractedOnly mode uses other functions
Adding gsm_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r other functions, ExtractedOnly mode uses other functions
Adding gsm_abs other functions, ExtractedOnly mode uses other functions
Adding gsm_L_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_norm other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_div other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder other functions, ExtractedOnly mode uses other functions
Adding Gsm_Preprocess other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Analysis_Filter other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Decoding_of_the_coded_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_12 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_26 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_39 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_159 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Quantization_and_coding other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Synthesis_Filter other functions, ExtractedOnly mode uses other functions
Adding Postprocessing other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering other functions, ExtractedOnly mode uses other functions
Adding gsm_destroy other functions, ExtractedOnly mode uses other functions
Adding gsm_decode other functions, ExtractedOnly mode uses other functions
Adding gsm_encode other functions, ExtractedOnly mode uses other functions
Adding gsm_explode other functions, ExtractedOnly mode uses other functions
Adding gsm_implode other functions, ExtractedOnly mode uses other functions
Adding gsm_create other functions, ExtractedOnly mode uses other functions
Adding gsm_print other functions, ExtractedOnly mode uses other functions
Adding gsm_option other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding parse_argv00 other functions, ExtractedOnly mode uses other functions
Adding set_format0 other functions, ExtractedOnly mode uses other functions
Adding version0 other functions, ExtractedOnly mode uses other functions
Adding help0 other functions, ExtractedOnly mode uses other functions
Adding onintr0 other functions, ExtractedOnly mode uses other functions
Adding onintr1 other functions, ExtractedOnly mode uses other functions
Adding catch_signals0 other functions, ExtractedOnly mode uses other functions
Adding process0 other functions, ExtractedOnly mode uses other functions
Adding process1 other functions, ExtractedOnly mode uses other functions
Adding process2 other functions, ExtractedOnly mode uses other functions
Adding process3 other functions, ExtractedOnly mode uses other functions
Adding process4 other functions, ExtractedOnly mode uses other functions
Adding process5 other functions, ExtractedOnly mode uses other functions
Adding process6 other functions, ExtractedOnly mode uses other functions
Adding process7 other functions, ExtractedOnly mode uses other functions
Adding open_input0 other functions, ExtractedOnly mode uses other functions
Adding open_input1 other functions, ExtractedOnly mode uses other functions
Adding open_input2 other functions, ExtractedOnly mode uses other functions
Adding open_input3 other functions, ExtractedOnly mode uses other functions
Adding open_input4 other functions, ExtractedOnly mode uses other functions
Adding open_output0 other functions, ExtractedOnly mode uses other functions
Adding open_output1 other functions, ExtractedOnly mode uses other functions
Adding open_output2 other functions, ExtractedOnly mode uses other functions
Adding open_output3 other functions, ExtractedOnly mode uses other functions
Adding open_output4 other functions, ExtractedOnly mode uses other functions
Adding process_decode0 other functions, ExtractedOnly mode uses other functions
Adding process_encode0 other functions, ExtractedOnly mode uses other functions
Adding update_times0 other functions, ExtractedOnly mode uses other functions
Adding update_mode0 other functions, ExtractedOnly mode uses other functions
Adding update_own0 other functions, ExtractedOnly mode uses other functions
Adding length_okay0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace1 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace2 other functions, ExtractedOnly mode uses other functions
Adding endname0 other functions, ExtractedOnly mode uses other functions
Adding normalname0 other functions, ExtractedOnly mode uses other functions
Adding normalname1 other functions, ExtractedOnly mode uses other functions
Adding normalname2 other functions, ExtractedOnly mode uses other functions
Adding normalname3 other functions, ExtractedOnly mode uses other functions
Adding emalloc0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input1 other functions, ExtractedOnly mode uses other functions
Adding grok_format0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input1 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input2 other functions, ExtractedOnly mode uses other functions
Adding ulaw_output0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input1 other functions, ExtractedOnly mode uses other functions
Adding alaw_input2 other functions, ExtractedOnly mode uses other functions
Adding alaw_output0 other functions, ExtractedOnly mode uses other functions
Adding audio_init_input0 other functions, ExtractedOnly mode uses other functions
Adding get_u320 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult0 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub1 other functions, ExtractedOnly mode uses other functions
Adding gsm_norm0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_div0 other functions, ExtractedOnly mode uses other functions
Adding gsm_div1 other functions, ExtractedOnly mode uses other functions
Adding gsm_div2 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding0 other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection4 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization6 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization7 other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters0 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters1 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters2 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters3 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters5 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters6 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters7 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters8 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters9 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters10 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters11 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering3 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_120 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_260 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_390 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1590 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1591 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation0 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation1 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation2 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation3 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation4 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation5 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation6 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation7 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation8 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation9 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation10 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation11 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation12 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation13 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation14 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation15 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation16 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients0 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients1 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients2 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients3 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients4 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients5 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients6 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients7 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients8 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios0 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios1 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios2 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios3 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering2 other functions, ExtractedOnly mode uses other functions
Adding Postprocessing0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding gsm_explode0 other functions, ExtractedOnly mode uses other functions
Adding gsm_implode0 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:274
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
Transformation_to_Log_Area_Ratios0
Gsm_Short_Term_Synthesis_Filter
linear_input
length_okay0
Short_term_analysis_filtering1
Coefficients_27_39
Short_term_analysis_filtering
ok_to_replace
audio_init_input
Gsm_RPE_Encoding
Gsm_Long_Term_Synthesis_Filtering
process_encode0
Weighting_filter0
gsm_asr
Coefficients_40_1590
process_decode0
Gsm_Long_Term_Predictor0
open_input
open_output2
gsm_L_sub1
gsm_L_asl2
Postprocessing0
Gsm_Coder1
endname0
gsm_debug_word0
open_output3
onintr0
version
Gsm_RPE_Encoding0
process1
gsm_norm0
APCM_quantization_xmaxc_to_exp_mant
Autocorrelation8
gsm_asr0
endname
gsm_debug_words
Coefficients_40_159
gsm_mult_r0
Reflection_coefficients5
Gsm_Coder
APCM_quantization4
normalname0
gsm_L_mult
gsm_asl
generic_init
Autocorrelation3
help
APCM_quantization7
process0
gsm_L_asl0
grok_format
Autocorrelation11
Reflection_coefficients3
gsm_debug_longwords0
catch_signals0
open_input0
parse_argv00
Gsm_Long_Term_Synthesis_Filtering2
process7
Calculation_of_the_LTP_parameters5
audio_init_input0
process4
Gsm_Decoder
RPE_grid_selection5
RPE_grid_selection0
Decoding_of_the_coded_Log_Area_Ratios
Coefficients_13_26
Gsm_RPE_Decoding
grok_format0
Calculation_of_the_LTP_parameters
Gsm_Coder0
gsm_div0
open_output0
gsm_L_add0
Short_term_synthesis_filtering
Autocorrelation13
suffix
gsm_asl1
APCM_inverse_quantization
gsm_L_asl
alaw_input1
Transformation_to_Log_Area_Ratios3
APCM_quantization0
ulaw_output0
gsm_mult0
open_output4
normalname2
Calculation_of_the_LTP_parameters9
gsm_decode
Reflection_coefficients2
RPE_grid_positioning0
APCM_quantization_xmaxc_to_exp_mant0
Autocorrelation
update_mode
Long_term_analysis_filtering0
RPE_grid_positioning
gsm_abs
RPE_grid_positioning1
gsm_L_asl1
gsm_L_asr1
open_output
gsm_destroy
open_input4
Coefficients_27_390
LARp_to_rp
Short_term_synthesis_filtering0
gsm_implode0
gsm_debug_words0
gsm_debug_longword
Postprocessing
Autocorrelation0
Calculation_of_the_LTP_parameters6
alaw_output
gsm_L_sub
Reflection_coefficients0
Weighting_filter
RPE_grid_positioning2
Coefficients_13_260
Gsm_Preprocess
ulaw_input2
ok_to_replace1
APCM_quantization3
Calculation_of_the_LTP_parameters10
length_okay
Autocorrelation14
APCM_quantization_xmaxc_to_exp_mant2
gsm_L_add
Autocorrelation7
gsm_L_asr
gsm_L_asr2
onintr1
process2
process5
Reflection_coefficients
ulaw_output
RPE_grid_selection
alaw_input0
Transformation_to_Log_Area_Ratios
normalname3
Calculation_of_the_LTP_parameters0
RPE_grid_selection3
help0
Calculation_of_the_LTP_parameters1
alaw_output0
gsm_create
gsm_implode
gsm_debug_word
gsm_L_sub0
RPE_grid_positioning4
catch_signals
gsm_asr2
set_format
Autocorrelation1
Gsm_LPC_Analysis0
Reflection_coefficients7
Long_term_analysis_filtering3
Autocorrelation2
Reflection_coefficients6
gsm_norm
RPE_grid_positioning3
okay_as_input
Coefficients_40_1591
Long_term_analysis_filtering
Short_term_analysis_filtering0
APCM_inverse_quantization0
APCM_quantization_xmaxc_to_exp_mant4
gsm_debug_longwords
ulaw_input
Gsm_Long_Term_Synthesis_Filtering0
version0
gsm_L_add1
APCM_quantization6
APCM_quantization2
process3
Coefficients_0_120
Calculation_of_the_LTP_parameters4
gsm_debug_words2
gsm_sub
gsm_div1
process_encode
ulaw_input1
gsm_asl2
RPE_grid_selection4
open_input2
parse_argv0
gsm_debug_longwords2
Calculation_of_the_LTP_parameters11
Long_term_analysis_filtering2
APCM_quantization_xmaxc_to_exp_mant1
plainname
update_times0
ok_to_replace0
Quantization_and_coding
get_u32
audio_init_output
Calculation_of_the_LTP_parameters3
Transformation_to_Log_Area_Ratios1
Reflection_coefficients1
process6
Gsm_Long_Term_Predictor
Autocorrelation5
Calculation_of_the_LTP_parameters2
put_u32
Gsm_RPE_Decoding0
APCM_quantization1
Gsm_LPC_Analysis
emalloc
Autocorrelation6
open_input1
alaw_input2
APCM_quantization_xmaxc_to_exp_mant3
Autocorrelation4
gsm_asl0
Autocorrelation15
open_output1
Gsm_Short_Term_Analysis_Filter
main
gsm_debug_longword0
gsm_debug_longwords1
open_input3
gsm_asr1
emalloc0
normalname1
gsm_L_asr0
gsm_mult_r
gsm_div2
onintr
ulaw_input0
Long_term_analysis_filtering1
RPE_grid_selection1
Coefficients_0_12
process_decode
APCM_quantization
APCM_quantization5
Autocorrelation10
normalname
gsm_option
update_own0
Autocorrelation9
prepare_io
gsm_mult
codename
Autocorrelation12
main0
gsm_div
gsm_explode
okay_as_input0
Reflection_coefficients4
alaw_input
get_u320
LARp_to_rp0
update_mode0
Reflection_coefficients8
Short_term_analysis_filtering2
update_times
linear_output
Calculation_of_the_LTP_parameters7
gsm_encode
gsm_explode0
okay_as_input1
ok_to_replace2
Transformation_to_Log_Area_Ratios2
gsm_print
RPE_grid_selection2
Calculation_of_the_LTP_parameters8
set_format0
gsm_add
update_own
Gsm_Long_Term_Synthesis_Filtering1
Gsm_Decoder0
process
gsm_debug_words1
Short_term_synthesis_filtering1
Autocorrelation16
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 274 function, while filter count is 27
Functions called in loop
Function call numbers
parse_argv0 -- 1
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 260
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 261
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @optind = external global i32, align 4 in:   store i32 %or, i32* @f_precious, align 4, !control_dep_instr !12, !data_dep_instr !8 off: 0
No reaching definition for: @stdout = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %S = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %S.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %R = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %R.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_common_0_3.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_temp.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %i.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp3 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp3.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sp.el = alloca i16*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sl.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %scalauto = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %scalauto.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_denum = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_denum.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_num = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_num.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %c.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %reply = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %reply.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %tmp = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %tmp.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: linear_output
DEF-USE: no information for: alaw_output
DEF-USE: no information for: linear_input
DEF-USE: no information for: generic_init
DEF-USE: no information for: alaw_input
DEF-USE: no information for: ulaw_output
DEF-USE: no information for: audio_init_input
DEF-USE: no information for: audio_init_output
DEF-USE: no information for: ulaw_input
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: onintr
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 27
 Skipping function per FilterFunctionPass:generic_init
Collecting defining blocks for main
 Skipping function per FilterFunctionPass:parse_argv0
 Skipping function per FilterFunctionPass:set_format
 Skipping function per FilterFunctionPass:version
 Skipping function per FilterFunctionPass:help
 Skipping function per FilterFunctionPass:onintr
 Skipping function per FilterFunctionPass:catch_signals
Collecting defining blocks for process
 Skipping function per FilterFunctionPass:open_input
 Skipping function per FilterFunctionPass:open_output
 Skipping function per FilterFunctionPass:process_decode
 Skipping function per FilterFunctionPass:process_encode
 Skipping function per FilterFunctionPass:update_times
 Skipping function per FilterFunctionPass:update_mode
 Skipping function per FilterFunctionPass:update_own
 Skipping function per FilterFunctionPass:plainname
 Skipping function per FilterFunctionPass:codename
 Skipping function per FilterFunctionPass:length_okay
 Skipping function per FilterFunctionPass:ok_to_replace
 Skipping function per FilterFunctionPass:endname
 Skipping function per FilterFunctionPass:normalname
 Skipping function per FilterFunctionPass:emalloc
 Skipping function per FilterFunctionPass:suffix
 Skipping function per FilterFunctionPass:okay_as_input
 Skipping function per FilterFunctionPass:grok_format
 Skipping function per FilterFunctionPass:prepare_io
 Skipping function per FilterFunctionPass:linear_input
 Skipping function per FilterFunctionPass:linear_output
 Skipping function per FilterFunctionPass:ulaw_input
 Skipping function per FilterFunctionPass:ulaw_output
 Skipping function per FilterFunctionPass:alaw_input
Collecting defining blocks for alaw_output
 Skipping function per FilterFunctionPass:audio_init_input
 Skipping function per FilterFunctionPass:get_u32
Collecting defining blocks for audio_init_output
 Skipping function per FilterFunctionPass:put_u32
Collecting defining blocks for gsm_add
 Skipping function per FilterFunctionPass:gsm_sub
 Skipping function per FilterFunctionPass:gsm_mult
 Skipping function per FilterFunctionPass:gsm_mult_r
 Skipping function per FilterFunctionPass:gsm_abs
 Skipping function per FilterFunctionPass:gsm_L_mult
 Skipping function per FilterFunctionPass:gsm_L_add
 Skipping function per FilterFunctionPass:gsm_L_sub
Collecting defining blocks for gsm_norm
Skip. No dependence graph for function gsm_L_asl
 Skipping function per FilterFunctionPass:gsm_L_asr
 Skipping function per FilterFunctionPass:gsm_asl
 Skipping function per FilterFunctionPass:gsm_asr
 Skipping function per FilterFunctionPass:gsm_div
 Skipping function per FilterFunctionPass:Gsm_Coder
 Skipping function per FilterFunctionPass:Gsm_Preprocess
 Skipping function per FilterFunctionPass:Gsm_LPC_Analysis
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Analysis_Filter
 Skipping function per FilterFunctionPass:Gsm_Long_Term_Predictor
 Skipping function per FilterFunctionPass:Gsm_RPE_Encoding
 Skipping function per FilterFunctionPass:Weighting_filter
Collecting defining blocks for RPE_grid_selection
 Skipping function per FilterFunctionPass:APCM_quantization
 Skipping function per FilterFunctionPass:APCM_inverse_quantization
 Skipping function per FilterFunctionPass:RPE_grid_positioning
 Skipping function per FilterFunctionPass:APCM_quantization_xmaxc_to_exp_mant
 Skipping function per FilterFunctionPass:Calculation_of_the_LTP_parameters
 Skipping function per FilterFunctionPass:Long_term_analysis_filtering
 Skipping function per FilterFunctionPass:Decoding_of_the_coded_Log_Area_Ratios
 Skipping function per FilterFunctionPass:Coefficients_0_12
 Skipping function per FilterFunctionPass:LARp_to_rp
 Skipping function per FilterFunctionPass:Short_term_analysis_filtering
 Skipping function per FilterFunctionPass:Coefficients_13_26
 Skipping function per FilterFunctionPass:Coefficients_27_39
 Skipping function per FilterFunctionPass:Coefficients_40_159
 Skipping function per FilterFunctionPass:Autocorrelation
 Skipping function per FilterFunctionPass:Reflection_coefficients
 Skipping function per FilterFunctionPass:Transformation_to_Log_Area_Ratios
Collecting defining blocks for Quantization_and_coding
 Skipping function per FilterFunctionPass:gsm_debug_words
 Skipping function per FilterFunctionPass:gsm_debug_longwords
 Skipping function per FilterFunctionPass:gsm_debug_longword
 Skipping function per FilterFunctionPass:gsm_debug_word
 Skipping function per FilterFunctionPass:Gsm_Decoder
 Skipping function per FilterFunctionPass:Gsm_RPE_Decoding
 Skipping function per FilterFunctionPass:Gsm_Long_Term_Synthesis_Filtering
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Synthesis_Filter
 Skipping function per FilterFunctionPass:Postprocessing
 Skipping function per FilterFunctionPass:Short_term_synthesis_filtering
Collecting defining blocks for gsm_destroy
 Skipping function per FilterFunctionPass:gsm_decode
 Skipping function per FilterFunctionPass:gsm_encode
 Skipping function per FilterFunctionPass:gsm_explode
 Skipping function per FilterFunctionPass:gsm_implode
 Skipping function per FilterFunctionPass:gsm_create
 Skipping function per FilterFunctionPass:gsm_print
 Skipping function per FilterFunctionPass:gsm_option
 Skipping function per FilterFunctionPass:generic_init
 Processing function:main
Short range hashing enabled.
Processing path: entry  while.cond  while.body  sw.default  
After path modifications process path is empty
Processing path: entry  sw.default  
After path modifications process path
entry  sw.default  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle input dependent load operand Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Processing path: entry  while.cond  while.body  sw.bb  
After path modifications process path
sw.bb  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_decode, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.epilog  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb1  
After path modifications process path
sw.bb1  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_force, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb2  
After path modifications process path
sw.bb2  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_cat, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb3  
After path modifications process path
sw.bb3  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_precious, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb4  
After path modifications process path
sw.bb4  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_fast, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb5  
After path modifications process path
sw.bb5  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_verbose, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb6  
After path modifications process path
sw.bb6  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_ulaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb7  
After path modifications process path
sw.bb7  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_linear = global %struct.fmtdesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @linear_input, i32 (i16*)* @linear_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb8  
After path modifications process path
sw.bb8  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_alaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @alaw_input, i32 (i16*)* @alaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb9  
After path modifications process path
sw.bb9  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_audio = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 ()* @audio_init_input, i32 ()* @audio_init_output, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb10  
After path modifications process path is empty
Processing path: entry  sw.bb10  
After path modifications process path
entry  sw.bb10  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb11  
After path modifications process path is empty
Processing path: entry  sw.bb11  
After path modifications process path
entry  sw.bb11  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand void (...)* bitcast (void ()* @onintr to void (...)*) of the call   call void @catch_signals(void (...)* bitcast (void ()* @onintr to void (...)*)), !control_dep_instr !12, !data_indep_instr !10
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.end  if.else  while.cond15  while.body16  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  if.else  
After path modifications process path is empty
Processing path: entry  while.end  if.else  
After path modifications process path
entry  while.end  if.else  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.end  if.else  while.cond15  while.end18  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  if.else  while.end18  
After path modifications process path is empty
Processing path: entry  while.end  if.else  while.end18  
After path modifications process path
entry  while.end  if.else  while.end18  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
 Skipping function per FilterFunctionPass:parse_argv0
 Skipping function per FilterFunctionPass:set_format
 Skipping function per FilterFunctionPass:version
 Skipping function per FilterFunctionPass:help
 Skipping function per FilterFunctionPass:onintr
 Skipping function per FilterFunctionPass:catch_signals
 Processing function:process
Short range hashing enabled.
Processing path: entry  lor.lhs.false  if.end  cond.true  
After path modifications process path
entry  lor.lhs.false  if.end  cond.true  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
Processing path: entry  lor.lhs.false  if.end  cond.false  
After path modifications process path
entry  lor.lhs.false  if.end  cond.false  
Processing path: entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
After path modifications process path
entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
Processing path: entry  err  land.lhs.true77  if.then79  if.end91  
After path modifications process path
entry  err  land.lhs.true77  if.then79  if.end91  
Processing path: entry  err  if.end92  land.lhs.true94  if.then96  
After path modifications process path
entry  err  if.end92  land.lhs.true94  if.then96  
Processing path: entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
After path modifications process path
entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
Processing path: entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
Processing path: entry  err  if.end92  if.end98  if.end103  if.end108  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  if.end108  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Skipping function per FilterFunctionPass:open_input
 Skipping function per FilterFunctionPass:open_output
 Skipping function per FilterFunctionPass:process_decode
 Skipping function per FilterFunctionPass:process_encode
 Skipping function per FilterFunctionPass:update_times
 Skipping function per FilterFunctionPass:update_mode
 Skipping function per FilterFunctionPass:update_own
 Skipping function per FilterFunctionPass:plainname
 Skipping function per FilterFunctionPass:codename
 Skipping function per FilterFunctionPass:length_okay
 Skipping function per FilterFunctionPass:ok_to_replace
 Skipping function per FilterFunctionPass:endname
 Skipping function per FilterFunctionPass:normalname
 Skipping function per FilterFunctionPass:emalloc
 Skipping function per FilterFunctionPass:suffix
 Skipping function per FilterFunctionPass:okay_as_input
 Skipping function per FilterFunctionPass:grok_format
 Skipping function per FilterFunctionPass:prepare_io
 Skipping function per FilterFunctionPass:linear_input
 Skipping function per FilterFunctionPass:linear_output
 Skipping function per FilterFunctionPass:ulaw_input
 Skipping function per FilterFunctionPass:ulaw_output
 Skipping function per FilterFunctionPass:alaw_input
 Processing function:alaw_output
Short range hashing enabled.
Processing path: entry  for.cond  for.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  for.cond  for.body  if.end  for.inc  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:audio_init_input
 Skipping function per FilterFunctionPass:get_u32
 Processing function:audio_init_output
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
 Skipping function per FilterFunctionPass:put_u32
 Processing function:gsm_add
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end7  
After path modifications process path
entry  cond.end7  
Processing path: entry  cond.false  cond.true5  
After path modifications process path
entry  cond.false  cond.true5  
Processing path: entry  cond.false  cond.end  
After path modifications process path
entry  cond.false  cond.end  
Processing path: entry  cond.false  cond.false6  
After path modifications process path
entry  cond.false  cond.false6  
 Skipping function per FilterFunctionPass:gsm_sub
 Skipping function per FilterFunctionPass:gsm_mult
 Skipping function per FilterFunctionPass:gsm_mult_r
 Skipping function per FilterFunctionPass:gsm_abs
 Skipping function per FilterFunctionPass:gsm_L_mult
 Skipping function per FilterFunctionPass:gsm_L_add
 Skipping function per FilterFunctionPass:gsm_L_sub
 Processing function:gsm_norm
Short range hashing enabled.
Processing path: entry  cond.true  cond.end  if.then  if.then3  
After path modifications process path
entry  cond.true  cond.end  if.then  if.then3  
Processing path: entry  cond.true  cond.end  if.then  if.end  
After path modifications process path
entry  cond.true  cond.end  if.then  if.end  
Processing path: entry  cond.true  cond.end  return  
After path modifications process path
entry  cond.true  cond.end  return  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
Processing path: entry  cond.true  cond.end  if.end4  cond.end33  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.end33  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Skip. No dependence graph for function gsm_L_asl
 Skipping function per FilterFunctionPass:gsm_L_asr
 Skipping function per FilterFunctionPass:gsm_asl
 Skipping function per FilterFunctionPass:gsm_asr
 Skipping function per FilterFunctionPass:gsm_div
 Skipping function per FilterFunctionPass:Gsm_Coder
 Skipping function per FilterFunctionPass:Gsm_Preprocess
 Skipping function per FilterFunctionPass:Gsm_LPC_Analysis
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Analysis_Filter
 Skipping function per FilterFunctionPass:Gsm_Long_Term_Predictor
 Skipping function per FilterFunctionPass:Gsm_RPE_Encoding
 Skipping function per FilterFunctionPass:Weighting_filter
 Processing function:RPE_grid_selection
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %x.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  if.end  if.then235  
After path modifications process path
entry  if.end  if.then235  
Processing path: entry  if.end  if.end236  if.then246  
After path modifications process path
entry  if.end  if.end236  if.then246  
Processing call instruction..
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  if.end  if.end236  if.end247  
After path modifications process path
entry  if.end  if.end236  if.end247  
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  if.end236  if.end247  for.end  
After path modifications process path
entry  if.end  if.end236  if.end247  for.end  
Processing call instruction..
Can't handle this operand   %Mc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
 Skipping function per FilterFunctionPass:APCM_quantization
 Skipping function per FilterFunctionPass:APCM_inverse_quantization
 Skipping function per FilterFunctionPass:RPE_grid_positioning
 Skipping function per FilterFunctionPass:APCM_quantization_xmaxc_to_exp_mant
 Skipping function per FilterFunctionPass:Calculation_of_the_LTP_parameters
 Skipping function per FilterFunctionPass:Long_term_analysis_filtering
 Skipping function per FilterFunctionPass:Decoding_of_the_coded_Log_Area_Ratios
 Skipping function per FilterFunctionPass:Coefficients_0_12
 Skipping function per FilterFunctionPass:LARp_to_rp
 Skipping function per FilterFunctionPass:Short_term_analysis_filtering
 Skipping function per FilterFunctionPass:Coefficients_13_26
 Skipping function per FilterFunctionPass:Coefficients_27_39
 Skipping function per FilterFunctionPass:Coefficients_40_159
 Skipping function per FilterFunctionPass:Autocorrelation
 Skipping function per FilterFunctionPass:Reflection_coefficients
 Skipping function per FilterFunctionPass:Transformation_to_Log_Area_Ratios
 Processing function:Quantization_and_coding
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  cond.true14  
After path modifications process path
entry  cond.end  cond.true14  
Processing path: entry  cond.end  cond.end20  cond.true29  
After path modifications process path
entry  cond.end  cond.end20  cond.true29  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.true52  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.true52  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.false57  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.false57  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.true34  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.true34  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.end38  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.end38  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.false35  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.false35  
Processing path: entry  cond.end  cond.false19  
After path modifications process path
entry  cond.end  cond.false19  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Skipping function per FilterFunctionPass:gsm_debug_words
 Skipping function per FilterFunctionPass:gsm_debug_longwords
 Skipping function per FilterFunctionPass:gsm_debug_longword
 Skipping function per FilterFunctionPass:gsm_debug_word
 Skipping function per FilterFunctionPass:Gsm_Decoder
 Skipping function per FilterFunctionPass:Gsm_RPE_Decoding
 Skipping function per FilterFunctionPass:Gsm_Long_Term_Synthesis_Filtering
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Synthesis_Filter
 Skipping function per FilterFunctionPass:Postprocessing
 Skipping function per FilterFunctionPass:Short_term_synthesis_filtering
 Processing function:gsm_destroy
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:gsm_decode
 Skipping function per FilterFunctionPass:gsm_encode
 Skipping function per FilterFunctionPass:gsm_explode
 Skipping function per FilterFunctionPass:gsm_implode
 Skipping function per FilterFunctionPass:gsm_create
 Skipping function per FilterFunctionPass:gsm_print
 Skipping function per FilterFunctionPass:gsm_option
Extract path function for assertion assert_gsm_destroy_path_0
Extract path function for assertion assert_gsm_destroy_path_1
Extract path function for assertion assert_gsm_norm_path_0
Extract path function for assertion assert_gsm_norm_path_1
Extract path function for assertion assert_gsm_norm_path_2
Extract path function for assertion assert_gsm_norm_path_3
Extract path function for assertion assert_gsm_norm_path_4
Extract path function for assertion assert_gsm_norm_path_5
Extract path function for assertion assert_gsm_norm_path_6
Extract path function for assertion assert_gsm_norm_path_7
Extract path function for assertion assert_gsm_norm_path_8
Extract path function for assertion assert_gsm_norm_path_9
Extract path function for assertion assert_gsm_norm_path_10
Extract path function for assertion assert_gsm_add_path_0
Extract path function for assertion assert_gsm_add_path_1
Extract path function for assertion assert_gsm_add_path_2
Extract path function for assertion assert_gsm_add_path_3
Extract path function for assertion assert_gsm_add_path_4
Extract path function for assertion assert_main_path_2
Extract path function for assertion assert_main_path_6
Extract path function for assertion assert_main_path_8
Extract path function for assertion assert_main_path_10
Extract path function for assertion assert_main_path_12
Extract path function for assertion assert_main_path_14
Extract path function for assertion assert_main_path_29
Extract path function for assertion assert_main_path_31
Extract path function for assertion assert_main_path_34
Extract path function for assertion assert_main_path_37
Extract path function for assertion assert_process_path_0
Extract path function for assertion assert_process_path_1
Extract path function for assertion assert_process_path_2
Extract path function for assertion assert_process_path_3
Extract path function for assertion assert_process_path_4
Extract path function for assertion assert_process_path_5
Extract path function for assertion assert_process_path_6
Extract path function for assertion assert_process_path_7
Extract path function for assertion assert_process_path_8
Extract path function for assertion assert_process_path_9
Extract path function for assertion assert_process_path_10
Extract path function for assertion assert_process_path_11
Extract path function for assertion assert_process_path_12
Extract path function for assertion assert_process_path_13
Extract path function for assertion assert_process_path_14
Extract path function for assertion assert_process_path_15
Extract path function for assertion assert_process_path_16
Extract path function for assertion assert_process_path_17
Extract path function for assertion assert_process_path_18
Extract path function for assertion assert_process_path_19
Extract path function for assertion assert_process_path_20
Extract path function for assertion assert_process_path_21
Extract path function for assertion assert_process_path_22
Extract path function for assertion assert_process_path_23
Extract path function for assertion assert_process_path_24
Extract path function for assertion assert_process_path_25
Extract path function for assertion assert_process_path_26
Extract path function for assertion assert_process_path_27
Extract path function for assertion assert_process_path_28
Extract path function for assertion assert_process_path_29
Extract path function for assertion assert_process_path_30
Extract path function for assertion assert_Quantization_and_coding_path_0
Extract path function for assertion assert_Quantization_and_coding_path_1
Extract path function for assertion assert_Quantization_and_coding_path_2
Extract path function for assertion assert_Quantization_and_coding_path_3
Extract path function for assertion assert_Quantization_and_coding_path_4
Extract path function for assertion assert_Quantization_and_coding_path_5
Extract path function for assertion assert_Quantization_and_coding_path_6
Extract path function for assertion assert_Quantization_and_coding_path_7
Extract path function for assertion assert_Quantization_and_coding_path_8
Extract path function for assertion assert_Quantization_and_coding_path_9
Extract path function for assertion assert_Quantization_and_coding_path_10
Extract path function for assertion assert_Quantization_and_coding_path_11
Extract path function for assertion assert_Quantization_and_coding_path_12
Extract path function for assertion assert_Quantization_and_coding_path_13
Extract path function for assertion assert_Quantization_and_coding_path_14
Extract path function for assertion assert_Quantization_and_coding_path_15
Extract path function for assertion assert_Quantization_and_coding_path_16
Extract path function for assertion assert_Quantization_and_coding_path_17
Extract path function for assertion assert_Quantization_and_coding_path_18
Extract path function for assertion assert_Quantization_and_coding_path_19
Extract path function for assertion assert_Quantization_and_coding_path_20
Extract path function for assertion assert_Quantization_and_coding_path_21
Extract path function for assertion assert_Quantization_and_coding_path_22
Extract path function for assertion assert_Quantization_and_coding_path_23
Extract path function for assertion assert_Quantization_and_coding_path_24
Extract path function for assertion assert_Quantization_and_coding_path_25
Extract path function for assertion assert_Quantization_and_coding_path_26
Extract path function for assertion assert_Quantization_and_coding_path_27
Extract path function for assertion assert_Quantization_and_coding_path_28
Extract path function for assertion assert_Quantization_and_coding_path_29
Extract path function for assertion assert_Quantization_and_coding_path_30
Extract path function for assertion assert_Quantization_and_coding_path_31
Extract path function for assertion assert_Quantization_and_coding_path_32
Extract path function for assertion assert_Quantization_and_coding_path_33
Extract path function for assertion assert_Quantization_and_coding_path_34
Extract path function for assertion assert_Quantization_and_coding_path_35
Extract path function for assertion assert_Quantization_and_coding_path_36
Extract path function for assertion assert_Quantization_and_coding_path_37
Extract path function for assertion assert_Quantization_and_coding_path_38
Extract path function for assertion assert_Quantization_and_coding_path_39
Extract path function for assertion assert_Quantization_and_coding_path_40
Extract path function for assertion assert_Quantization_and_coding_path_41
Extract path function for assertion assert_Quantization_and_coding_path_42
Extract path function for assertion assert_Quantization_and_coding_path_43
Extract path function for assertion assert_Quantization_and_coding_path_44
Extract path function for assertion assert_Quantization_and_coding_path_45
Extract path function for assertion assert_Quantization_and_coding_path_46
Extract path function for assertion assert_Quantization_and_coding_path_47
Extract path function for assertion assert_Quantization_and_coding_path_48
Extract path function for assertion assert_Quantization_and_coding_path_49
Extract path function for assertion assert_Quantization_and_coding_path_50
Extract path function for assertion assert_Quantization_and_coding_path_51
Extract path function for assertion assert_Quantization_and_coding_path_52
Extract path function for assertion assert_Quantization_and_coding_path_53
Extract path function for assertion assert_Quantization_and_coding_path_54
Extract path function for assertion assert_Quantization_and_coding_path_55
Extract path function for assertion assert_Quantization_and_coding_path_56
Extract path function for assertion assert_Quantization_and_coding_path_57
Extract path function for assertion assert_Quantization_and_coding_path_58
Extract path function for assertion assert_Quantization_and_coding_path_59
Extract path function for assertion assert_Quantization_and_coding_path_60
Extract path function for assertion assert_Quantization_and_coding_path_61
Extract path function for assertion assert_Quantization_and_coding_path_62
Extract path function for assertion assert_Quantization_and_coding_path_63
Extract path function for assertion assert_Quantization_and_coding_path_64
Extract path function for assertion assert_alaw_output_path_1
Extract path function for assertion assert_alaw_output_path_3
Extract path function for assertion assert_alaw_output_path_5
Extract path function for assertion assert_alaw_output_path_7
Extract path function for assertion assert_RPE_grid_selection_path_0
Extract path function for assertion assert_RPE_grid_selection_path_1
Extract path function for assertion assert_RPE_grid_selection_path_2
Extract path function for assertion assert_RPE_grid_selection_path_3
Extract path function for assertion assert_RPE_grid_selection_path_4
Extract path function for assertion assert_RPE_grid_selection_path_6
Extract path function for assertion assert_audio_init_output_path_0
Extract path function for assertion assert_audio_init_output_path_1
Extract path function for assertion assert_audio_init_output_path_2
OH stats is requested, dumping stat file...
Processed instructions number 10210
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 8,
    "numberOfDataDependentInstructions": 1000,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 8740,
    "numberOfInstructionsInFunctionsWithNoDG": 24,
    "numberOfNonHashableBlocks": 14,
    "numberOfNonHashableInstructions": 40,
    "numberOfOHProcessedInstr": 1446,
    "numberOfOtherUnprotectedInstructions": 6,
    "numberOfOtherUnprotectedLoopVariantInstructions": 1,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 9,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 1,
    "numberOfSensitiveBlocks": 241,
    "numberOfSensitiveFunctions": 9,
    "numberOfShortRangeAssertCalls": 137,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 216,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 188,
    "numberOfUnprotectedArgumentReachableInstructions": 91,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 10,
    "numberOfUnprotectedGlobalReachableInstructions": 75,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 44
}
ERR. processed 9 function, while filter count is 27
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 38.1473 seconds (38.1706 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  32.6722 ( 86.1%)   0.1280 ( 64.3%)  32.8002 ( 86.0%)  32.8235 ( 86.0%)  Instruments bitcode with hashing and logging functions
   5.0699 ( 13.4%)   0.0679 ( 34.1%)   5.1378 ( 13.5%)   5.1378 ( 13.5%)  runs input dependency analysis
   0.1130 (  0.3%)   0.0023 (  1.2%)   0.1153 (  0.3%)   0.1153 (  0.3%)  Memory SSA
   0.0411 (  0.1%)   0.0000 (  0.0%)   0.0411 (  0.1%)   0.0412 (  0.1%)  Bitcode Writer
   0.0126 (  0.0%)   0.0004 (  0.2%)   0.0130 (  0.0%)   0.0131 (  0.0%)  Dominator Tree Construction
   0.0122 (  0.0%)   0.0000 (  0.0%)   0.0122 (  0.0%)   0.0121 (  0.0%)  Module Verifier
   0.0060 (  0.0%)   0.0002 (  0.1%)   0.0062 (  0.0%)   0.0062 (  0.0%)  Natural Loop Information
   0.0049 (  0.0%)   0.0001 (  0.0%)   0.0049 (  0.0%)   0.0051 (  0.0%)  Dominator Tree Construction
   0.0050 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)   0.0050 (  0.0%)  Post-Dominator Tree Construction
   0.0031 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)   0.0032 (  0.0%)  Natural Loop Information
   0.0022 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)   0.0022 (  0.0%)  Instruments bitcode with guards
   0.0021 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Include functions in a given file in any transformation
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Call site information
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Remove unreachable blocks from the CFG
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  runs indirect and virtual calls analysis
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  37.9483 (100.0%)   0.1990 (100.0%)  38.1473 (100.0%)  38.1706 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0329 seconds (0.0329 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0284 (100.0%)   0.0045 (100.0%)   0.0329 (100.0%)   0.0329 (100.0%)  Parse IR
   0.0284 (100.0%)   0.0045 (100.0%)   0.0329 (100.0%)   0.0329 (100.0%)  Total

Running input dependency analysis pass
Processing function generic_init
Processing function endname0
Processing function endname
Processing function parse_argv00
Processing function parse_argv0
Processing function set_format0
Processing function set_format
Processing function version0
Processing function version
Processing function help0
Processing function help
Processing function main0
Processing function catch_signals0
Did not find function assigned   store void (...)* %1, void (...)** %fun.addr.el, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Did not find function assigned   store void (...)* %18, void (...)** %17, !extraction_store !12, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Processing function catch_signals
Did not find function assigned   store void (...)* %fun, void (...)** %fun.addr, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
Processing function open_input0
Processing function normalname0
Processing function emalloc0
Processing function onintr0
Processing function onintr1
Processing function onintr
Processing function emalloc
Processing function suffix
Processing function normalname1
Processing function normalname2
Processing function normalname3
Processing function normalname
Processing function codename
Processing function open_input1
Processing function open_input2
Processing function open_input3
Processing function open_input4
Processing function okay_as_input0
Processing function okay_as_input1
Processing function okay_as_input
Processing function plainname
Processing function grok_format0
Processing function grok_format
Processing function prepare_io
Processing function open_input
Processing function open_output0
Processing function length_okay0
Processing function length_okay
Processing function open_output1
Processing function ok_to_replace0
Processing function ok_to_replace1
Processing function ok_to_replace2
Processing function ok_to_replace
Processing function open_output2
Processing function open_output3
Processing function open_output4
Processing function open_output
Processing function update_times0
Processing function update_times
Processing function update_mode0
Processing function update_mode
Processing function update_own0
Processing function update_own
Processing function process0
Processing function process1
Processing function process2
Processing function process3
Processing function process4
Processing function process5
Processing function process6
Processing function process7
Processing function process
Processing function main
Processing function gsm_create
Processing function process_decode0
Processing function gsm_option
Processing function gsm_destroy
Processing function APCM_quantization_xmaxc_to_exp_mant0
Processing function APCM_quantization_xmaxc_to_exp_mant1
Processing function APCM_quantization_xmaxc_to_exp_mant2
Processing function APCM_quantization_xmaxc_to_exp_mant3
Processing function APCM_quantization_xmaxc_to_exp_mant4
Processing function APCM_quantization_xmaxc_to_exp_mant
Processing function gsm_sub
Processing function gsm_asl0
Processing function gsm_asr0
Processing function gsm_asr1
Processing function gsm_asr2
Processing function gsm_asr
Processing function gsm_asl1
Processing function gsm_asl2
Processing function gsm_asl
Processing function APCM_inverse_quantization0
Processing function APCM_inverse_quantization
Processing function RPE_grid_positioning0
Processing function RPE_grid_positioning1
Processing function RPE_grid_positioning2
Processing function RPE_grid_positioning3
Processing function RPE_grid_positioning4
Processing function RPE_grid_positioning
Processing function Gsm_RPE_Decoding0
Processing function Gsm_RPE_Decoding
Processing function Gsm_Long_Term_Synthesis_Filtering0
Processing function Gsm_Long_Term_Synthesis_Filtering1
Processing function Gsm_Long_Term_Synthesis_Filtering2
Processing function Gsm_Long_Term_Synthesis_Filtering
Processing function Gsm_Decoder0
Processing function Decoding_of_the_coded_Log_Area_Ratios
Processing function Coefficients_0_120
Processing function Coefficients_0_12
Processing function LARp_to_rp0
Processing function LARp_to_rp
Processing function Short_term_synthesis_filtering0
Processing function Short_term_synthesis_filtering1
Processing function Short_term_synthesis_filtering
Processing function Coefficients_13_260
Processing function Coefficients_13_26
Processing function Coefficients_27_390
Processing function Coefficients_27_39
Processing function Coefficients_40_1590
Processing function Coefficients_40_1591
Processing function Coefficients_40_159
Processing function Gsm_Short_Term_Synthesis_Filter
Processing function Postprocessing0
Processing function Postprocessing
Processing function Gsm_Decoder
Processing function gsm_decode
Processing function process_decode
Processing function process_encode0
Processing function Gsm_Preprocess
Processing function Autocorrelation0
Processing function gsm_norm0
Processing function gsm_norm
Processing function Autocorrelation1
Processing function Autocorrelation2
Processing function Autocorrelation3
Processing function Autocorrelation4
Processing function Autocorrelation5
Processing function Autocorrelation6
Processing function Autocorrelation7
Processing function Autocorrelation8
Processing function Autocorrelation9
Processing function Autocorrelation10
Processing function Autocorrelation11
Processing function Autocorrelation12
Processing function Autocorrelation13
Processing function Autocorrelation14
Processing function Autocorrelation15
Processing function Autocorrelation16
Processing function Autocorrelation
Processing function Reflection_coefficients0
Processing function Reflection_coefficients1
Processing function Reflection_coefficients2
Processing function Reflection_coefficients3
Processing function Reflection_coefficients4
Processing function Reflection_coefficients5
Processing function Reflection_coefficients6
Processing function gsm_div0
Processing function gsm_div1
Processing function gsm_div2
Processing function gsm_div
Processing function Reflection_coefficients7
Processing function Reflection_coefficients8
Processing function Reflection_coefficients
Processing function Transformation_to_Log_Area_Ratios0
Processing function Transformation_to_Log_Area_Ratios1
Processing function Transformation_to_Log_Area_Ratios2
Processing function Transformation_to_Log_Area_Ratios3
Processing function Transformation_to_Log_Area_Ratios
Processing function Quantization_and_coding
Processing function Gsm_LPC_Analysis0
Processing function Gsm_LPC_Analysis
Processing function Short_term_analysis_filtering0
Processing function Short_term_analysis_filtering1
Processing function Short_term_analysis_filtering2
Processing function Short_term_analysis_filtering
Processing function Gsm_Short_Term_Analysis_Filter
Processing function Calculation_of_the_LTP_parameters0
Processing function Calculation_of_the_LTP_parameters1
Processing function Calculation_of_the_LTP_parameters2
Processing function Calculation_of_the_LTP_parameters3
Processing function Calculation_of_the_LTP_parameters4
Processing function Calculation_of_the_LTP_parameters5
Processing function Calculation_of_the_LTP_parameters6
Processing function Calculation_of_the_LTP_parameters7
Processing function Calculation_of_the_LTP_parameters8
Processing function Calculation_of_the_LTP_parameters9
Processing function gsm_mult0
Processing function gsm_mult
Processing function Calculation_of_the_LTP_parameters10
Processing function Calculation_of_the_LTP_parameters11
Processing function Calculation_of_the_LTP_parameters
Processing function Long_term_analysis_filtering0
Processing function Long_term_analysis_filtering1
Processing function Long_term_analysis_filtering2
Processing function Long_term_analysis_filtering3
Processing function Long_term_analysis_filtering
Processing function Gsm_Long_Term_Predictor0
Processing function Gsm_Long_Term_Predictor
Processing function Weighting_filter0
Processing function Weighting_filter
Processing function RPE_grid_selection0
Processing function RPE_grid_selection1
Processing function RPE_grid_selection2
Processing function RPE_grid_selection3
Processing function RPE_grid_selection4
Processing function RPE_grid_selection5
Processing function RPE_grid_selection
Processing function APCM_quantization0
Processing function APCM_quantization1
Processing function APCM_quantization2
Processing function APCM_quantization3
Processing function gsm_add
Processing function APCM_quantization4
Processing function APCM_quantization5
Processing function APCM_quantization6
Processing function APCM_quantization7
Processing function APCM_quantization
Processing function Gsm_RPE_Encoding0
Processing function Gsm_RPE_Encoding
Processing function Gsm_Coder0
Processing function Gsm_Coder1
Processing function Gsm_Coder
Processing function gsm_encode
Processing function process_encode
Processing function linear_input
Processing function linear_output
Processing function ulaw_input0
Processing function ulaw_input1
Processing function ulaw_input2
Processing function ulaw_input
Processing function ulaw_output0
Processing function ulaw_output
Processing function alaw_input0
Processing function alaw_input1
Processing function alaw_input2
Processing function alaw_input
Processing function alaw_output0
Processing function alaw_output
Processing function get_u320
Processing function get_u32
Processing function audio_init_input0
Processing function audio_init_input
Processing function put_u32
Processing function audio_init_output
Processing function gsm_mult_r0
Processing function gsm_mult_r
Processing function gsm_abs
Processing function gsm_L_mult
Processing function gsm_L_add0
Processing function gsm_L_add1
Processing function gsm_L_add
Processing function gsm_L_sub0
Processing function gsm_L_sub1
Processing function gsm_L_sub
Processing function gsm_L_asl0
Processing function gsm_L_asr0
Processing function gsm_L_asr1
Processing function gsm_L_asr2
Processing function gsm_L_asr
Processing function gsm_L_asl1
Processing function gsm_L_asl2
Processing function gsm_L_asl
Processing function gsm_debug_words0
Processing function gsm_debug_words1
Processing function gsm_debug_words2
Processing function gsm_debug_words
Processing function gsm_debug_longwords0
Processing function gsm_debug_longwords1
Processing function gsm_debug_longwords2
Processing function gsm_debug_longwords
Processing function gsm_debug_longword0
Processing function gsm_debug_longword
Processing function gsm_debug_word0
Processing function gsm_debug_word
Processing function gsm_explode0
Processing function gsm_explode
Processing function gsm_implode0
Processing function gsm_implode
Processing function gsm_print
Finalizing gsm_print
Finalizing gsm_implode
Finalizing gsm_implode0
Mark Input dependent function gsm_implode0
Finalizing gsm_explode
Finalizing gsm_explode0
Mark Input dependent function gsm_explode0
Finalizing gsm_debug_word
Finalizing gsm_debug_word0
Mark Input dependent function gsm_debug_word0
Finalizing gsm_debug_longword
Finalizing gsm_debug_longword0
Mark Input dependent function gsm_debug_longword0
Finalizing gsm_debug_longwords
Finalizing gsm_debug_longwords2
Mark Input dependent function gsm_debug_longwords2
Finalizing gsm_debug_longwords1
Mark Input dependent function gsm_debug_longwords1
Finalizing gsm_debug_longwords0
Mark Input dependent function gsm_debug_longwords0
Finalizing gsm_debug_words
Finalizing gsm_debug_words2
Mark Input dependent function gsm_debug_words2
Finalizing gsm_debug_words1
Mark Input dependent function gsm_debug_words1
Finalizing gsm_debug_words0
Mark Input dependent function gsm_debug_words0
Finalizing gsm_L_asl
Finalizing gsm_L_asl2
Mark Input dependent function gsm_L_asl2
Finalizing gsm_L_asl1
Mark Input dependent function gsm_L_asl1
Finalizing gsm_L_asr
Mark Input dependent function gsm_L_asr
Finalizing gsm_L_asr2
Mark Input dependent function gsm_L_asr2
Finalizing gsm_L_asr1
Mark Input dependent function gsm_L_asr1
Finalizing gsm_L_asr0
Mark Input dependent function gsm_L_asr0
Finalizing gsm_L_asl0
Mark Input dependent function gsm_L_asl0
Finalizing gsm_L_sub
Finalizing gsm_L_sub1
Mark Input dependent function gsm_L_sub1
Finalizing gsm_L_sub0
Mark Input dependent function gsm_L_sub0
Finalizing gsm_L_add
Finalizing gsm_L_add1
Mark Input dependent function gsm_L_add1
Finalizing gsm_L_add0
Mark Input dependent function gsm_L_add0
Finalizing gsm_L_mult
Finalizing gsm_abs
Finalizing gsm_mult_r
Finalizing gsm_mult_r0
Mark Input dependent function gsm_mult_r0
Finalizing audio_init_output
Finalizing put_u32
Mark Input dependent function put_u32
Finalizing audio_init_input
Finalizing audio_init_input0
Mark Input dependent function audio_init_input0
Finalizing get_u32
Mark Input dependent function get_u32
Finalizing get_u320
Mark Input dependent function get_u320
Finalizing alaw_output
Finalizing alaw_output0
Mark Input dependent function alaw_output0
Finalizing alaw_input
Finalizing alaw_input2
Mark Input dependent function alaw_input2
Finalizing alaw_input1
Mark Input dependent function alaw_input1
Finalizing alaw_input0
Mark Input dependent function alaw_input0
Finalizing ulaw_output
Finalizing ulaw_output0
Mark Input dependent function ulaw_output0
Finalizing ulaw_input
Finalizing ulaw_input2
Mark Input dependent function ulaw_input2
Finalizing ulaw_input1
Mark Input dependent function ulaw_input1
Finalizing ulaw_input0
Mark Input dependent function ulaw_input0
Finalizing linear_output
Finalizing linear_input
Finalizing process_encode
Finalizing gsm_encode
Mark Input dependent function gsm_encode
Finalizing Gsm_Coder
Mark Input dependent function Gsm_Coder
Finalizing Gsm_Coder1
Mark Input dependent function Gsm_Coder1
Finalizing Gsm_Coder0
Mark Input dependent function Gsm_Coder0
Finalizing Gsm_RPE_Encoding
Mark Input dependent function Gsm_RPE_Encoding
Finalizing Gsm_RPE_Encoding0
Mark Input dependent function Gsm_RPE_Encoding0
Finalizing APCM_quantization
Mark Input dependent function APCM_quantization
Finalizing APCM_quantization7
Mark Input dependent function APCM_quantization7
Finalizing APCM_quantization6
Mark Input dependent function APCM_quantization6
Finalizing APCM_quantization5
Mark Input dependent function APCM_quantization5
Finalizing APCM_quantization4
Mark Input dependent function APCM_quantization4
Finalizing gsm_add
Mark Input dependent function gsm_add
Finalizing APCM_quantization3
Mark Input dependent function APCM_quantization3
Finalizing APCM_quantization2
Mark Input dependent function APCM_quantization2
Finalizing APCM_quantization1
Mark Input dependent function APCM_quantization1
Finalizing APCM_quantization0
Mark Input dependent function APCM_quantization0
Finalizing RPE_grid_selection
Mark Input dependent function RPE_grid_selection
Finalizing RPE_grid_selection5
Mark Input dependent function RPE_grid_selection5
Finalizing RPE_grid_selection4
Mark Input dependent function RPE_grid_selection4
Finalizing RPE_grid_selection3
Mark Input dependent function RPE_grid_selection3
Finalizing RPE_grid_selection2
Mark Input dependent function RPE_grid_selection2
Finalizing RPE_grid_selection1
Mark Input dependent function RPE_grid_selection1
Finalizing RPE_grid_selection0
Mark Input dependent function RPE_grid_selection0
Finalizing Weighting_filter
Mark Input dependent function Weighting_filter
Finalizing Weighting_filter0
Mark Input dependent function Weighting_filter0
Finalizing Gsm_Long_Term_Predictor
Mark Input dependent function Gsm_Long_Term_Predictor
Finalizing Gsm_Long_Term_Predictor0
Mark Input dependent function Gsm_Long_Term_Predictor0
Finalizing Long_term_analysis_filtering
Mark Input dependent function Long_term_analysis_filtering
Finalizing Long_term_analysis_filtering3
Mark Input dependent function Long_term_analysis_filtering3
Finalizing Long_term_analysis_filtering2
Mark Input dependent function Long_term_analysis_filtering2
Finalizing Long_term_analysis_filtering1
Mark Input dependent function Long_term_analysis_filtering1
Finalizing Long_term_analysis_filtering0
Mark Input dependent function Long_term_analysis_filtering0
Finalizing Calculation_of_the_LTP_parameters
Mark Input dependent function Calculation_of_the_LTP_parameters
Finalizing Calculation_of_the_LTP_parameters11
Mark Input dependent function Calculation_of_the_LTP_parameters11
Finalizing Calculation_of_the_LTP_parameters10
Mark Input dependent function Calculation_of_the_LTP_parameters10
Finalizing gsm_mult
Mark Input dependent function gsm_mult
Finalizing gsm_mult0
Mark Input dependent function gsm_mult0
Finalizing Calculation_of_the_LTP_parameters9
Mark Input dependent function Calculation_of_the_LTP_parameters9
Finalizing Calculation_of_the_LTP_parameters8
Mark Input dependent function Calculation_of_the_LTP_parameters8
Finalizing Calculation_of_the_LTP_parameters7
Mark Input dependent function Calculation_of_the_LTP_parameters7
Finalizing Calculation_of_the_LTP_parameters6
Mark Input dependent function Calculation_of_the_LTP_parameters6
Finalizing Calculation_of_the_LTP_parameters5
Mark Input dependent function Calculation_of_the_LTP_parameters5
Finalizing Calculation_of_the_LTP_parameters4
Mark Input dependent function Calculation_of_the_LTP_parameters4
Finalizing Calculation_of_the_LTP_parameters3
Mark Input dependent function Calculation_of_the_LTP_parameters3
Finalizing Calculation_of_the_LTP_parameters2
Mark Input dependent function Calculation_of_the_LTP_parameters2
Finalizing Calculation_of_the_LTP_parameters1
Mark Input dependent function Calculation_of_the_LTP_parameters1
Finalizing Calculation_of_the_LTP_parameters0
Mark Input dependent function Calculation_of_the_LTP_parameters0
Finalizing Gsm_Short_Term_Analysis_Filter
Mark Input dependent function Gsm_Short_Term_Analysis_Filter
Finalizing Short_term_analysis_filtering
Mark Input dependent function Short_term_analysis_filtering
Finalizing Short_term_analysis_filtering2
Mark Input dependent function Short_term_analysis_filtering2
Finalizing Short_term_analysis_filtering1
Mark Input dependent function Short_term_analysis_filtering1
Finalizing Short_term_analysis_filtering0
Mark Input dependent function Short_term_analysis_filtering0
Finalizing Gsm_LPC_Analysis
Mark Input dependent function Gsm_LPC_Analysis
Finalizing Gsm_LPC_Analysis0
Mark Input dependent function Gsm_LPC_Analysis0
Finalizing Quantization_and_coding
Mark Input dependent function Quantization_and_coding
Finalizing Transformation_to_Log_Area_Ratios
Mark Input dependent function Transformation_to_Log_Area_Ratios
Finalizing Transformation_to_Log_Area_Ratios3
Mark Input dependent function Transformation_to_Log_Area_Ratios3
Finalizing Transformation_to_Log_Area_Ratios2
Mark Input dependent function Transformation_to_Log_Area_Ratios2
Finalizing Transformation_to_Log_Area_Ratios1
Mark Input dependent function Transformation_to_Log_Area_Ratios1
Finalizing Transformation_to_Log_Area_Ratios0
Mark Input dependent function Transformation_to_Log_Area_Ratios0
Finalizing Reflection_coefficients
Mark Input dependent function Reflection_coefficients
Finalizing Reflection_coefficients8
Mark Input dependent function Reflection_coefficients8
Finalizing Reflection_coefficients7
Mark Input dependent function Reflection_coefficients7
Finalizing gsm_div
Mark Input dependent function gsm_div
Finalizing gsm_div2
Mark Input dependent function gsm_div2
Finalizing gsm_div1
Mark Input dependent function gsm_div1
Finalizing gsm_div0
Mark Input dependent function gsm_div0
Finalizing Reflection_coefficients6
Mark Input dependent function Reflection_coefficients6
Finalizing Reflection_coefficients5
Mark Input dependent function Reflection_coefficients5
Finalizing Reflection_coefficients4
Mark Input dependent function Reflection_coefficients4
Finalizing Reflection_coefficients3
Mark Input dependent function Reflection_coefficients3
Finalizing Reflection_coefficients2
Mark Input dependent function Reflection_coefficients2
Finalizing Reflection_coefficients1
Mark Input dependent function Reflection_coefficients1
Finalizing Reflection_coefficients0
Mark Input dependent function Reflection_coefficients0
Finalizing Autocorrelation
Mark Input dependent function Autocorrelation
Finalizing Autocorrelation16
Mark Input dependent function Autocorrelation16
Finalizing Autocorrelation15
Mark Input dependent function Autocorrelation15
Finalizing Autocorrelation14
Mark Input dependent function Autocorrelation14
Finalizing Autocorrelation13
Mark Input dependent function Autocorrelation13
Finalizing Autocorrelation12
Mark Input dependent function Autocorrelation12
Finalizing Autocorrelation11
Mark Input dependent function Autocorrelation11
Finalizing Autocorrelation10
Mark Input dependent function Autocorrelation10
Finalizing Autocorrelation9
Mark Input dependent function Autocorrelation9
Finalizing Autocorrelation8
Mark Input dependent function Autocorrelation8
Finalizing Autocorrelation7
Mark Input dependent function Autocorrelation7
Finalizing Autocorrelation6
Mark Input dependent function Autocorrelation6
Finalizing Autocorrelation5
Mark Input dependent function Autocorrelation5
Finalizing Autocorrelation4
Mark Input dependent function Autocorrelation4
Finalizing Autocorrelation3
Mark Input dependent function Autocorrelation3
Finalizing Autocorrelation2
Mark Input dependent function Autocorrelation2
Finalizing Autocorrelation1
Mark Input dependent function Autocorrelation1
Finalizing gsm_norm
Mark Input dependent function gsm_norm
Finalizing gsm_norm0
Mark Input dependent function gsm_norm0
Finalizing Autocorrelation0
Mark Input dependent function Autocorrelation0
Finalizing Gsm_Preprocess
Mark Input dependent function Gsm_Preprocess
Finalizing process_encode0
Mark Input dependent function process_encode0
Finalizing process_decode
Finalizing gsm_decode
Mark Input dependent function gsm_decode
Finalizing Gsm_Decoder
Mark Input dependent function Gsm_Decoder
Finalizing Postprocessing
Mark Input dependent function Postprocessing
Finalizing Postprocessing0
Mark Input dependent function Postprocessing0
Finalizing Gsm_Short_Term_Synthesis_Filter
Mark Input dependent function Gsm_Short_Term_Synthesis_Filter
Finalizing Coefficients_40_159
Mark Input dependent function Coefficients_40_159
Finalizing Coefficients_40_1591
Mark Input dependent function Coefficients_40_1591
Finalizing Coefficients_40_1590
Mark Input dependent function Coefficients_40_1590
Finalizing Coefficients_27_39
Mark Input dependent function Coefficients_27_39
Finalizing Coefficients_27_390
Mark Input dependent function Coefficients_27_390
Finalizing Coefficients_13_26
Mark Input dependent function Coefficients_13_26
Finalizing Coefficients_13_260
Mark Input dependent function Coefficients_13_260
Finalizing Short_term_synthesis_filtering
Mark Input dependent function Short_term_synthesis_filtering
Finalizing Short_term_synthesis_filtering1
Mark Input dependent function Short_term_synthesis_filtering1
Finalizing Short_term_synthesis_filtering0
Mark Input dependent function Short_term_synthesis_filtering0
Finalizing LARp_to_rp
Mark Input dependent function LARp_to_rp
Finalizing LARp_to_rp0
Mark Input dependent function LARp_to_rp0
Finalizing Coefficients_0_12
Mark Input dependent function Coefficients_0_12
Finalizing Coefficients_0_120
Mark Input dependent function Coefficients_0_120
Finalizing Decoding_of_the_coded_Log_Area_Ratios
Mark Input dependent function Decoding_of_the_coded_Log_Area_Ratios
Finalizing Gsm_Decoder0
Mark Input dependent function Gsm_Decoder0
Finalizing Gsm_Long_Term_Synthesis_Filtering
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering
Finalizing Gsm_Long_Term_Synthesis_Filtering2
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering2
Finalizing Gsm_Long_Term_Synthesis_Filtering1
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering1
Finalizing Gsm_Long_Term_Synthesis_Filtering0
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering0
Finalizing Gsm_RPE_Decoding
Mark Input dependent function Gsm_RPE_Decoding
Finalizing Gsm_RPE_Decoding0
Mark Input dependent function Gsm_RPE_Decoding0
Finalizing RPE_grid_positioning
Mark Input dependent function RPE_grid_positioning
Finalizing RPE_grid_positioning4
Mark Input dependent function RPE_grid_positioning4
Finalizing RPE_grid_positioning3
Mark Input dependent function RPE_grid_positioning3
Finalizing RPE_grid_positioning2
Mark Input dependent function RPE_grid_positioning2
Finalizing RPE_grid_positioning1
Mark Input dependent function RPE_grid_positioning1
Finalizing RPE_grid_positioning0
Mark Input dependent function RPE_grid_positioning0
Finalizing APCM_inverse_quantization
Mark Input dependent function APCM_inverse_quantization
Finalizing APCM_inverse_quantization0
Mark Input dependent function APCM_inverse_quantization0
Finalizing gsm_asl
Mark Input dependent function gsm_asl
Finalizing gsm_asl2
Mark Input dependent function gsm_asl2
Finalizing gsm_asl1
Mark Input dependent function gsm_asl1
Finalizing gsm_asr
Mark Input dependent function gsm_asr
Finalizing gsm_asr2
Mark Input dependent function gsm_asr2
Finalizing gsm_asr1
Mark Input dependent function gsm_asr1
Finalizing gsm_asr0
Mark Input dependent function gsm_asr0
Finalizing gsm_asl0
Mark Input dependent function gsm_asl0
Finalizing gsm_sub
Mark Input dependent function gsm_sub
Finalizing APCM_quantization_xmaxc_to_exp_mant
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant
Finalizing APCM_quantization_xmaxc_to_exp_mant4
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant4
Finalizing APCM_quantization_xmaxc_to_exp_mant3
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant3
Finalizing APCM_quantization_xmaxc_to_exp_mant2
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant2
Finalizing APCM_quantization_xmaxc_to_exp_mant1
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant1
Finalizing APCM_quantization_xmaxc_to_exp_mant0
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant0
Finalizing gsm_destroy
Mark Input dependent function gsm_destroy
Finalizing gsm_option
Mark Input dependent function gsm_option
Finalizing process_decode0
Mark Input dependent function process_decode0
Finalizing gsm_create
Finalizing main
Finalizing process
Mark Input dependent function process
Finalizing process7
Mark Input dependent function process7
Finalizing process6
Mark Input dependent function process6
Finalizing process5
Mark Input dependent function process5
Finalizing process4
Mark Input dependent function process4
Finalizing process3
Mark Input dependent function process3
Finalizing process2
Mark Input dependent function process2
Finalizing process1
Mark Input dependent function process1
Finalizing process0
Mark Input dependent function process0
Finalizing update_own
Mark Input dependent function update_own
Finalizing update_own0
Mark Input dependent function update_own0
Finalizing update_mode
Mark Input dependent function update_mode
Finalizing update_mode0
Mark Input dependent function update_mode0
Finalizing update_times
Mark Input dependent function update_times
Finalizing update_times0
Mark Input dependent function update_times0
Finalizing open_output
Mark Input dependent function open_output
Finalizing open_output4
Mark Input dependent function open_output4
Finalizing open_output3
Mark Input dependent function open_output3
Finalizing open_output2
Mark Input dependent function open_output2
Finalizing ok_to_replace
Mark Input dependent function ok_to_replace
Finalizing ok_to_replace2
Mark Input dependent function ok_to_replace2
Finalizing ok_to_replace1
Mark Input dependent function ok_to_replace1
Finalizing ok_to_replace0
Mark Input dependent function ok_to_replace0
Finalizing open_output1
Mark Input dependent function open_output1
Finalizing length_okay
Mark Input dependent function length_okay
Finalizing length_okay0
Mark Input dependent function length_okay0
Finalizing open_output0
Mark Input dependent function open_output0
Finalizing open_input
Mark Input dependent function open_input
Finalizing prepare_io
Mark Input dependent function prepare_io
Finalizing grok_format
Mark Input dependent function grok_format
Finalizing grok_format0
Mark Input dependent function grok_format0
Finalizing plainname
Mark Input dependent function plainname
Finalizing okay_as_input
Mark Input dependent function okay_as_input
Finalizing okay_as_input1
Mark Input dependent function okay_as_input1
Finalizing okay_as_input0
Mark Input dependent function okay_as_input0
Finalizing open_input4
Mark Input dependent function open_input4
Finalizing open_input3
Mark Input dependent function open_input3
Finalizing open_input2
Mark Input dependent function open_input2
Finalizing open_input1
Mark Input dependent function open_input1
Finalizing codename
Mark Input dependent function codename
Finalizing normalname
Mark Input dependent function normalname
Finalizing normalname3
Mark Input dependent function normalname3
Finalizing normalname2
Mark Input dependent function normalname2
Finalizing normalname1
Mark Input dependent function normalname1
Finalizing suffix
Mark Input dependent function suffix
Finalizing emalloc
Mark Input dependent function emalloc
Finalizing onintr
Mark Input dependent function onintr
Finalizing onintr1
Mark Input dependent function onintr1
Finalizing onintr0
Mark Input dependent function onintr0
Finalizing emalloc0
Mark Input dependent function emalloc0
Finalizing normalname0
Mark Input dependent function normalname0
Finalizing open_input0
Mark Input dependent function open_input0
Finalizing catch_signals
Mark Input dependent function catch_signals
Finalizing catch_signals0
Mark Input dependent function catch_signals0
Finalizing main0
Mark Input dependent function main0
Finalizing help
Mark Input dependent function help
Finalizing help0
Mark Input dependent function help0
Finalizing version
Mark Input dependent function version
Finalizing version0
Mark Input dependent function version0
Finalizing set_format
Mark Input dependent function set_format
Finalizing set_format0
Mark Input dependent function set_format0
Finalizing parse_argv0
Finalizing parse_argv00
Mark Input dependent function parse_argv00
Finalizing endname
Mark Input dependent function endname
Finalizing endname0
Mark Input dependent function endname0
Finalizing generic_init
Mark Input dependent function generic_init
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/toast.x.bc/100/0
here!:generic_init
here!:main
here!:parse_argv0
here!:set_format
here!:version
here!:help
here!:onintr
here!:catch_signals
here!:process
here!:open_input
here!:open_output
here!:process_decode
here!:process_encode
here!:update_times
here!:update_mode
here!:update_own
here!:plainname
here!:codename
here!:length_okay
here!:ok_to_replace
here!:endname
here!:normalname
here!:emalloc
here!:suffix
here!:okay_as_input
here!:grok_format
here!:prepare_io
here!:linear_input
here!:linear_output
here!:ulaw_input
here!:ulaw_output
here!:alaw_input
here!:alaw_output
here!:audio_init_input
here!:get_u32
here!:audio_init_output
here!:put_u32
here!:gsm_add
here!:gsm_sub
here!:gsm_mult
here!:gsm_mult_r
here!:gsm_abs
here!:gsm_L_mult
here!:gsm_L_add
here!:gsm_L_sub
here!:gsm_norm
here!:gsm_L_asl
here!:gsm_L_asr
here!:gsm_asl
here!:gsm_asr
here!:gsm_div
here!:Gsm_Coder
here!:Gsm_Preprocess
here!:Gsm_LPC_Analysis
here!:Gsm_Short_Term_Analysis_Filter
here!:Gsm_Long_Term_Predictor
here!:Gsm_RPE_Encoding
here!:Weighting_filter
here!:RPE_grid_selection
here!:APCM_quantization
here!:APCM_inverse_quantization
here!:RPE_grid_positioning
here!:APCM_quantization_xmaxc_to_exp_mant
here!:Calculation_of_the_LTP_parameters
here!:Long_term_analysis_filtering
here!:Decoding_of_the_coded_Log_Area_Ratios
here!:Coefficients_0_12
here!:LARp_to_rp
here!:Short_term_analysis_filtering
here!:Coefficients_13_26
here!:Coefficients_27_39
here!:Coefficients_40_159
here!:Autocorrelation
here!:Reflection_coefficients
here!:Transformation_to_Log_Area_Ratios
here!:Quantization_and_coding
here!:gsm_debug_words
here!:gsm_debug_longwords
here!:gsm_debug_longword
here!:gsm_debug_word
here!:Gsm_Decoder
here!:Gsm_RPE_Decoding
here!:Gsm_Long_Term_Synthesis_Filtering
here!:Gsm_Short_Term_Synthesis_Filter
here!:Postprocessing
here!:Short_term_synthesis_filtering
here!:gsm_destroy
here!:gsm_decode
here!:gsm_encode
here!:gsm_explode
here!:gsm_implode
here!:gsm_create
here!:gsm_print
here!:gsm_option
here!:main0
here!:parse_argv00
here!:set_format0
here!:version0
here!:help0
here!:onintr0
here!:onintr1
here!:catch_signals0
here!:process0
here!:process1
here!:process2
here!:process3
here!:process4
here!:process5
here!:process6
here!:process7
here!:open_input0
here!:open_input1
here!:open_input2
here!:open_input3
here!:open_input4
here!:open_output0
here!:open_output1
here!:open_output2
here!:open_output3
here!:open_output4
here!:process_decode0
here!:process_encode0
here!:update_times0
here!:update_mode0
here!:update_own0
here!:length_okay0
here!:ok_to_replace0
here!:ok_to_replace1
here!:ok_to_replace2
here!:endname0
here!:normalname0
here!:normalname1
here!:normalname2
here!:normalname3
here!:emalloc0
here!:okay_as_input0
here!:okay_as_input1
here!:grok_format0
here!:ulaw_input0
here!:ulaw_input1
here!:ulaw_input2
here!:ulaw_output0
here!:alaw_input0
here!:alaw_input1
here!:alaw_input2
here!:alaw_output0
here!:audio_init_input0
here!:get_u320
here!:gsm_mult0
here!:gsm_mult_r0
here!:gsm_L_add0
here!:gsm_L_add1
here!:gsm_L_sub0
here!:gsm_L_sub1
here!:gsm_norm0
here!:gsm_L_asl0
here!:gsm_L_asl1
here!:gsm_L_asl2
here!:gsm_L_asr0
here!:gsm_L_asr1
here!:gsm_L_asr2
here!:gsm_asl0
here!:gsm_asl1
here!:gsm_asl2
here!:gsm_asr0
here!:gsm_asr1
here!:gsm_asr2
here!:gsm_div0
here!:gsm_div1
here!:gsm_div2
here!:Gsm_Coder0
here!:Gsm_Coder1
here!:Gsm_LPC_Analysis0
here!:Gsm_Long_Term_Predictor0
here!:Gsm_RPE_Encoding0
here!:Weighting_filter0
here!:RPE_grid_selection0
here!:RPE_grid_selection1
here!:RPE_grid_selection2
here!:RPE_grid_selection3
here!:RPE_grid_selection4
here!:RPE_grid_selection5
here!:APCM_quantization0
here!:APCM_quantization1
here!:APCM_quantization2
here!:APCM_quantization3
here!:APCM_quantization4
here!:APCM_quantization5
here!:APCM_quantization6
here!:APCM_quantization7
here!:APCM_inverse_quantization0
here!:RPE_grid_positioning0
here!:RPE_grid_positioning1
here!:RPE_grid_positioning2
here!:RPE_grid_positioning3
here!:RPE_grid_positioning4
here!:APCM_quantization_xmaxc_to_exp_mant0
here!:APCM_quantization_xmaxc_to_exp_mant1
here!:APCM_quantization_xmaxc_to_exp_mant2
here!:APCM_quantization_xmaxc_to_exp_mant3
here!:APCM_quantization_xmaxc_to_exp_mant4
here!:Calculation_of_the_LTP_parameters0
here!:Calculation_of_the_LTP_parameters1
here!:Calculation_of_the_LTP_parameters2
here!:Calculation_of_the_LTP_parameters3
here!:Calculation_of_the_LTP_parameters4
here!:Calculation_of_the_LTP_parameters5
here!:Calculation_of_the_LTP_parameters6
here!:Calculation_of_the_LTP_parameters7
here!:Calculation_of_the_LTP_parameters8
here!:Calculation_of_the_LTP_parameters9
here!:Calculation_of_the_LTP_parameters10
here!:Calculation_of_the_LTP_parameters11
here!:Long_term_analysis_filtering0
here!:Long_term_analysis_filtering1
here!:Long_term_analysis_filtering2
here!:Long_term_analysis_filtering3
here!:Coefficients_0_120
here!:LARp_to_rp0
here!:Short_term_analysis_filtering0
here!:Short_term_analysis_filtering1
here!:Short_term_analysis_filtering2
here!:Coefficients_13_260
here!:Coefficients_27_390
here!:Coefficients_40_1590
here!:Coefficients_40_1591
here!:Autocorrelation0
here!:Autocorrelation1
here!:Autocorrelation2
here!:Autocorrelation3
here!:Autocorrelation4
here!:Autocorrelation5
here!:Autocorrelation6
here!:Autocorrelation7
here!:Autocorrelation8
here!:Autocorrelation9
here!:Autocorrelation10
here!:Autocorrelation11
here!:Autocorrelation12
here!:Autocorrelation13
here!:Autocorrelation14
here!:Autocorrelation15
here!:Autocorrelation16
here!:Reflection_coefficients0
here!:Reflection_coefficients1
here!:Reflection_coefficients2
here!:Reflection_coefficients3
here!:Reflection_coefficients4
here!:Reflection_coefficients5
here!:Reflection_coefficients6
here!:Reflection_coefficients7
here!:Reflection_coefficients8
here!:Transformation_to_Log_Area_Ratios0
here!:Transformation_to_Log_Area_Ratios1
here!:Transformation_to_Log_Area_Ratios2
here!:Transformation_to_Log_Area_Ratios3
here!:gsm_debug_words0
here!:gsm_debug_words1
here!:gsm_debug_words2
here!:gsm_debug_longwords0
here!:gsm_debug_longwords1
here!:gsm_debug_longwords2
here!:gsm_debug_longword0
here!:gsm_debug_word0
here!:Gsm_Decoder0
here!:Gsm_RPE_Decoding0
here!:Gsm_Long_Term_Synthesis_Filtering0
here!:Gsm_Long_Term_Synthesis_Filtering1
here!:Gsm_Long_Term_Synthesis_Filtering2
here!:Postprocessing0
here!:Short_term_synthesis_filtering0
here!:Short_term_synthesis_filtering1
here!:gsm_explode0
here!:gsm_implode0
here!:gsm_implode0
got filter function names
Add filter function generic_init
FunctionInfo. Adding function:generic_init
Add filter function main
FunctionInfo. Adding function:main
Add filter function parse_argv0
FunctionInfo. Adding function:parse_argv0
did not find getopt demangled to getopt
Add filter function set_format
FunctionInfo. Adding function:set_format
Add filter function version
FunctionInfo. Adding function:version
did not find exit demangled to exit
Add filter function help
FunctionInfo. Adding function:help
did not find fprintf demangled to fprintf
Add filter function onintr
FunctionInfo. Adding function:onintr
Add filter function catch_signals
FunctionInfo. Adding function:catch_signals
Add filter function process
FunctionInfo. Adding function:process
Add filter function open_input
FunctionInfo. Adding function:open_input
Add filter function open_output
FunctionInfo. Adding function:open_output
Add filter function process_decode
FunctionInfo. Adding function:process_decode
Add filter function process_encode
FunctionInfo. Adding function:process_encode
did not find fflush demangled to fflush
did not find ferror demangled to ferror
did not find perror demangled to perror
Add filter function update_times
FunctionInfo. Adding function:update_times
Add filter function update_mode
FunctionInfo. Adding function:update_mode
Add filter function update_own
FunctionInfo. Adding function:update_own
did not find fclose demangled to fclose
did not find free demangled to free
did not find unlink demangled to unlink
did not find __errno_location demangled to __errno_location
did not find fileno demangled to fileno
did not find fchown demangled to fchown
did not find fchmod demangled to fchmod
did not find utime demangled to utime
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fwrite demangled to fwrite
did not find fread demangled to fread
Add filter function plainname
FunctionInfo. Adding function:plainname
Add filter function codename
FunctionInfo. Adding function:codename
Add filter function length_okay
FunctionInfo. Adding function:length_okay
did not find open demangled to open
did not find fdopen demangled to fdopen
Add filter function ok_to_replace
FunctionInfo. Adding function:ok_to_replace
did not find fopen demangled to fopen
did not find close demangled to close
did not find isatty demangled to isatty
did not find getchar demangled to getchar
Add filter function endname
FunctionInfo. Adding function:endname
did not find strlen demangled to strlen
did not find strrchr demangled to strrchr
Add filter function normalname
FunctionInfo. Adding function:normalname
Add filter function emalloc
FunctionInfo. Adding function:emalloc
did not find strcpy demangled to strcpy
Add filter function suffix
FunctionInfo. Adding function:suffix
did not find strcat demangled to strcat
did not find memcmp demangled to memcmp
did not find malloc demangled to malloc
Add filter function okay_as_input
FunctionInfo. Adding function:okay_as_input
Add filter function grok_format
FunctionInfo. Adding function:grok_format
Add filter function prepare_io
FunctionInfo. Adding function:prepare_io
did not find fstat demangled to fstat
did not find __sysv_signal demangled to __sysv_signal
did not find printf demangled to printf
did not find strncmp demangled to strncmp
did not find strcmp demangled to strcmp
Add filter function linear_input
FunctionInfo. Adding function:linear_input
Add filter function linear_output
FunctionInfo. Adding function:linear_output
Add filter function ulaw_input
FunctionInfo. Adding function:ulaw_input
did not find fgetc demangled to fgetc
Add filter function ulaw_output
FunctionInfo. Adding function:ulaw_output
did not find fputc demangled to fputc
Add filter function alaw_input
FunctionInfo. Adding function:alaw_input
Add filter function alaw_output
FunctionInfo. Adding function:alaw_output
Add filter function audio_init_input
FunctionInfo. Adding function:audio_init_input
Add filter function get_u32
FunctionInfo. Adding function:get_u32
did not find fseek demangled to fseek
did not find _IO_getc demangled to _IO_getc
Add filter function audio_init_output
FunctionInfo. Adding function:audio_init_output
did not find fputs demangled to fputs
Add filter function put_u32
FunctionInfo. Adding function:put_u32
did not find _IO_putc demangled to _IO_putc
Add filter function gsm_add
FunctionInfo. Adding function:gsm_add
Add filter function gsm_sub
FunctionInfo. Adding function:gsm_sub
Add filter function gsm_mult
FunctionInfo. Adding function:gsm_mult
Add filter function gsm_mult_r
FunctionInfo. Adding function:gsm_mult_r
Add filter function gsm_abs
FunctionInfo. Adding function:gsm_abs
Add filter function gsm_L_mult
FunctionInfo. Adding function:gsm_L_mult
did not find __assert_fail demangled to __assert_fail
Add filter function gsm_L_add
FunctionInfo. Adding function:gsm_L_add
Add filter function gsm_L_sub
FunctionInfo. Adding function:gsm_L_sub
Add filter function gsm_norm
FunctionInfo. Adding function:gsm_norm
Add filter function gsm_L_asl
FunctionInfo. Adding function:gsm_L_asl
Add filter function gsm_L_asr
FunctionInfo. Adding function:gsm_L_asr
Add filter function gsm_asl
FunctionInfo. Adding function:gsm_asl
Add filter function gsm_asr
FunctionInfo. Adding function:gsm_asr
Add filter function gsm_div
FunctionInfo. Adding function:gsm_div
Add filter function Gsm_Coder
FunctionInfo. Adding function:Gsm_Coder
Add filter function Gsm_Preprocess
FunctionInfo. Adding function:Gsm_Preprocess
Add filter function Gsm_LPC_Analysis
FunctionInfo. Adding function:Gsm_LPC_Analysis
Add filter function Gsm_Short_Term_Analysis_Filter
FunctionInfo. Adding function:Gsm_Short_Term_Analysis_Filter
Add filter function Gsm_Long_Term_Predictor
FunctionInfo. Adding function:Gsm_Long_Term_Predictor
Add filter function Gsm_RPE_Encoding
FunctionInfo. Adding function:Gsm_RPE_Encoding
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
Add filter function Weighting_filter
FunctionInfo. Adding function:Weighting_filter
Add filter function RPE_grid_selection
FunctionInfo. Adding function:RPE_grid_selection
Add filter function APCM_quantization
FunctionInfo. Adding function:APCM_quantization
Add filter function APCM_inverse_quantization
FunctionInfo. Adding function:APCM_inverse_quantization
Add filter function RPE_grid_positioning
FunctionInfo. Adding function:RPE_grid_positioning
Add filter function APCM_quantization_xmaxc_to_exp_mant
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant
Add filter function Calculation_of_the_LTP_parameters
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters
Add filter function Long_term_analysis_filtering
FunctionInfo. Adding function:Long_term_analysis_filtering
Add filter function Decoding_of_the_coded_Log_Area_Ratios
FunctionInfo. Adding function:Decoding_of_the_coded_Log_Area_Ratios
Add filter function Coefficients_0_12
FunctionInfo. Adding function:Coefficients_0_12
Add filter function LARp_to_rp
FunctionInfo. Adding function:LARp_to_rp
Add filter function Short_term_analysis_filtering
FunctionInfo. Adding function:Short_term_analysis_filtering
Add filter function Coefficients_13_26
FunctionInfo. Adding function:Coefficients_13_26
Add filter function Coefficients_27_39
FunctionInfo. Adding function:Coefficients_27_39
Add filter function Coefficients_40_159
FunctionInfo. Adding function:Coefficients_40_159
Add filter function Autocorrelation
FunctionInfo. Adding function:Autocorrelation
Add filter function Reflection_coefficients
FunctionInfo. Adding function:Reflection_coefficients
Add filter function Transformation_to_Log_Area_Ratios
FunctionInfo. Adding function:Transformation_to_Log_Area_Ratios
Add filter function Quantization_and_coding
FunctionInfo. Adding function:Quantization_and_coding
Add filter function gsm_debug_words
FunctionInfo. Adding function:gsm_debug_words
Add filter function gsm_debug_longwords
FunctionInfo. Adding function:gsm_debug_longwords
Add filter function gsm_debug_longword
FunctionInfo. Adding function:gsm_debug_longword
Add filter function gsm_debug_word
FunctionInfo. Adding function:gsm_debug_word
Add filter function Gsm_Decoder
FunctionInfo. Adding function:Gsm_Decoder
Add filter function Gsm_RPE_Decoding
FunctionInfo. Adding function:Gsm_RPE_Decoding
Add filter function Gsm_Long_Term_Synthesis_Filtering
FunctionInfo. Adding function:Gsm_Long_Term_Synthesis_Filtering
Add filter function Gsm_Short_Term_Synthesis_Filter
FunctionInfo. Adding function:Gsm_Short_Term_Synthesis_Filter
Add filter function Postprocessing
FunctionInfo. Adding function:Postprocessing
Add filter function Short_term_synthesis_filtering
FunctionInfo. Adding function:Short_term_synthesis_filtering
Add filter function gsm_destroy
FunctionInfo. Adding function:gsm_destroy
Add filter function gsm_decode
FunctionInfo. Adding function:gsm_decode
Add filter function gsm_encode
FunctionInfo. Adding function:gsm_encode
Add filter function gsm_explode
FunctionInfo. Adding function:gsm_explode
Add filter function gsm_implode
FunctionInfo. Adding function:gsm_implode
Add filter function gsm_create
FunctionInfo. Adding function:gsm_create
Add filter function gsm_print
FunctionInfo. Adding function:gsm_print
Add filter function gsm_option
FunctionInfo. Adding function:gsm_option
Add filter function main0
FunctionInfo. Adding function:main0
Add filter function parse_argv00
FunctionInfo. Adding function:parse_argv00
Add filter function set_format0
FunctionInfo. Adding function:set_format0
Add filter function version0
FunctionInfo. Adding function:version0
Add filter function help0
FunctionInfo. Adding function:help0
Add filter function onintr0
FunctionInfo. Adding function:onintr0
Add filter function onintr1
FunctionInfo. Adding function:onintr1
Add filter function catch_signals0
FunctionInfo. Adding function:catch_signals0
Add filter function process0
FunctionInfo. Adding function:process0
Add filter function process1
FunctionInfo. Adding function:process1
Add filter function process2
FunctionInfo. Adding function:process2
Add filter function process3
FunctionInfo. Adding function:process3
Add filter function process4
FunctionInfo. Adding function:process4
Add filter function process5
FunctionInfo. Adding function:process5
Add filter function process6
FunctionInfo. Adding function:process6
Add filter function process7
FunctionInfo. Adding function:process7
Add filter function open_input0
FunctionInfo. Adding function:open_input0
Add filter function open_input1
FunctionInfo. Adding function:open_input1
Add filter function open_input2
FunctionInfo. Adding function:open_input2
Add filter function open_input3
FunctionInfo. Adding function:open_input3
Add filter function open_input4
FunctionInfo. Adding function:open_input4
Add filter function open_output0
FunctionInfo. Adding function:open_output0
Add filter function open_output1
FunctionInfo. Adding function:open_output1
Add filter function open_output2
FunctionInfo. Adding function:open_output2
Add filter function open_output3
FunctionInfo. Adding function:open_output3
Add filter function open_output4
FunctionInfo. Adding function:open_output4
Add filter function process_decode0
FunctionInfo. Adding function:process_decode0
Add filter function process_encode0
FunctionInfo. Adding function:process_encode0
Add filter function update_times0
FunctionInfo. Adding function:update_times0
Add filter function update_mode0
FunctionInfo. Adding function:update_mode0
Add filter function update_own0
FunctionInfo. Adding function:update_own0
Add filter function length_okay0
FunctionInfo. Adding function:length_okay0
Add filter function ok_to_replace0
FunctionInfo. Adding function:ok_to_replace0
Add filter function ok_to_replace1
FunctionInfo. Adding function:ok_to_replace1
Add filter function ok_to_replace2
FunctionInfo. Adding function:ok_to_replace2
Add filter function endname0
FunctionInfo. Adding function:endname0
Add filter function normalname0
FunctionInfo. Adding function:normalname0
Add filter function normalname1
FunctionInfo. Adding function:normalname1
Add filter function normalname2
FunctionInfo. Adding function:normalname2
Add filter function normalname3
FunctionInfo. Adding function:normalname3
Add filter function emalloc0
FunctionInfo. Adding function:emalloc0
Add filter function okay_as_input0
FunctionInfo. Adding function:okay_as_input0
Add filter function okay_as_input1
FunctionInfo. Adding function:okay_as_input1
Add filter function grok_format0
FunctionInfo. Adding function:grok_format0
Add filter function ulaw_input0
FunctionInfo. Adding function:ulaw_input0
Add filter function ulaw_input1
FunctionInfo. Adding function:ulaw_input1
Add filter function ulaw_input2
FunctionInfo. Adding function:ulaw_input2
Add filter function ulaw_output0
FunctionInfo. Adding function:ulaw_output0
Add filter function alaw_input0
FunctionInfo. Adding function:alaw_input0
Add filter function alaw_input1
FunctionInfo. Adding function:alaw_input1
Add filter function alaw_input2
FunctionInfo. Adding function:alaw_input2
Add filter function alaw_output0
FunctionInfo. Adding function:alaw_output0
Add filter function audio_init_input0
FunctionInfo. Adding function:audio_init_input0
Add filter function get_u320
FunctionInfo. Adding function:get_u320
Add filter function gsm_mult0
FunctionInfo. Adding function:gsm_mult0
Add filter function gsm_mult_r0
FunctionInfo. Adding function:gsm_mult_r0
Add filter function gsm_L_add0
FunctionInfo. Adding function:gsm_L_add0
Add filter function gsm_L_add1
FunctionInfo. Adding function:gsm_L_add1
Add filter function gsm_L_sub0
FunctionInfo. Adding function:gsm_L_sub0
Add filter function gsm_L_sub1
FunctionInfo. Adding function:gsm_L_sub1
Add filter function gsm_norm0
FunctionInfo. Adding function:gsm_norm0
Add filter function gsm_L_asl0
FunctionInfo. Adding function:gsm_L_asl0
Add filter function gsm_L_asl1
FunctionInfo. Adding function:gsm_L_asl1
Add filter function gsm_L_asl2
FunctionInfo. Adding function:gsm_L_asl2
Add filter function gsm_L_asr0
FunctionInfo. Adding function:gsm_L_asr0
Add filter function gsm_L_asr1
FunctionInfo. Adding function:gsm_L_asr1
Add filter function gsm_L_asr2
FunctionInfo. Adding function:gsm_L_asr2
Add filter function gsm_asl0
FunctionInfo. Adding function:gsm_asl0
Add filter function gsm_asl1
FunctionInfo. Adding function:gsm_asl1
Add filter function gsm_asl2
FunctionInfo. Adding function:gsm_asl2
Add filter function gsm_asr0
FunctionInfo. Adding function:gsm_asr0
Add filter function gsm_asr1
FunctionInfo. Adding function:gsm_asr1
Add filter function gsm_asr2
FunctionInfo. Adding function:gsm_asr2
Add filter function gsm_div0
FunctionInfo. Adding function:gsm_div0
Add filter function gsm_div1
FunctionInfo. Adding function:gsm_div1
Add filter function gsm_div2
FunctionInfo. Adding function:gsm_div2
Add filter function Gsm_Coder0
FunctionInfo. Adding function:Gsm_Coder0
Add filter function Gsm_Coder1
FunctionInfo. Adding function:Gsm_Coder1
Add filter function Gsm_LPC_Analysis0
FunctionInfo. Adding function:Gsm_LPC_Analysis0
Add filter function Gsm_Long_Term_Predictor0
FunctionInfo. Adding function:Gsm_Long_Term_Predictor0
Add filter function Gsm_RPE_Encoding0
FunctionInfo. Adding function:Gsm_RPE_Encoding0
Add filter function Weighting_filter0
FunctionInfo. Adding function:Weighting_filter0
Add filter function RPE_grid_selection0
FunctionInfo. Adding function:RPE_grid_selection0
Add filter function RPE_grid_selection1
FunctionInfo. Adding function:RPE_grid_selection1
Add filter function RPE_grid_selection2
FunctionInfo. Adding function:RPE_grid_selection2
Add filter function RPE_grid_selection3
FunctionInfo. Adding function:RPE_grid_selection3
Add filter function RPE_grid_selection4
FunctionInfo. Adding function:RPE_grid_selection4
Add filter function RPE_grid_selection5
FunctionInfo. Adding function:RPE_grid_selection5
Add filter function APCM_quantization0
FunctionInfo. Adding function:APCM_quantization0
Add filter function APCM_quantization1
FunctionInfo. Adding function:APCM_quantization1
Add filter function APCM_quantization2
FunctionInfo. Adding function:APCM_quantization2
Add filter function APCM_quantization3
FunctionInfo. Adding function:APCM_quantization3
Add filter function APCM_quantization4
FunctionInfo. Adding function:APCM_quantization4
Add filter function APCM_quantization5
FunctionInfo. Adding function:APCM_quantization5
Add filter function APCM_quantization6
FunctionInfo. Adding function:APCM_quantization6
Add filter function APCM_quantization7
FunctionInfo. Adding function:APCM_quantization7
Add filter function APCM_inverse_quantization0
FunctionInfo. Adding function:APCM_inverse_quantization0
Add filter function RPE_grid_positioning0
FunctionInfo. Adding function:RPE_grid_positioning0
Add filter function RPE_grid_positioning1
FunctionInfo. Adding function:RPE_grid_positioning1
Add filter function RPE_grid_positioning2
FunctionInfo. Adding function:RPE_grid_positioning2
Add filter function RPE_grid_positioning3
FunctionInfo. Adding function:RPE_grid_positioning3
Add filter function RPE_grid_positioning4
FunctionInfo. Adding function:RPE_grid_positioning4
Add filter function APCM_quantization_xmaxc_to_exp_mant0
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant0
Add filter function APCM_quantization_xmaxc_to_exp_mant1
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant1
Add filter function APCM_quantization_xmaxc_to_exp_mant2
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant2
Add filter function APCM_quantization_xmaxc_to_exp_mant3
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant3
Add filter function APCM_quantization_xmaxc_to_exp_mant4
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant4
Add filter function Calculation_of_the_LTP_parameters0
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters0
Add filter function Calculation_of_the_LTP_parameters1
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters1
Add filter function Calculation_of_the_LTP_parameters2
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters2
Add filter function Calculation_of_the_LTP_parameters3
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters3
Add filter function Calculation_of_the_LTP_parameters4
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters4
Add filter function Calculation_of_the_LTP_parameters5
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters5
Add filter function Calculation_of_the_LTP_parameters6
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters6
Add filter function Calculation_of_the_LTP_parameters7
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters7
Add filter function Calculation_of_the_LTP_parameters8
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters8
Add filter function Calculation_of_the_LTP_parameters9
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters9
Add filter function Calculation_of_the_LTP_parameters10
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters10
Add filter function Calculation_of_the_LTP_parameters11
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters11
Add filter function Long_term_analysis_filtering0
FunctionInfo. Adding function:Long_term_analysis_filtering0
Add filter function Long_term_analysis_filtering1
FunctionInfo. Adding function:Long_term_analysis_filtering1
Add filter function Long_term_analysis_filtering2
FunctionInfo. Adding function:Long_term_analysis_filtering2
Add filter function Long_term_analysis_filtering3
FunctionInfo. Adding function:Long_term_analysis_filtering3
Add filter function Coefficients_0_120
FunctionInfo. Adding function:Coefficients_0_120
Add filter function LARp_to_rp0
FunctionInfo. Adding function:LARp_to_rp0
Add filter function Short_term_analysis_filtering0
FunctionInfo. Adding function:Short_term_analysis_filtering0
Add filter function Short_term_analysis_filtering1
FunctionInfo. Adding function:Short_term_analysis_filtering1
Add filter function Short_term_analysis_filtering2
FunctionInfo. Adding function:Short_term_analysis_filtering2
Add filter function Coefficients_13_260
FunctionInfo. Adding function:Coefficients_13_260
Add filter function Coefficients_27_390
FunctionInfo. Adding function:Coefficients_27_390
Add filter function Coefficients_40_1590
FunctionInfo. Adding function:Coefficients_40_1590
Add filter function Coefficients_40_1591
FunctionInfo. Adding function:Coefficients_40_1591
Add filter function Autocorrelation0
FunctionInfo. Adding function:Autocorrelation0
Add filter function Autocorrelation1
FunctionInfo. Adding function:Autocorrelation1
Add filter function Autocorrelation2
FunctionInfo. Adding function:Autocorrelation2
Add filter function Autocorrelation3
FunctionInfo. Adding function:Autocorrelation3
Add filter function Autocorrelation4
FunctionInfo. Adding function:Autocorrelation4
Add filter function Autocorrelation5
FunctionInfo. Adding function:Autocorrelation5
Add filter function Autocorrelation6
FunctionInfo. Adding function:Autocorrelation6
Add filter function Autocorrelation7
FunctionInfo. Adding function:Autocorrelation7
Add filter function Autocorrelation8
FunctionInfo. Adding function:Autocorrelation8
Add filter function Autocorrelation9
FunctionInfo. Adding function:Autocorrelation9
Add filter function Autocorrelation10
FunctionInfo. Adding function:Autocorrelation10
Add filter function Autocorrelation11
FunctionInfo. Adding function:Autocorrelation11
Add filter function Autocorrelation12
FunctionInfo. Adding function:Autocorrelation12
Add filter function Autocorrelation13
FunctionInfo. Adding function:Autocorrelation13
Add filter function Autocorrelation14
FunctionInfo. Adding function:Autocorrelation14
Add filter function Autocorrelation15
FunctionInfo. Adding function:Autocorrelation15
Add filter function Autocorrelation16
FunctionInfo. Adding function:Autocorrelation16
Add filter function Reflection_coefficients0
FunctionInfo. Adding function:Reflection_coefficients0
Add filter function Reflection_coefficients1
FunctionInfo. Adding function:Reflection_coefficients1
Add filter function Reflection_coefficients2
FunctionInfo. Adding function:Reflection_coefficients2
Add filter function Reflection_coefficients3
FunctionInfo. Adding function:Reflection_coefficients3
Add filter function Reflection_coefficients4
FunctionInfo. Adding function:Reflection_coefficients4
Add filter function Reflection_coefficients5
FunctionInfo. Adding function:Reflection_coefficients5
Add filter function Reflection_coefficients6
FunctionInfo. Adding function:Reflection_coefficients6
Add filter function Reflection_coefficients7
FunctionInfo. Adding function:Reflection_coefficients7
Add filter function Reflection_coefficients8
FunctionInfo. Adding function:Reflection_coefficients8
Add filter function Transformation_to_Log_Area_Ratios0
FunctionInfo. Adding function:Transformation_to_Log_Area_Ratios0
Add filter function Transformation_to_Log_Area_Ratios1
FunctionInfo. Adding function:Transformation_to_Log_Area_Ratios1
Add filter function Transformation_to_Log_Area_Ratios2
FunctionInfo. Adding function:Transformation_to_Log_Area_Ratios2
Add filter function Transformation_to_Log_Area_Ratios3
FunctionInfo. Adding function:Transformation_to_Log_Area_Ratios3
Add filter function gsm_debug_words0
FunctionInfo. Adding function:gsm_debug_words0
Add filter function gsm_debug_words1
FunctionInfo. Adding function:gsm_debug_words1
Add filter function gsm_debug_words2
FunctionInfo. Adding function:gsm_debug_words2
Add filter function gsm_debug_longwords0
FunctionInfo. Adding function:gsm_debug_longwords0
Add filter function gsm_debug_longwords1
FunctionInfo. Adding function:gsm_debug_longwords1
Add filter function gsm_debug_longwords2
FunctionInfo. Adding function:gsm_debug_longwords2
Add filter function gsm_debug_longword0
FunctionInfo. Adding function:gsm_debug_longword0
Add filter function gsm_debug_word0
FunctionInfo. Adding function:gsm_debug_word0
Add filter function Gsm_Decoder0
FunctionInfo. Adding function:Gsm_Decoder0
Add filter function Gsm_RPE_Decoding0
FunctionInfo. Adding function:Gsm_RPE_Decoding0
Add filter function Gsm_Long_Term_Synthesis_Filtering0
FunctionInfo. Adding function:Gsm_Long_Term_Synthesis_Filtering0
Add filter function Gsm_Long_Term_Synthesis_Filtering1
FunctionInfo. Adding function:Gsm_Long_Term_Synthesis_Filtering1
Add filter function Gsm_Long_Term_Synthesis_Filtering2
FunctionInfo. Adding function:Gsm_Long_Term_Synthesis_Filtering2
Add filter function Postprocessing0
FunctionInfo. Adding function:Postprocessing0
Add filter function Short_term_synthesis_filtering0
FunctionInfo. Adding function:Short_term_synthesis_filtering0
Add filter function Short_term_synthesis_filtering1
FunctionInfo. Adding function:Short_term_synthesis_filtering1
Add filter function gsm_explode0
FunctionInfo. Adding function:gsm_explode0
Add filter function gsm_implode0
FunctionInfo. Adding function:gsm_implode0
Adding generic_init other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding parse_argv0 other functions, ExtractedOnly mode uses other functions
Adding set_format other functions, ExtractedOnly mode uses other functions
Adding version other functions, ExtractedOnly mode uses other functions
Adding help other functions, ExtractedOnly mode uses other functions
Adding onintr other functions, ExtractedOnly mode uses other functions
Adding catch_signals other functions, ExtractedOnly mode uses other functions
Adding process other functions, ExtractedOnly mode uses other functions
Adding open_input other functions, ExtractedOnly mode uses other functions
Adding open_output other functions, ExtractedOnly mode uses other functions
Adding process_decode other functions, ExtractedOnly mode uses other functions
Adding process_encode other functions, ExtractedOnly mode uses other functions
Adding update_times other functions, ExtractedOnly mode uses other functions
Adding update_mode other functions, ExtractedOnly mode uses other functions
Adding update_own other functions, ExtractedOnly mode uses other functions
Adding plainname other functions, ExtractedOnly mode uses other functions
Adding codename other functions, ExtractedOnly mode uses other functions
Adding length_okay other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace other functions, ExtractedOnly mode uses other functions
Adding endname other functions, ExtractedOnly mode uses other functions
Adding normalname other functions, ExtractedOnly mode uses other functions
Adding emalloc other functions, ExtractedOnly mode uses other functions
Adding suffix other functions, ExtractedOnly mode uses other functions
Adding okay_as_input other functions, ExtractedOnly mode uses other functions
Adding grok_format other functions, ExtractedOnly mode uses other functions
Adding prepare_io other functions, ExtractedOnly mode uses other functions
Adding linear_input other functions, ExtractedOnly mode uses other functions
Adding linear_output other functions, ExtractedOnly mode uses other functions
Adding ulaw_input other functions, ExtractedOnly mode uses other functions
Adding ulaw_output other functions, ExtractedOnly mode uses other functions
Adding alaw_input other functions, ExtractedOnly mode uses other functions
Adding alaw_output other functions, ExtractedOnly mode uses other functions
Adding audio_init_input other functions, ExtractedOnly mode uses other functions
Adding get_u32 other functions, ExtractedOnly mode uses other functions
Adding audio_init_output other functions, ExtractedOnly mode uses other functions
Adding put_u32 other functions, ExtractedOnly mode uses other functions
Adding gsm_add other functions, ExtractedOnly mode uses other functions
Adding gsm_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r other functions, ExtractedOnly mode uses other functions
Adding gsm_abs other functions, ExtractedOnly mode uses other functions
Adding gsm_L_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_norm other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_div other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder other functions, ExtractedOnly mode uses other functions
Adding Gsm_Preprocess other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Analysis_Filter other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Decoding_of_the_coded_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_12 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_26 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_39 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_159 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Quantization_and_coding other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Synthesis_Filter other functions, ExtractedOnly mode uses other functions
Adding Postprocessing other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering other functions, ExtractedOnly mode uses other functions
Adding gsm_destroy other functions, ExtractedOnly mode uses other functions
Adding gsm_decode other functions, ExtractedOnly mode uses other functions
Adding gsm_encode other functions, ExtractedOnly mode uses other functions
Adding gsm_explode other functions, ExtractedOnly mode uses other functions
Adding gsm_implode other functions, ExtractedOnly mode uses other functions
Adding gsm_create other functions, ExtractedOnly mode uses other functions
Adding gsm_print other functions, ExtractedOnly mode uses other functions
Adding gsm_option other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding parse_argv00 other functions, ExtractedOnly mode uses other functions
Adding set_format0 other functions, ExtractedOnly mode uses other functions
Adding version0 other functions, ExtractedOnly mode uses other functions
Adding help0 other functions, ExtractedOnly mode uses other functions
Adding onintr0 other functions, ExtractedOnly mode uses other functions
Adding onintr1 other functions, ExtractedOnly mode uses other functions
Adding catch_signals0 other functions, ExtractedOnly mode uses other functions
Adding process0 other functions, ExtractedOnly mode uses other functions
Adding process1 other functions, ExtractedOnly mode uses other functions
Adding process2 other functions, ExtractedOnly mode uses other functions
Adding process3 other functions, ExtractedOnly mode uses other functions
Adding process4 other functions, ExtractedOnly mode uses other functions
Adding process5 other functions, ExtractedOnly mode uses other functions
Adding process6 other functions, ExtractedOnly mode uses other functions
Adding process7 other functions, ExtractedOnly mode uses other functions
Adding open_input0 other functions, ExtractedOnly mode uses other functions
Adding open_input1 other functions, ExtractedOnly mode uses other functions
Adding open_input2 other functions, ExtractedOnly mode uses other functions
Adding open_input3 other functions, ExtractedOnly mode uses other functions
Adding open_input4 other functions, ExtractedOnly mode uses other functions
Adding open_output0 other functions, ExtractedOnly mode uses other functions
Adding open_output1 other functions, ExtractedOnly mode uses other functions
Adding open_output2 other functions, ExtractedOnly mode uses other functions
Adding open_output3 other functions, ExtractedOnly mode uses other functions
Adding open_output4 other functions, ExtractedOnly mode uses other functions
Adding process_decode0 other functions, ExtractedOnly mode uses other functions
Adding process_encode0 other functions, ExtractedOnly mode uses other functions
Adding update_times0 other functions, ExtractedOnly mode uses other functions
Adding update_mode0 other functions, ExtractedOnly mode uses other functions
Adding update_own0 other functions, ExtractedOnly mode uses other functions
Adding length_okay0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace1 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace2 other functions, ExtractedOnly mode uses other functions
Adding endname0 other functions, ExtractedOnly mode uses other functions
Adding normalname0 other functions, ExtractedOnly mode uses other functions
Adding normalname1 other functions, ExtractedOnly mode uses other functions
Adding normalname2 other functions, ExtractedOnly mode uses other functions
Adding normalname3 other functions, ExtractedOnly mode uses other functions
Adding emalloc0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input1 other functions, ExtractedOnly mode uses other functions
Adding grok_format0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input1 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input2 other functions, ExtractedOnly mode uses other functions
Adding ulaw_output0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input1 other functions, ExtractedOnly mode uses other functions
Adding alaw_input2 other functions, ExtractedOnly mode uses other functions
Adding alaw_output0 other functions, ExtractedOnly mode uses other functions
Adding audio_init_input0 other functions, ExtractedOnly mode uses other functions
Adding get_u320 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult0 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub1 other functions, ExtractedOnly mode uses other functions
Adding gsm_norm0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_div0 other functions, ExtractedOnly mode uses other functions
Adding gsm_div1 other functions, ExtractedOnly mode uses other functions
Adding gsm_div2 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding0 other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection4 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization6 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization7 other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters0 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters1 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters2 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters3 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters5 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters6 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters7 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters8 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters9 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters10 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters11 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering3 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_120 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_260 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_390 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1590 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1591 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation0 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation1 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation2 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation3 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation4 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation5 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation6 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation7 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation8 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation9 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation10 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation11 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation12 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation13 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation14 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation15 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation16 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients0 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients1 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients2 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients3 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients4 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients5 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients6 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients7 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients8 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios0 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios1 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios2 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios3 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering2 other functions, ExtractedOnly mode uses other functions
Adding Postprocessing0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding gsm_explode0 other functions, ExtractedOnly mode uses other functions
Adding gsm_implode0 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:274
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
Transformation_to_Log_Area_Ratios0
Gsm_Short_Term_Synthesis_Filter
linear_input
length_okay0
Short_term_analysis_filtering1
Coefficients_27_39
Short_term_analysis_filtering
ok_to_replace
audio_init_input
Gsm_RPE_Encoding
Gsm_Long_Term_Synthesis_Filtering
process_encode0
Weighting_filter0
gsm_asr
Coefficients_40_1590
process_decode0
Gsm_Long_Term_Predictor0
open_input
open_output2
gsm_L_sub1
gsm_L_asl2
Postprocessing0
Gsm_Coder1
endname0
gsm_debug_word0
open_output3
onintr0
version
Gsm_RPE_Encoding0
process1
gsm_norm0
APCM_quantization_xmaxc_to_exp_mant
Autocorrelation8
gsm_asr0
endname
gsm_debug_words
Coefficients_40_159
gsm_mult_r0
Reflection_coefficients5
Gsm_Coder
APCM_quantization4
normalname0
gsm_L_mult
gsm_asl
generic_init
Autocorrelation3
help
APCM_quantization7
process0
gsm_L_asl0
grok_format
Autocorrelation11
Reflection_coefficients3
gsm_debug_longwords0
catch_signals0
open_input0
parse_argv00
Gsm_Long_Term_Synthesis_Filtering2
process7
Calculation_of_the_LTP_parameters5
audio_init_input0
process4
Gsm_Decoder
RPE_grid_selection5
RPE_grid_selection0
Decoding_of_the_coded_Log_Area_Ratios
Coefficients_13_26
Gsm_RPE_Decoding
grok_format0
Calculation_of_the_LTP_parameters
Gsm_Coder0
gsm_div0
open_output0
gsm_L_add0
Short_term_synthesis_filtering
Autocorrelation13
suffix
gsm_asl1
APCM_inverse_quantization
gsm_L_asl
alaw_input1
Transformation_to_Log_Area_Ratios3
APCM_quantization0
ulaw_output0
gsm_mult0
open_output4
normalname2
Calculation_of_the_LTP_parameters9
gsm_decode
Reflection_coefficients2
RPE_grid_positioning0
APCM_quantization_xmaxc_to_exp_mant0
Autocorrelation
update_mode
Long_term_analysis_filtering0
RPE_grid_positioning
gsm_abs
RPE_grid_positioning1
gsm_L_asl1
gsm_L_asr1
open_output
gsm_destroy
open_input4
Coefficients_27_390
LARp_to_rp
Short_term_synthesis_filtering0
gsm_implode0
gsm_debug_words0
gsm_debug_longword
Postprocessing
Autocorrelation0
Calculation_of_the_LTP_parameters6
alaw_output
gsm_L_sub
Reflection_coefficients0
Weighting_filter
RPE_grid_positioning2
Coefficients_13_260
Gsm_Preprocess
ulaw_input2
ok_to_replace1
APCM_quantization3
Calculation_of_the_LTP_parameters10
length_okay
Autocorrelation14
APCM_quantization_xmaxc_to_exp_mant2
gsm_L_add
Autocorrelation7
gsm_L_asr
gsm_L_asr2
onintr1
process2
process5
Reflection_coefficients
ulaw_output
RPE_grid_selection
alaw_input0
Transformation_to_Log_Area_Ratios
normalname3
Calculation_of_the_LTP_parameters0
RPE_grid_selection3
help0
Calculation_of_the_LTP_parameters1
alaw_output0
gsm_create
gsm_implode
gsm_debug_word
gsm_L_sub0
RPE_grid_positioning4
catch_signals
gsm_asr2
set_format
Autocorrelation1
Gsm_LPC_Analysis0
Reflection_coefficients7
Long_term_analysis_filtering3
Autocorrelation2
Reflection_coefficients6
gsm_norm
RPE_grid_positioning3
okay_as_input
Coefficients_40_1591
Long_term_analysis_filtering
Short_term_analysis_filtering0
APCM_inverse_quantization0
APCM_quantization_xmaxc_to_exp_mant4
gsm_debug_longwords
ulaw_input
Gsm_Long_Term_Synthesis_Filtering0
version0
gsm_L_add1
APCM_quantization6
APCM_quantization2
process3
Coefficients_0_120
Calculation_of_the_LTP_parameters4
gsm_debug_words2
gsm_sub
gsm_div1
process_encode
ulaw_input1
gsm_asl2
RPE_grid_selection4
open_input2
parse_argv0
gsm_debug_longwords2
Calculation_of_the_LTP_parameters11
Long_term_analysis_filtering2
APCM_quantization_xmaxc_to_exp_mant1
plainname
update_times0
ok_to_replace0
Quantization_and_coding
get_u32
audio_init_output
Calculation_of_the_LTP_parameters3
Transformation_to_Log_Area_Ratios1
Reflection_coefficients1
process6
Gsm_Long_Term_Predictor
Autocorrelation5
Calculation_of_the_LTP_parameters2
put_u32
Gsm_RPE_Decoding0
APCM_quantization1
Gsm_LPC_Analysis
emalloc
Autocorrelation6
open_input1
alaw_input2
APCM_quantization_xmaxc_to_exp_mant3
Autocorrelation4
gsm_asl0
Autocorrelation15
open_output1
Gsm_Short_Term_Analysis_Filter
main
gsm_debug_longword0
gsm_debug_longwords1
open_input3
gsm_asr1
emalloc0
normalname1
gsm_L_asr0
gsm_mult_r
gsm_div2
onintr
ulaw_input0
Long_term_analysis_filtering1
RPE_grid_selection1
Coefficients_0_12
process_decode
APCM_quantization
APCM_quantization5
Autocorrelation10
normalname
gsm_option
update_own0
Autocorrelation9
prepare_io
gsm_mult
codename
Autocorrelation12
main0
gsm_div
gsm_explode
okay_as_input0
Reflection_coefficients4
alaw_input
get_u320
LARp_to_rp0
update_mode0
Reflection_coefficients8
Short_term_analysis_filtering2
update_times
linear_output
Calculation_of_the_LTP_parameters7
gsm_encode
gsm_explode0
okay_as_input1
ok_to_replace2
Transformation_to_Log_Area_Ratios2
gsm_print
RPE_grid_selection2
Calculation_of_the_LTP_parameters8
set_format0
gsm_add
update_own
Gsm_Long_Term_Synthesis_Filtering1
Gsm_Decoder0
process
gsm_debug_words1
Short_term_synthesis_filtering1
Autocorrelation16
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
Functions called in loop
Function call numbers
parse_argv0 -- 1
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 260
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 261
  - operands: []
No reaching definition for: @optind = external global i32, align 4 in:   store i32 %or, i32* @f_precious, align 4, !control_dep_instr !12, !data_dep_instr !8 off: 0
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdout = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_common_0_3.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_temp.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %i.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp3 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp3.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %S = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %S.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %R = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %R.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sp.el = alloca i16*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sl.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %scalauto = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %scalauto.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_denum = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_denum.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_num = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_num.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %c.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %reply = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %reply.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: linear_input
DEF-USE: no information for: linear_output
DEF-USE: no information for: alaw_output
DEF-USE: no information for: alaw_input
DEF-USE: no information for: generic_init
DEF-USE: no information for: ulaw_output
DEF-USE: no information for: ulaw_input
DEF-USE: no information for: audio_init_output
DEF-USE: no information for: audio_init_input
No reaching definition for:   %tmp = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %tmp.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: onintr
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 274
Collecting defining blocks for generic_init
Collecting defining blocks for main
Collecting defining blocks for parse_argv0
Collecting defining blocks for set_format
Collecting defining blocks for version
Collecting defining blocks for help
Collecting defining blocks for onintr
Collecting defining blocks for catch_signals
Collecting defining blocks for process
Collecting defining blocks for open_input
Collecting defining blocks for open_output
Collecting defining blocks for process_decode
Collecting defining blocks for process_encode
Collecting defining blocks for update_times
Collecting defining blocks for update_mode
Collecting defining blocks for update_own
Collecting defining blocks for plainname
Collecting defining blocks for codename
Collecting defining blocks for length_okay
Collecting defining blocks for ok_to_replace
Collecting defining blocks for endname
Collecting defining blocks for normalname
Collecting defining blocks for emalloc
Collecting defining blocks for suffix
Collecting defining blocks for okay_as_input
Collecting defining blocks for grok_format
Collecting defining blocks for prepare_io
Collecting defining blocks for linear_input
Collecting defining blocks for linear_output
Collecting defining blocks for ulaw_input
Collecting defining blocks for ulaw_output
Collecting defining blocks for alaw_input
Collecting defining blocks for alaw_output
Collecting defining blocks for audio_init_input
Collecting defining blocks for get_u32
Collecting defining blocks for audio_init_output
Collecting defining blocks for put_u32
Collecting defining blocks for gsm_add
Collecting defining blocks for gsm_sub
Collecting defining blocks for gsm_mult
Skip. No dependence graph for function gsm_mult_r
Skip. No dependence graph for function gsm_abs
Skip. No dependence graph for function gsm_L_mult
Skip. No dependence graph for function gsm_L_add
Skip. No dependence graph for function gsm_L_sub
Collecting defining blocks for gsm_norm
Skip. No dependence graph for function gsm_L_asl
Skip. No dependence graph for function gsm_L_asr
Collecting defining blocks for gsm_asl
Collecting defining blocks for gsm_asr
Collecting defining blocks for gsm_div
Collecting defining blocks for Gsm_Coder
Collecting defining blocks for Gsm_Preprocess
Collecting defining blocks for Gsm_LPC_Analysis
Collecting defining blocks for Gsm_Short_Term_Analysis_Filter
Collecting defining blocks for Gsm_Long_Term_Predictor
Collecting defining blocks for Gsm_RPE_Encoding
Collecting defining blocks for Weighting_filter
Collecting defining blocks for RPE_grid_selection
Collecting defining blocks for APCM_quantization
Collecting defining blocks for APCM_inverse_quantization
Collecting defining blocks for RPE_grid_positioning
Collecting defining blocks for APCM_quantization_xmaxc_to_exp_mant
Collecting defining blocks for Calculation_of_the_LTP_parameters
Collecting defining blocks for Long_term_analysis_filtering
Collecting defining blocks for Decoding_of_the_coded_Log_Area_Ratios
Collecting defining blocks for Coefficients_0_12
Collecting defining blocks for LARp_to_rp
Collecting defining blocks for Short_term_analysis_filtering
Collecting defining blocks for Coefficients_13_26
Collecting defining blocks for Coefficients_27_39
Collecting defining blocks for Coefficients_40_159
Collecting defining blocks for Autocorrelation
Collecting defining blocks for Reflection_coefficients
Collecting defining blocks for Transformation_to_Log_Area_Ratios
Collecting defining blocks for Quantization_and_coding
Skip. No dependence graph for function gsm_debug_words
Skip. No dependence graph for function gsm_debug_longwords
Skip. No dependence graph for function gsm_debug_longword
Skip. No dependence graph for function gsm_debug_word
Collecting defining blocks for Gsm_Decoder
Collecting defining blocks for Gsm_RPE_Decoding
Collecting defining blocks for Gsm_Long_Term_Synthesis_Filtering
Collecting defining blocks for Gsm_Short_Term_Synthesis_Filter
Collecting defining blocks for Postprocessing
Collecting defining blocks for Short_term_synthesis_filtering
Collecting defining blocks for gsm_destroy
Collecting defining blocks for gsm_decode
Collecting defining blocks for gsm_encode
Skip. No dependence graph for function gsm_explode
Skip. No dependence graph for function gsm_implode
Collecting defining blocks for gsm_create
Skip. No dependence graph for function gsm_print
Collecting defining blocks for gsm_option
 Processing function:generic_init
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
 Processing function:main
Short range hashing enabled.
Processing path: entry  while.cond  while.body  sw.default  
After path modifications process path is empty
Processing path: entry  sw.default  
After path modifications process path
entry  sw.default  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle input dependent load operand Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Processing path: entry  while.cond  while.body  sw.bb  
After path modifications process path
sw.bb  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_decode, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.epilog  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb1  
After path modifications process path
sw.bb1  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_force, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb2  
After path modifications process path
sw.bb2  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_cat, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb3  
After path modifications process path
sw.bb3  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_precious, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb4  
After path modifications process path
sw.bb4  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_fast, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb5  
After path modifications process path
sw.bb5  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  store i32 1, i32* @f_verbose, align 4, !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb6  
After path modifications process path
sw.bb6  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_ulaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb7  
After path modifications process path
sw.bb7  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_linear = global %struct.fmtdesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @linear_input, i32 (i16*)* @linear_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb8  
After path modifications process path
sw.bb8  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_alaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @alaw_input, i32 (i16*)* @alaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb9  
After path modifications process path
sw.bb9  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !12, !data_indep_instr !10
  call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_audio = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 ()* @audio_init_input, i32 ()* @audio_init_output, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb10  
After path modifications process path is empty
Processing path: entry  sw.bb10  
After path modifications process path
entry  sw.bb10  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb11  
After path modifications process path is empty
Processing path: entry  sw.bb11  
After path modifications process path
entry  sw.bb11  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand void (...)* bitcast (void ()* @onintr to void (...)*) of the call   call void @catch_signals(void (...)* bitcast (void ()* @onintr to void (...)*)), !control_dep_instr !12, !data_indep_instr !10
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.end  if.else  while.cond15  while.body16  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  if.else  
After path modifications process path is empty
Processing path: entry  while.end  if.else  
After path modifications process path
entry  while.end  if.else  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.end  if.else  while.cond15  while.end18  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  if.else  while.end18  
After path modifications process path is empty
Processing path: entry  while.end  if.else  while.end18  
After path modifications process path
entry  while.end  if.else  while.end18  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
 Processing function:parse_argv0
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  cond.end  if.end  land.lhs.true  if.then8  
After path modifications process path
entry  cond.end  if.end  land.lhs.true  if.then8  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Processing path: entry  cond.end  if.end  if.end9  
After path modifications process path
entry  cond.end  if.end  if.end9  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion skipped because there was no hash update in between!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  cond.end  if.then  
After path modifications process path
entry  cond.end  if.then  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
 Processing function:set_format
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:version
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
No oh has been applied in the path
 Processing function:help
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
No oh has been applied in the path
 Processing function:onintr
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %tmp = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @onintr0(i8** %tmp), !control_dep_instr !8, !input_indep_instr !10, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %tmp = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @onintr1(i8** %tmp), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:catch_signals
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %fun.addr = alloca void (...)*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @catch_signals0(void (...)** %fun.addr), !control_dep_instr !8, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:process
Short range hashing enabled.
Processing path: entry  lor.lhs.false  if.end  cond.true  
After path modifications process path
entry  lor.lhs.false  if.end  cond.true  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
Processing path: entry  lor.lhs.false  if.end  cond.false  
After path modifications process path
entry  lor.lhs.false  if.end  cond.false  
Processing path: entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
After path modifications process path
entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
Processing path: entry  err  land.lhs.true77  if.then79  if.end91  
After path modifications process path
entry  err  land.lhs.true77  if.then79  if.end91  
Processing path: entry  err  if.end92  land.lhs.true94  if.then96  
After path modifications process path
entry  err  if.end92  land.lhs.true94  if.then96  
Processing path: entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
After path modifications process path
entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
Processing path: entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
Processing path: entry  err  if.end92  if.end98  if.end103  if.end108  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  if.end108  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:open_input
Short range hashing enabled.
Processing path: entry  if.else  if.then2  
After path modifications process path
entry  if.else  if.then2  
Processing path: entry  if.else  if.end12  if.end17  if.end21  if.end25  
After path modifications process path
entry  if.else  if.end12  if.end17  if.end21  if.end25  
Processing path: entry  if.else  if.end12  if.end17  if.end21  if.then23  
After path modifications process path
entry  if.else  if.end12  if.end17  if.end21  if.then23  
Processing path: entry  if.else  if.end12  if.end17  if.then20  
After path modifications process path
entry  if.else  if.end12  if.end17  if.then20  
Processing path: entry  if.else  if.end12  if.then15  
After path modifications process path
entry  if.else  if.end12  if.then15  
Processing path: entry  if.else  if.else3  if.end  
After path modifications process path
entry  if.else  if.else3  if.end  
Processing path: entry  if.else  if.else3  land.lhs.true  if.then7  
After path modifications process path
entry  if.else  if.else3  land.lhs.true  if.then7  
Processing path: entry  if.end26  cond.true  
After path modifications process path
entry  if.end26  cond.true  
Processing path: entry  if.end26  cond.end  
After path modifications process path
entry  if.end26  cond.end  
Processing path: entry  if.end26  cond.false  
After path modifications process path
entry  if.end26  cond.false  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:open_output
Short range hashing enabled.
Processing path: entry  lor.lhs.false  if.else  if.end  if.then7  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.then7  
Processing path: entry  lor.lhs.false  if.else  if.end  if.end22  if.end31  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.end22  if.end31  
Processing path: entry  lor.lhs.false  if.else  if.end  if.end22  if.then24  if.then28  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.end22  if.then24  if.then28  
Processing path: entry  lor.lhs.false  if.else  if.end  if.end22  if.then24  if.end30  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.end22  if.then24  if.end30  
Processing path: entry  lor.lhs.false  if.else  if.end  if.else9  if.then13  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.else9  if.then13  
Processing path: entry  lor.lhs.false  if.else  if.end  if.else9  if.end21  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.else9  if.end21  
Processing path: entry  lor.lhs.false  if.else  if.end  if.else9  if.else14  if.then17  if.end20  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.else9  if.else14  if.then17  if.end20  
Processing path: entry  lor.lhs.false  if.else  if.end  if.else9  if.else14  if.else19  
After path modifications process path
entry  lor.lhs.false  if.else  if.end  if.else9  if.else14  if.else19  
Processing path: entry  lor.lhs.false  if.else  if.then5  
After path modifications process path
entry  lor.lhs.false  if.else  if.then5  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end32  
After path modifications process path
entry  if.end32  
Processing path: entry  return  
After path modifications process path
entry  return  
 Processing function:process_decode
Short range hashing enabled.
Processing path: entry  if.end  while.cond  while.body  if.then8  if.then11  cond.true  
After path modifications process path is empty
Processing path: entry  if.end  if.then8  if.then11  cond.true  
After path modifications process path
entry  if.end  if.then8  if.then11  cond.true  
Processing path: entry  if.end  while.cond  while.body  if.then8  if.then11  cond.end  
After path modifications process path is empty
Processing path: entry  if.end  if.then8  if.then11  cond.end  
After path modifications process path
entry  if.end  if.then8  if.then11  cond.end  
Processing path: entry  if.end  while.cond  while.body  if.then8  if.then11  cond.false  
After path modifications process path is empty
Processing path: entry  if.end  if.then8  if.then11  cond.false  
After path modifications process path
entry  if.end  if.then8  if.then11  cond.false  
Processing path: entry  if.end  while.cond  while.body  if.then8  if.end19  
After path modifications process path is empty
Processing path: entry  if.end  if.then8  if.end19  
After path modifications process path
entry  if.end  if.then8  if.end19  
Processing path: entry  if.end  while.cond  while.body  if.end21  if.then26  cond.true28  
After path modifications process path is empty
Processing path: entry  if.end  if.then26  cond.true28  
After path modifications process path
entry  if.end  if.then26  cond.true28  
Processing path: entry  if.end  while.cond  while.body  if.end21  if.then26  cond.end30  
After path modifications process path is empty
Processing path: entry  if.end  if.then26  cond.end30  
After path modifications process path
entry  if.end  if.then26  cond.end30  
Processing path: entry  if.end  while.cond  while.body  if.end21  if.then26  cond.false29  
After path modifications process path is empty
Processing path: entry  if.end  if.then26  cond.false29  
After path modifications process path
entry  if.end  if.then26  cond.false29  
Processing path: entry  if.end  while.cond  while.body  if.end21  if.end34  if.then39  
After path modifications process path is empty
Processing path: entry  if.end  if.then39  
After path modifications process path
entry  if.end  if.then39  
Processing path: entry  if.end  while.cond  while.body  if.end21  if.end34  if.end41  
After path modifications process path is empty
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  while.end  if.then44  cond.true46  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then44  cond.true46  
After path modifications process path
entry  if.end  while.end  if.then44  cond.true46  
Processing path: entry  if.end  while.cond  while.end  if.then44  cond.end48  cond.true51  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then44  cond.end48  cond.true51  
After path modifications process path
entry  if.end  while.end  if.then44  cond.end48  cond.true51  
Processing path: entry  if.end  while.cond  while.end  if.then44  cond.end48  cond.end53  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then44  cond.end48  cond.end53  
After path modifications process path
entry  if.end  while.end  if.then44  cond.end48  cond.end53  
Processing path: entry  if.end  while.cond  while.end  if.then44  cond.end48  cond.false52  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then44  cond.end48  cond.false52  
After path modifications process path
entry  if.end  while.end  if.then44  cond.end48  cond.false52  
Processing path: entry  if.end  while.cond  while.end  if.then44  cond.false47  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then44  cond.false47  
After path modifications process path
entry  if.end  while.end  if.then44  cond.false47  
Processing path: entry  if.end  while.cond  while.end  if.end56  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.end56  
After path modifications process path
entry  if.end  while.end  if.end56  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
 Processing function:process_encode
Short range hashing enabled.
Processing path: entry  if.end  while.cond  while.body  if.then6  
After path modifications process path
while.body  if.then6  
Hash path invariants only
Invariants are
  br label %if.end9, !control_dep_instr !8, !data_indep_instr !10
  %arraydecay7 = getelementptr inbounds [160 x i16], [160 x i16]* %s, i32 0, i32 0, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  while.body  if.end9  if.then16  cond.true  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  if.then16  cond.true  
After path modifications process path
entry  if.end  if.then16  cond.true  
Processing path: entry  if.end  while.cond  while.body  if.end9  if.then16  cond.end  cond.true19  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  if.then16  cond.end  cond.true19  
After path modifications process path
entry  if.end  if.then16  cond.end  cond.true19  
Processing path: entry  if.end  while.cond  while.body  if.end9  if.then16  cond.end  cond.end21  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  if.then16  cond.end  cond.end21  
After path modifications process path
entry  if.end  if.then16  cond.end  cond.end21  
Processing path: entry  if.end  while.cond  while.body  if.end9  if.then16  cond.end  cond.false20  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  if.then16  cond.end  cond.false20  
After path modifications process path
entry  if.end  if.then16  cond.end  cond.false20  
Processing path: entry  if.end  while.cond  while.body  if.end9  if.then16  cond.false  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  if.then16  cond.false  
After path modifications process path
entry  if.end  if.then16  cond.false  
Processing path: entry  if.end  while.cond  while.body  if.end9  if.end24  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  while.end  if.then27  cond.true29  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then27  cond.true29  
After path modifications process path
entry  if.end  while.end  if.then27  cond.true29  
Processing path: entry  if.end  while.cond  while.end  if.then27  cond.end31  cond.true34  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then27  cond.end31  cond.true34  
After path modifications process path
entry  if.end  while.end  if.then27  cond.end31  cond.true34  
Processing path: entry  if.end  while.cond  while.end  if.then27  cond.end31  cond.end36  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then27  cond.end31  cond.end36  
After path modifications process path
entry  if.end  while.end  if.then27  cond.end31  cond.end36  
Processing path: entry  if.end  while.cond  while.end  if.then27  cond.end31  cond.false35  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then27  cond.end31  cond.false35  
After path modifications process path
entry  if.end  while.end  if.then27  cond.end31  cond.false35  
Processing path: entry  if.end  while.cond  while.end  if.then27  cond.false30  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.then27  cond.false30  
After path modifications process path
entry  if.end  while.end  if.then27  cond.false30  
Processing path: entry  if.end  while.cond  while.end  if.end39  
After path modifications process path is empty
Processing path: entry  if.end  while.end  if.end39  
After path modifications process path
entry  if.end  while.end  if.end39  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
 Processing function:update_times
Short range hashing enabled.
Processing path: entry  if.end  if.then2  
After path modifications process path
entry  if.end  if.then2  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:update_mode
Short range hashing enabled.
Processing path: entry  if.end  if.then3  
After path modifications process path
entry  if.end  if.then3  
Processing path: entry  if.end5  
After path modifications process path
entry  if.end5  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:update_own
Short range hashing enabled.
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:plainname
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:codename
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:length_okay
Short range hashing enabled.
Processing path: entry  if.end  land.lhs.true  if.then3  
After path modifications process path
entry  if.end  land.lhs.true  if.then3  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @length_okay0(i32* %retval, i64* %max_filename_length, i8** %name.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %max_filename_length = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @length_okay0(i32* %retval, i64* %max_filename_length, i8** %name.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %name.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @length_okay0(i32* %retval, i64* %max_filename_length, i8** %name.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end6  
After path modifications process path
entry  if.end  if.end6  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:ok_to_replace
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  if.end4  for.cond  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  if.end  if.end4  
After path modifications process path
entry  if.end  if.end4  
Processing path: entry  if.end  if.end4  for.cond  land.end  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end4  
After path modifications process path
entry  if.end  if.end4  
Processing path: entry  if.end  if.end4  for.cond  land.end  for.end  if.then11  
After path modifications process path is empty
Processing path: entry  if.end  if.end4  for.end  if.then11  
After path modifications process path
entry  if.end  if.end4  for.end  if.then11  
Processing path: entry  if.end  if.end4  for.cond  land.end  for.end  if.end12  
After path modifications process path is empty
Processing path: entry  if.end  if.end4  for.end  if.end12  
After path modifications process path
entry  if.end  if.end4  for.end  if.end12  
Processing path: entry  if.end  if.then3  
After path modifications process path
entry  if.end  if.then3  
 Processing function:endname
Short range hashing enabled.
Processing path: entry  if.then  land.lhs.true  if.then3  
After path modifications process path
entry  if.then  land.lhs.true  if.then3  
Processing call instruction..
Can't handle this operand   %name.addr = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @endname0(i8** %name.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @endname0(i8** %name.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  if.then  if.end  
After path modifications process path
entry  if.then  if.end  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
 Processing function:normalname
Short range hashing enabled.
Processing path: entry  if.end  if.then9  
After path modifications process path
entry  if.end  if.then9  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %want.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname1(i8** %want.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname1(i8** %want.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end17  
After path modifications process path
entry  if.end  if.end17  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname3(i8** %retval, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname3(i8** %retval, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.else  land.lhs.true  if.then14  
After path modifications process path
entry  if.end  if.else  land.lhs.true  if.then14  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %want.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname2(i8** %want.addr, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname2(i8** %want.addr, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.else  if.end16  
After path modifications process path
entry  if.end  if.else  if.end16  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
 Processing function:emalloc
Short range hashing enabled.
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %len.addr = alloca i64, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @emalloc0(i64* %len.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
 Processing function:suffix
Short range hashing enabled.
Processing path: entry  lor.lhs.false  if.end  cond.true  
After path modifications process path
entry  lor.lhs.false  if.end  cond.true  
Processing path: entry  lor.lhs.false  if.end  cond.end  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  
Processing path: entry  lor.lhs.false  if.end  cond.false  
After path modifications process path
entry  lor.lhs.false  if.end  cond.false  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
 Processing function:okay_as_input
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %name.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @okay_as_input0(i8** %name.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  if.end6  land.lhs.true  land.lhs.true8  if.then10  
After path modifications process path
entry  if.end  if.end6  land.lhs.true  land.lhs.true8  if.then10  
Processing path: entry  if.end  if.end6  if.end15  
After path modifications process path
entry  if.end  if.end6  if.end15  
Processing path: entry  if.end  if.then4  
After path modifications process path
entry  if.end  if.then4  
Processing call instruction..
Can't handle this operand   %name.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @okay_as_input1(i8** %name.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
 Processing function:grok_format
Short range hashing enabled.
Processing path: entry  if.then  for.cond  for.body  land.lhs.true  land.lhs.true5  if.then9  
After path modifications process path
for.body  land.lhs.true  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.then  if.then9  
After path modifications process path
entry  if.then  if.then9  
Processing path: entry  if.then  for.cond  for.body  if.end  for.inc  
After path modifications process path
for.body  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.then  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.then  for.end  
After path modifications process path
entry  if.then  for.end  
Processing call instruction..
Can't handle this operand   %c = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @grok_format0(i8** %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end10  
After path modifications process path
entry  if.end10  
Non numeric pointers (int and float) are skipped:  %retval = alloca %struct.fmtdesc*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 %struct.fmtdesc*
 Processing function:prepare_io
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:linear_input
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:linear_output
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:ulaw_input
Short range hashing enabled.
Processing path: entry  for.cond  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !8, !data_indep_instr !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  land.end  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12
  call void @ulaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @ulaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %buf.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @ulaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @ulaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  land.end  for.end  land.lhs.true  if.then  
After path modifications process path is empty
Processing path: entry  for.end  land.lhs.true  if.then  
After path modifications process path
entry  for.end  land.lhs.true  if.then  
Processing path: entry  for.cond  land.end  for.end  return  
After path modifications process path is empty
Processing path: entry  for.end  return  
After path modifications process path
entry  for.end  return  
Processing path: entry  for.cond  land.end  for.end  if.end  
After path modifications process path is empty
Processing path: entry  for.end  if.end  
After path modifications process path
entry  for.end  if.end  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @ulaw_input2(i32* %retval, i32* %i), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @ulaw_input2(i32* %retval, i32* %i), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
 Processing function:ulaw_output
Short range hashing enabled.
Processing path: entry  for.cond  for.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  for.cond  for.body  if.end  for.inc  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:alaw_input
Short range hashing enabled.
Processing path: entry  for.cond  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !8, !data_indep_instr !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  land.end  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12
  call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %buf.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  land.end  for.end  land.lhs.true  if.then  
After path modifications process path is empty
Processing path: entry  for.end  land.lhs.true  if.then  
After path modifications process path
entry  for.end  land.lhs.true  if.then  
Processing path: entry  for.cond  land.end  for.end  return  
After path modifications process path is empty
Processing path: entry  for.end  return  
After path modifications process path
entry  for.end  return  
Processing path: entry  for.cond  land.end  for.end  if.end  
After path modifications process path is empty
Processing path: entry  for.end  if.end  
After path modifications process path
entry  for.end  if.end  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input2(i32* %retval, i32* %i), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input2(i32* %retval, i32* %i), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
 Processing function:alaw_output
Short range hashing enabled.
Processing path: entry  for.cond  for.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  for.cond  for.body  if.end  for.inc  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:audio_init_input
Short range hashing enabled.
Processing path: entry  if.then  cond.true  
After path modifications process path
entry  if.then  cond.true  
Processing path: entry  if.then  cond.end  
After path modifications process path
entry  if.then  cond.end  
Processing path: entry  if.then  cond.false  
After path modifications process path
entry  if.then  cond.false  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.default  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.default  
Processing call instruction..
Can't handle this operand   %enc = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @audio_init_input0(i64* %enc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.epilog  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.epilog  
Processing path: entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.bb  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.bb  
Processing path: entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.bb22  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.bb22  
Processing path: entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.bb23  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false3  lor.lhs.false6  lor.lhs.false9  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  sw.bb23  
 Processing function:get_u32
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false5  lor.lhs.false11  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false5  lor.lhs.false11  if.end  
Processing call instruction..
Can't handle this operand   %up.addr = alloca i64*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @get_u320(i64** %up.addr, i32* %i, i64* %u), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @get_u320(i64** %up.addr, i32* %i, i64* %u), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Can't handle this operand   %u = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @get_u320(i64** %up.addr, i32* %i, i64* %u), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
 Processing function:audio_init_output
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
 Processing function:put_u32
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false10  lor.lhs.false18  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false10  lor.lhs.false18  if.end  
 Processing function:gsm_add
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end7  
After path modifications process path
entry  cond.end7  
Processing path: entry  cond.false  cond.true5  
After path modifications process path
entry  cond.false  cond.true5  
Processing path: entry  cond.false  cond.end  
After path modifications process path
entry  cond.false  cond.end  
Processing path: entry  cond.false  cond.false6  
After path modifications process path
entry  cond.false  cond.false6  
 Processing function:gsm_sub
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end7  
After path modifications process path
entry  cond.end7  
Processing path: entry  cond.false  cond.true5  
After path modifications process path
entry  cond.false  cond.true5  
Processing path: entry  cond.false  cond.end  
After path modifications process path
entry  cond.false  cond.end  
Processing path: entry  cond.false  cond.false6  
After path modifications process path
entry  cond.false  cond.false6  
 Processing function:gsm_mult
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
Skip. No dependence graph for function gsm_mult_r
Skip. No dependence graph for function gsm_abs
Skip. No dependence graph for function gsm_L_mult
Skip. No dependence graph for function gsm_L_add
Skip. No dependence graph for function gsm_L_sub
 Processing function:gsm_norm
Short range hashing enabled.
Processing path: entry  cond.true  cond.end  if.then  if.then3  
After path modifications process path
entry  cond.true  cond.end  if.then  if.then3  
Processing path: entry  cond.true  cond.end  if.then  if.end  
After path modifications process path
entry  cond.true  cond.end  if.then  if.end  
Processing path: entry  cond.true  cond.end  return  
After path modifications process path
entry  cond.true  cond.end  return  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
Processing path: entry  cond.true  cond.end  if.end4  cond.end33  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.end33  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Skip. No dependence graph for function gsm_L_asl
Skip. No dependence graph for function gsm_L_asr
 Processing function:gsm_asl
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  if.then2  
After path modifications process path
entry  if.end  if.then2  
Processing path: entry  if.end  if.end6  if.then9  
After path modifications process path
entry  if.end  if.end6  if.then9  
Processing path: entry  if.end  if.end6  if.end11  
After path modifications process path
entry  if.end  if.end6  if.end11  
 Processing function:gsm_asr
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  if.then6  
After path modifications process path
entry  if.end  if.then6  
Processing path: entry  if.end  if.end7  if.then10  
After path modifications process path
entry  if.end  if.end7  if.then10  
Processing path: entry  if.end  if.end7  if.end14  
After path modifications process path
entry  if.end  if.end7  if.end14  
 Processing function:gsm_div
Short range hashing enabled.
Processing path: entry  land.lhs.true  cond.true  cond.end  if.then  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  if.then  
Processing call instruction..
Can't handle this operand   %L_denum = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div0(i64* %L_denum, i16* %denum.addr, i64* %L_num, i16* %num.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %denum.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div0(i64* %L_denum, i16* %denum.addr, i64* %L_num, i16* %num.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_num = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div0(i64* %L_denum, i16* %denum.addr, i64* %L_num, i16* %num.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %num.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div0(i64* %L_denum, i16* %denum.addr, i64* %L_num, i16* %num.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  land.lhs.true  cond.true  cond.end  return  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  return  
Processing path: entry  land.lhs.true  cond.true  cond.end  if.end  while.cond  while.body  if.then16  
After path modifications process path
while.body  if.then16  
Hash path invariants only
Invariants are
  br label %if.end17, !control_dep_instr !8, !data_indep_instr !12
  call void @gsm_div1(i16* %div, i64* %L_num, i64* %L_denum), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %div = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div1(i16* %div, i64* %L_num, i64* %L_denum), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %L_num = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div1(i16* %div, i64* %L_num, i64* %L_denum), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %L_denum = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div1(i16* %div, i64* %L_num, i64* %L_denum), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  land.lhs.true  cond.true  cond.end  if.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  if.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  if.end  while.cond  while.body  if.end17  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  land.lhs.true  cond.true  cond.end  if.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  if.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  if.end  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  if.end  while.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  if.end  while.end  
Processing call instruction..
Can't handle this operand   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div2(i16* %retval, i16* %div), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %div = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @gsm_div2(i16* %retval, i16* %div), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Processing function:Gsm_Coder
Short range hashing enabled.
Processing path: entry  for.cond9  for.body11  cond.true  
After path modifications process path
for.body11  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  store i32 0, i32* %i, align 4, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  br label %for.cond9, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  %arraydecay4 = getelementptr inbounds [160 x i16], [160 x i16]* %so, i32 0, i32 0, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond9  for.body11  cond.end  for.inc  
After path modifications process path
for.body11  cond.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %arraydecay4 = getelementptr inbounds [160 x i16], [160 x i16]* %so, i32 0, i32 0, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
  br label %for.cond9, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  store i32 0, i32* %i, align 4, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond9  for.body11  cond.false  
After path modifications process path
for.body11  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %arraydecay4 = getelementptr inbounds [160 x i16], [160 x i16]* %so, i32 0, i32 0, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
  br label %for.cond9, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  store i32 0, i32* %i, align 4, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond9  
After path modifications process path is empty
Processing path: entry  for.cond  for.body  for.end  for.inc27  
After path modifications process path
for.body  for.end  
Hash path invariants only
Invariants are
  br label %for.inc27, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  store i32 0, i32* %i, align 4, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  br label %for.cond9, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  %arraydecay4 = getelementptr inbounds [160 x i16], [160 x i16]* %so, i32 0, i32 0, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
  call void @Gsm_Coder0(i16** %dpp, i16** %dp), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %dpp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Coder0(i16** %dpp, i16** %dp), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %dp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Coder0(i16** %dpp, i16** %dp), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end30  
After path modifications process path is empty
Processing path: entry  for.end30  
After path modifications process path
entry  for.end30  
 Processing function:Gsm_Preprocess
Short range hashing enabled.
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.true38  cond.true41  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.true38  cond.true41  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.true38  cond.end56  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.true38  cond.end56  
Hash path invariants only
Invariants are
  br label %cond.end73, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.true38  cond.false43  cond.true51  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.true38  cond.false43  cond.true51  
Hash path invariants only
Invariants are
  br label %cond.end55, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.true38  cond.false43  cond.end55  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.true38  cond.false43  cond.end55  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.true38  cond.false43  cond.false52  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.true38  cond.false43  cond.false52  
Hash path invariants only
Invariants are
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end55, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.true77  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.true77  
Hash path invariants only
Invariants are
  br label %cond.end87, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.end87  cond.true102  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.end87  cond.true102  
Hash path invariants only
Invariants are
  br label %cond.end108, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.end87  cond.end108  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.end87  
Hash path invariants only
Invariants are
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.end87  cond.false107  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.end87  cond.false107  
Hash path invariants only
Invariants are
  br label %cond.end108, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.false79  cond.true83  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.false79  cond.true83  
Hash path invariants only
Invariants are
  br label %cond.end85, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.false79  cond.end85  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.false79  cond.end85  
Hash path invariants only
Invariants are
  br label %cond.end87, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.end73  cond.false79  cond.false84  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.end73  cond.false79  cond.false84  
Hash path invariants only
Invariants are
  br label %cond.end85, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.false58  cond.true61  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.false58  cond.true61  
Hash path invariants only
Invariants are
  br label %cond.end71, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.false58  cond.end71  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.false58  cond.end71  
Hash path invariants only
Invariants are
  br label %cond.end73, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.false58  cond.false63  cond.true67  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.false58  cond.false63  cond.true67  
Hash path invariants only
Invariants are
  br label %cond.end69, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.false58  cond.false63  cond.end69  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.false58  cond.false63  cond.end69  
Hash path invariants only
Invariants are
  br label %cond.end71, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.true20  cond.end22  cond.false58  cond.false63  cond.false68  
After path modifications process path
cond.true  cond.true11  cond.true20  cond.end22  cond.false58  cond.false63  cond.false68  
Hash path invariants only
Invariants are
  br label %cond.end22, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end69, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.true11  cond.end13  cond.false21  
After path modifications process path
cond.true  cond.true11  
Hash path invariants only
Invariants are
  br label %cond.end13, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  cond.false21  
After path modifications process path
entry  cond.false21  
Processing path: entry  while.cond  while.body  cond.true  cond.end  cond.false12  
After path modifications process path
cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  cond.false12  
After path modifications process path
entry  cond.false12  
Processing path: entry  while.cond  while.body  cond.false  
After path modifications process path is empty
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
 Processing function:Gsm_LPC_Analysis
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %LARc.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_LPC_Analysis0(i16** %LARc.addr, i16** %s.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_LPC_Analysis0(i16** %LARc.addr, i16** %s.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
No oh has been applied in the path
 Processing function:Gsm_Short_Term_Analysis_Filter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:Gsm_Long_Term_Predictor
Short range hashing enabled.
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.true18  cond.end20  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.true18  cond.end20  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.false19  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.false19  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.false15  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.false15  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.false11  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.false11  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.false7  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.false7  
Processing path: entry  cond.true  cond.end  cond.false3  
After path modifications process path
entry  cond.true  cond.end  cond.false3  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Processing function:Gsm_RPE_Encoding
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %xmaxc.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Encoding0(i16** %xmaxc.addr, i16** %xMc.addr, i16** %e.addr, i16** %Mc.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xMc.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Encoding0(i16** %xmaxc.addr, i16** %xMc.addr, i16** %e.addr, i16** %Mc.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %e.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Encoding0(i16** %xmaxc.addr, i16** %xMc.addr, i16** %e.addr, i16** %Mc.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mc.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Encoding0(i16** %xmaxc.addr, i16** %xMc.addr, i16** %e.addr, i16** %Mc.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
No oh has been applied in the path
 Processing function:Weighting_filter
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
  store i64 4096, i64* %L_result, align 8, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %e.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Weighting_filter0(i16** %e.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.cond  for.body  cond.end56  for.inc  
After path modifications process path
for.body  cond.end56  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  store i64 4096, i64* %L_result, align 8, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  cond.true54  
After path modifications process path
for.body  cond.false  cond.true54  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  store i64 4096, i64* %L_result, align 8, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  cond.end  
After path modifications process path
for.body  cond.false  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  store i64 4096, i64* %L_result, align 8, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  cond.false55  
After path modifications process path
for.body  cond.false  cond.false55  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  store i64 4096, i64* %L_result, align 8, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end56  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end56  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:RPE_grid_selection
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %x.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  if.end  if.then235  
After path modifications process path
entry  if.end  if.then235  
Processing path: entry  if.end  if.end236  if.then246  
After path modifications process path
entry  if.end  if.end236  if.then246  
Processing call instruction..
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  if.end  if.end236  if.end247  
After path modifications process path
entry  if.end  if.end236  if.end247  
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  if.end236  if.end247  for.end  
After path modifications process path
entry  if.end  if.end236  if.end247  for.end  
Processing call instruction..
Can't handle this operand   %Mc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
 Processing function:APCM_quantization
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  cond.true6  
After path modifications process path
for.body  cond.true  cond.true6  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.end  
After path modifications process path
for.body  cond.true  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.false  
After path modifications process path
for.body  cond.true  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  if.then  
After path modifications process path
for.body  cond.end10  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @APCM_quantization0(i16* %xmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %xmax = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization0(i16* %xmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization0(i16* %xmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  if.end  for.inc  
After path modifications process path
for.body  cond.end10  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false8  
After path modifications process path
for.body  cond.false8  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.then37  
After path modifications process path
cond.true32  cond.end34  if.then37  
Hash path invariants only
Invariants are
  br label %if.end39, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @APCM_quantization3(i16* %exp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end34, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %exp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization3(i16* %exp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization1(i16* %temp, i16* %xmax), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xmax = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization1(i16* %temp, i16* %xmax), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  
After path modifications process path
cond.true32  cond.end34  if.end39  
Hash path invariants only
Invariants are
  br label %for.inc40, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
  br label %cond.end34, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  for.cond19  for.body22  cond.false33  
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  cond.false33  for.end42  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  cond.false33  for.end42  
Processing call instruction..
Can't handle this operand   %itest = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization2(i32* %itest, i16* %temp), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization2(i32* %itest, i16* %temp), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.cond  for.end  cond.false33  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  cond.false33  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  cond.false33  
Processing path: entry  for.end  cond.false33  
After path modifications process path
entry  for.end  cond.false33  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.cond95  for.body98  land.lhs.true102  cond.true106  cond.end108  for.inc127  
After path modifications process path
cond.true106  cond.end108  
Hash path invariants only
Invariants are
  br label %for.inc127, !control_dep_instr !8, !data_indep_instr !12
  call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end108, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %xM.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %xMc.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization5(i16* %temp2, i16** %xM.addr, i32* %i, i16* %temp1, i16** %xMc.addr, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  for.cond19  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
Processing call instruction..
Can't handle this operand   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization4(i16* %temp2, i16* %mant, i16* %temp1, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %mant = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization4(i16* %temp2, i16* %mant, i16* %temp1, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization4(i16* %temp2, i16* %mant, i16* %temp1, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %exp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization4(i16* %temp2, i16* %mant, i16* %temp1, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.cond  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
After path modifications process path
entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.cond95  for.body98  cond.false107  
After path modifications process path is empty
Processing path: entry  for.end  for.cond19  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
Processing path: entry  for.cond  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
After path modifications process path
entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  cond.false107  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.cond95  for.end129  
After path modifications process path is empty
Processing path: entry  for.end  for.cond19  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
Processing call instruction..
Can't handle this operand   %xmaxc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization7(i16* %xmaxc, i16* %mant, i16** %exp_out.addr, i16** %mant_out.addr, i16** %xmaxc_out.addr, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %mant = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization7(i16* %xmaxc, i16* %mant, i16** %exp_out.addr, i16** %mant_out.addr, i16** %xmaxc_out.addr, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %exp_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization7(i16* %xmaxc, i16* %mant, i16** %exp_out.addr, i16** %mant_out.addr, i16** %xmaxc_out.addr, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %mant_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization7(i16* %xmaxc, i16* %mant, i16** %exp_out.addr, i16** %mant_out.addr, i16** %xmaxc_out.addr, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %xmaxc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization7(i16* %xmaxc, i16* %mant, i16** %exp_out.addr, i16** %mant_out.addr, i16** %xmaxc_out.addr, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %exp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @APCM_quantization7(i16* %xmaxc, i16* %mant, i16** %exp_out.addr, i16** %mant_out.addr, i16** %xmaxc_out.addr, i16* %exp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.cond  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
After path modifications process path
entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  land.lhs.true83  cond.true87  cond.end89  for.end129  
Processing path: entry  for.end  for.cond19  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
Processing path: entry  for.cond  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
After path modifications process path
entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  land.lhs.true73  cond.true77  cond.end79  cond.false88  
Processing path: entry  for.end  for.cond19  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
Processing path: entry  for.cond  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
After path modifications process path
entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  land.lhs.true57  cond.true61  cond.end63  cond.false78  
Processing path: entry  for.end  for.cond19  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
Processing path: entry  for.cond  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
Processing path: entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
After path modifications process path
entry  for.end  for.end42  land.lhs.true  cond.true49  cond.end51  cond.false62  
Processing path: entry  for.end  for.cond19  for.end42  cond.false50  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  cond.false50  
After path modifications process path
entry  for.end  for.cond19  for.body22  cond.true32  cond.end34  if.end39  for.inc40  for.end42  cond.false50  
Processing path: entry  for.cond  for.end  for.end42  cond.false50  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  cond.false50  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  for.end42  cond.false50  
Processing path: entry  for.end  for.end42  cond.false50  
After path modifications process path
entry  for.end  for.end42  cond.false50  
 Processing function:APCM_inverse_quantization
Short range hashing enabled.
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  land.lhs.true23  cond.true27  cond.end29  cond.true42  
After path modifications process path
cond.true15  cond.true27  cond.end29  cond.true42  
Hash path invariants only
Invariants are
  br label %cond.end47, !control_dep_instr !8, !data_indep_instr !12
  br label %cond.end29, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  land.lhs.true23  cond.true27  cond.end29  cond.end47  
After path modifications process path
cond.true15  cond.true27  cond.end29  
Hash path invariants only
Invariants are
  br label %cond.end29, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  land.lhs.true23  cond.true27  cond.end29  cond.false46  
After path modifications process path
cond.true15  cond.true27  cond.end29  cond.false46  
Hash path invariants only
Invariants are
  br label %cond.end47, !control_dep_instr !8, !data_indep_instr !12
  br label %cond.end29, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  cond.false28  
After path modifications process path
cond.true15  
Hash path invariants only
Invariants are
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  cond.false28  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  cond.false28  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  cond.false16  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  cond.false16  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  cond.false16  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  for.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  for.end  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Processing function:RPE_grid_positioning
Short range hashing enabled.
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.epilog  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb6  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb6  
Processing path: entry  land.lhs.true  cond.true  cond.end  do.body  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  do.body  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb8  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb8  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb10  do.cond  do.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb10  do.cond  do.end  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Processing function:APCM_quantization_xmaxc_to_exp_mant
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then11  
After path modifications process path
entry  if.end  if.then11  
Processing path: entry  if.end  if.end21  land.lhs.true  cond.true  cond.end  land.lhs.true31  cond.true35  cond.end37  
After path modifications process path
entry  if.end  if.end21  land.lhs.true  cond.true  cond.end  land.lhs.true31  cond.true35  cond.end37  
Processing path: entry  if.end  if.end21  land.lhs.true  cond.true  cond.end  cond.false36  
After path modifications process path
entry  if.end  if.end21  land.lhs.true  cond.true  cond.end  cond.false36  
Processing path: entry  if.end  if.end21  cond.false  
After path modifications process path
entry  if.end  if.end21  cond.false  
Processing path: entry  if.end  if.else  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.end  if.else  
After path modifications process path
entry  if.end  if.else  
Processing path: entry  if.end  if.else  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  if.end  if.else  while.end  
After path modifications process path
entry  if.end  if.else  while.end  
 Processing function:Calculation_of_the_LTP_parameters
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  cond.true6  
After path modifications process path
for.body  cond.true  cond.true6  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.end  
After path modifications process path
for.body  cond.true  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.false  
After path modifications process path
for.body  cond.true  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  if.then  
After path modifications process path
for.body  cond.end10  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Calculation_of_the_LTP_parameters0(i16* %dmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %dmax = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters0(i16* %dmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters0(i16* %dmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  if.end  for.inc  
After path modifications process path
for.body  cond.end10  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false8  
After path modifications process path
for.body  cond.false8  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  if.then20  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.then20  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.then20  
Processing path: entry  for.end  if.then20  
After path modifications process path
entry  for.end  if.then20  
Processing path: entry  for.cond  for.end  if.end28  if.then32  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.then32  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.then32  
Processing path: entry  for.end  if.end28  if.then32  
After path modifications process path
entry  for.end  if.end28  if.then32  
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.body47  for.inc55  
After path modifications process path
for.body47  
Hash path invariants only
Invariants are
  br label %for.inc55, !control_dep_instr !8, !data_indep_instr !12
No oh has been applied in the path
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.body61  if.then421  
After path modifications process path
for.body61  if.then421  
Hash path invariants only
Invariants are
  %arrayidx320 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 29, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx293 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 26, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx284 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 25, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx275 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 24, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx410 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 39, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx266 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 23, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx401 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 38, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx257 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 22, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx329 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 30, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx122 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 7, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx311 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 28, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx113 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 6, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx302 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 27, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx176 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 13, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx104 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 5, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx95 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 4, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx62 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !14
  %arrayidx86 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 3, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx69 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx77 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 2, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx338 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 31, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx131 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 8, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx185 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 14, !control_dep_instr !8, !data_dep_instr !9
  call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
  %arrayidx140 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 9, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx194 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 15, !control_dep_instr !8, !data_dep_instr !9
  br label %if.end423, !control_dep_instr !8, !data_indep_instr !12
  %arrayidx347 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 32, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx149 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 10, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx203 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 16, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx356 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 33, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx158 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 11, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx212 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 17, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx365 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 34, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx167 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 12, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx221 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 18, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx374 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 35, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx230 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 19, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx383 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 36, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx239 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 20, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx392 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 37, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx248 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 21, !control_dep_instr !8, !data_dep_instr !9
Processing call instruction..
Can't handle this operand   %L_max = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %Nc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %lambda = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.body61  if.end423  for.inc424  
After path modifications process path
for.body61  if.end423  
Hash path invariants only
Invariants are
  br label %for.inc424, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
  %arrayidx293 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 26, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx410 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 39, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx284 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 25, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx401 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 38, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx221 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 18, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx329 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 30, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx230 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 19, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx347 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 32, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx122 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 7, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx311 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 28, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx113 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 6, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx302 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 27, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx104 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 5, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx62 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !14
  %arrayidx95 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 4, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx320 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 29, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx86 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 3, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx69 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx77 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 2, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx338 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 31, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx131 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 8, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx185 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 14, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx140 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 9, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx194 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 15, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx257 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 22, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx374 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 35, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx149 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 10, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx203 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 16, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx266 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 23, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx383 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 36, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx158 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 11, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx212 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 17, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx275 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 24, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx392 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 37, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx167 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 12, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx176 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 13, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx356 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 33, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx239 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 20, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx365 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 34, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx248 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 21, !control_dep_instr !8, !data_dep_instr !9
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.body453  for.inc463  
After path modifications process path
for.body453  
Hash path invariants only
Invariants are
  br label %for.inc463, !control_dep_instr !8, !data_indep_instr !12
  call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %L_power = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %dp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %Nc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.then469  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
Processing call instruction..
Can't handle this operand   %bc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters8(i16** %bc_out.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  return  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.then473  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.cond486  for.body490  if.then498  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.end474  if.then498  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
Processing call instruction..
Can't handle this operand   %S = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %L_power = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %L_max = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %R = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.cond486  for.body490  if.end499  for.inc500  
After path modifications process path
if.end499  
Hash path invariants only
Invariants are
  br label %for.inc500, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.end474  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.cond486  for.end502  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.end474  for.end502  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
Processing call instruction..
Can't handle this operand   %bc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters11(i16** %bc_out.addr, i16* %bc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %bc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters11(i16** %bc_out.addr, i16* %bc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  cond.false435  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  cond.false435  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.false42  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.false42  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.false42  
Processing path: entry  for.end  if.end28  if.end37  cond.false42  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.false42  
Processing path: entry  for.cond  for.end  if.end28  if.else33  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.else33  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.else33  
Processing call instruction..
Can't handle this operand   %scal = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters2(i16* %scal, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters2(i16* %scal, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.else33  
After path modifications process path
entry  for.end  if.end28  if.else33  
Processing path: entry  for.cond  for.end  if.else  cond.true24  cond.end26  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.true24  cond.end26  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.true24  cond.end26  
Processing path: entry  for.end  if.else  cond.true24  cond.end26  
After path modifications process path
entry  for.end  if.else  cond.true24  cond.end26  
Processing path: entry  for.cond  for.end  if.else  cond.false25  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.false25  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.false25  
Processing path: entry  for.end  if.else  cond.false25  
After path modifications process path
entry  for.end  if.else  cond.false25  
 Processing function:Long_term_analysis_filtering
Short range hashing enabled.
Processing path: entry  sw.epilog  
After path modifications process path
entry  sw.epilog  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end20, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.end20  for.inc  
After path modifications process path
for.body  cond.end20  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.false  cond.true18  
After path modifications process path
for.body  cond.false  cond.true18  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.false  cond.end  
After path modifications process path
for.body  cond.false  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end20, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.false  cond.false19  
After path modifications process path
for.body  cond.false  cond.false19  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  sw.bb  for.end  
After path modifications process path
entry  sw.bb  for.end  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.true50  
After path modifications process path
for.body29  cond.true50  
Hash path invariants only
Invariants are
  br label %cond.end58, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.end58  for.inc63  
After path modifications process path
for.body29  cond.end58  
Hash path invariants only
Invariants are
  br label %for.inc63, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.false51  cond.true54  
After path modifications process path
for.body29  cond.false51  cond.true54  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.false51  cond.end56  
After path modifications process path
for.body29  cond.false51  cond.end56  
Hash path invariants only
Invariants are
  br label %cond.end58, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.false51  cond.false55  
After path modifications process path
for.body29  cond.false51  cond.false55  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.end65  
After path modifications process path is empty
Processing path: entry  sw.bb25  for.end65  
After path modifications process path
entry  sw.bb25  for.end65  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.true91  
After path modifications process path
for.body70  cond.true91  
Hash path invariants only
Invariants are
  br label %cond.end99, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.end99  for.inc104  
After path modifications process path
for.body70  cond.end99  
Hash path invariants only
Invariants are
  br label %for.inc104, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.false92  cond.true95  
After path modifications process path
for.body70  cond.false92  cond.true95  
Hash path invariants only
Invariants are
  br label %cond.end97, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.false92  cond.end97  
After path modifications process path
for.body70  cond.false92  cond.end97  
Hash path invariants only
Invariants are
  br label %cond.end99, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.false92  cond.false96  
After path modifications process path
for.body70  cond.false92  cond.false96  
Hash path invariants only
Invariants are
  br label %cond.end97, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.end106  
After path modifications process path is empty
Processing path: entry  sw.bb66  for.end106  
After path modifications process path
entry  sw.bb66  for.end106  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.true132  
After path modifications process path
for.body111  cond.true132  
Hash path invariants only
Invariants are
  br label %cond.end140, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.end140  for.inc145  
After path modifications process path
for.body111  cond.end140  
Hash path invariants only
Invariants are
  br label %for.inc145, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.false133  cond.true136  
After path modifications process path
for.body111  cond.false133  cond.true136  
Hash path invariants only
Invariants are
  br label %cond.end138, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.false133  cond.end138  
After path modifications process path
for.body111  cond.false133  cond.end138  
Hash path invariants only
Invariants are
  br label %cond.end140, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.false133  cond.false137  
After path modifications process path
for.body111  cond.false133  cond.false137  
Hash path invariants only
Invariants are
  br label %cond.end138, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.end147  
After path modifications process path is empty
Processing path: entry  sw.bb107  for.end147  
After path modifications process path
entry  sw.bb107  for.end147  
No oh has been applied in the path
 Processing function:Decoding_of_the_coded_Log_Area_Ratios
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  cond.true11  
After path modifications process path
entry  cond.end  cond.true11  
Processing path: entry  cond.end  cond.end19  cond.true31  
After path modifications process path
entry  cond.end  cond.end19  cond.true31  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.true47  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.true47  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.true61  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.true61  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.true83  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.true83  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.true99  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.true99  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.true113  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.true113  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.true135  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.true135  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.true151  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.true151  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.true165  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.true165  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.true187  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.true187  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.true203  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.true203  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.true217  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.true217  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.true239  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.true239  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.true255  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.true255  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.true269  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.true269  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.true291  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.true291  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.true307  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.true307  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.true321  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.true321  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.true343  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.true343  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.true359  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.true359  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.true373  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.true373  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.end381  cond.true395  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.end381  cond.true395  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.end381  cond.end401  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.end381  cond.end401  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.end381  cond.false400  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.end381  cond.false400  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.false374  cond.true377  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.false374  cond.true377  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.false374  cond.end379  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.false374  cond.end379  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.false374  cond.false378  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.end365  cond.false374  cond.false378  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.false364  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.end349  cond.false364  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.false348  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.end329  cond.false348  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.false322  cond.true325  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.false322  cond.true325  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.false322  cond.end327  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.false322  cond.end327  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.false322  cond.false326  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.end313  cond.false322  cond.false326  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.false312  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.end297  cond.false312  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.false296  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.end277  cond.false296  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.false270  cond.true273  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.false270  cond.true273  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.false270  cond.end275  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.false270  cond.end275  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.false270  cond.false274  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.end261  cond.false270  cond.false274  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.false260  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.end245  cond.false260  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.false244  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.end225  cond.false244  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.false218  cond.true221  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.false218  cond.true221  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.false218  cond.end223  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.false218  cond.end223  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.false218  cond.false222  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.end209  cond.false218  cond.false222  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.false208  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.end193  cond.false208  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.false192  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.end173  cond.false192  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.false166  cond.true169  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.false166  cond.true169  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.false166  cond.end171  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.false166  cond.end171  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.false166  cond.false170  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.end157  cond.false166  cond.false170  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.false156  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.end141  cond.false156  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.false140  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.end121  cond.false140  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.false114  cond.true117  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.false114  cond.true117  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.false114  cond.end119  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.false114  cond.end119  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.false114  cond.false118  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.end105  cond.false114  cond.false118  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.false104  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.end89  cond.false104  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.false88  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.end69  cond.false88  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.false62  cond.true65  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.false62  cond.true65  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.false62  cond.end67  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.false62  cond.end67  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.end53  cond.false62  cond.false66  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.end53  cond.false62  cond.false66  
Processing path: entry  cond.end  cond.end19  cond.end37  cond.false52  
After path modifications process path
entry  cond.end  cond.end19  cond.end37  cond.false52  
Processing path: entry  cond.end  cond.end19  cond.false36  
After path modifications process path
entry  cond.end  cond.end19  cond.false36  
Processing path: entry  cond.end  cond.false12  cond.true15  
After path modifications process path
entry  cond.end  cond.false12  cond.true15  
Processing path: entry  cond.end  cond.false12  cond.end17  
After path modifications process path
entry  cond.end  cond.false12  cond.end17  
Processing path: entry  cond.end  cond.false12  cond.false16  
After path modifications process path
entry  cond.end  cond.false12  cond.false16  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Processing function:Coefficients_0_12
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.true20  
After path modifications process path
for.body  cond.end  cond.true20  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.end26  for.inc  
After path modifications process path
for.body  cond.end  cond.end26  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.false25  
After path modifications process path
for.body  cond.end  cond.false25  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_0_120(i16** %LARpp_j.addr, i16** %LARpp_j_1.addr, i16** %LARp.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j_1.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_0_120(i16** %LARpp_j.addr, i16** %LARpp_j_1.addr, i16** %LARp.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_0_120(i16** %LARpp_j.addr, i16** %LARpp_j_1.addr, i16** %LARp.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:LARp_to_rp
Short range hashing enabled.
Processing path: entry  for.cond  for.body  if.then  cond.true  
After path modifications process path
for.body  if.then  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.true11  
After path modifications process path
for.body  if.then  cond.end  cond.true11  
Hash path invariants only
Invariants are
  br label %cond.end38, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.end38  
After path modifications process path
for.body  if.then  cond.end  cond.end38  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.false14  cond.true18  
After path modifications process path
for.body  if.then  cond.end  cond.false14  cond.true18  
Hash path invariants only
Invariants are
  br label %cond.end36, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.false14  cond.end36  
After path modifications process path
for.body  if.then  cond.end  cond.false14  cond.end36  
Hash path invariants only
Invariants are
  br label %cond.end38, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.false14  cond.false21  cond.true28  
After path modifications process path
for.body  if.then  cond.end  cond.false14  cond.false21  cond.true28  
Hash path invariants only
Invariants are
  br label %cond.end34, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.false14  cond.false21  cond.end34  
After path modifications process path
for.body  if.then  cond.end  cond.false14  cond.false21  cond.end34  
Hash path invariants only
Invariants are
  br label %cond.end36, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.end  cond.false14  cond.false21  cond.false33  
After path modifications process path
for.body  if.then  cond.end  cond.false14  cond.false21  cond.false33  
Hash path invariants only
Invariants are
  br label %cond.end34, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.then  cond.false  
After path modifications process path
for.body  if.then  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  for.inc  
After path modifications process path
for.body  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.true45  
After path modifications process path
for.body  if.else  cond.true45  
Hash path invariants only
Invariants are
  br label %cond.end75, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.end75  
After path modifications process path
for.body  if.else  cond.end75  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.false49  cond.true53  
After path modifications process path
for.body  if.else  cond.false49  cond.true53  
Hash path invariants only
Invariants are
  br label %cond.end73, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.false49  cond.end73  
After path modifications process path
for.body  if.else  cond.false49  cond.end73  
Hash path invariants only
Invariants are
  br label %cond.end75, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.false49  cond.false57  cond.true65  
After path modifications process path
for.body  if.else  cond.false49  cond.false57  cond.true65  
Hash path invariants only
Invariants are
  br label %cond.end71, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.false49  cond.false57  cond.end71  
After path modifications process path
for.body  if.else  cond.false49  cond.false57  cond.end71  
Hash path invariants only
Invariants are
  br label %cond.end73, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.else  cond.false49  cond.false57  cond.false70  
After path modifications process path
for.body  if.else  cond.false49  cond.false57  cond.false70  
Hash path invariants only
Invariants are
  br label %cond.end71, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end71  cond.end73  cond.end75  cond.end  cond.end34  cond.end36  cond.end38  if.end  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end71  cond.end73  cond.end75  cond.end  cond.end34  cond.end36  cond.end38  if.end  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @LARp_to_rp0(i16** %LARp.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Short_term_analysis_filtering
Short range hashing enabled.
Processing path: entry  for.cond2  for.body3  cond.true  
After path modifications process path
for.body3  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.end  cond.true32  
After path modifications process path
for.body3  cond.end  cond.true32  
Hash path invariants only
Invariants are
  br label %cond.end38, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.end  cond.end38  for.inc  
After path modifications process path
for.body3  cond.end  cond.end38  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.end  cond.false37  
After path modifications process path
for.body3  cond.end  cond.false37  
Hash path invariants only
Invariants are
  br label %cond.end38, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.false  
After path modifications process path
for.body3  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  for.body  for.end  for.inc41  
After path modifications process path
for.body  for.end  
Hash path invariants only
Invariants are
  br label %for.inc41, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_analysis_filtering1(i16** %s.addr, i16* %di), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering1(i16** %s.addr, i16* %di), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering1(i16** %s.addr, i16* %di), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.end42  
After path modifications process path is empty
Processing path: entry  for.end42  
After path modifications process path
entry  for.end42  
No oh has been applied in the path
 Processing function:Coefficients_13_26
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  for.inc  
After path modifications process path
for.body  cond.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_13_260(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_13_260(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j_1.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_13_260(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Coefficients_27_39
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.true20  
After path modifications process path
for.body  cond.end  cond.true20  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.end26  for.inc  
After path modifications process path
for.body  cond.end  cond.end26  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.false25  
After path modifications process path
for.body  cond.end  cond.false25  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j_1.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Coefficients_40_159
Short range hashing enabled.
Processing path: entry  for.cond  for.body  for.inc  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_40_1590(i16** %LARp.addr, i16** %LARpp_j.addr), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_40_1590(i16** %LARp.addr, i16** %LARpp_j.addr), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_40_1591(i16** %LARpp_j.addr, i16** %LARp.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_40_1591(i16** %LARpp_j.addr, i16** %LARp.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Autocorrelation
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  cond.true8  
After path modifications process path
for.body  cond.true  cond.true8  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.end  
After path modifications process path
for.body  cond.true  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end16, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.false  
After path modifications process path
for.body  cond.true  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end16  if.then  
After path modifications process path
for.body  cond.end16  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Autocorrelation0(i16* %smax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %smax = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation0(i16* %smax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation0(i16* %smax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end16  if.end  for.inc  
After path modifications process path
for.body  cond.end16  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false12  
After path modifications process path
for.body  cond.false12  
Hash path invariants only
Invariants are
  br label %cond.end16, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  if.then26  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.then26  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.then26  
Processing path: entry  for.end  if.then26  
After path modifications process path
entry  for.end  if.then26  
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.epilog  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.epilog  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.epilog  
Processing path: entry  for.end  if.end37  if.then41  sw.epilog  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.epilog  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  for.cond43  for.body46  for.inc53  
After path modifications process path
for.body46  
Hash path invariants only
Invariants are
  br label %for.inc53, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation2(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation2(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation2(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  for.cond43  for.end55  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb  for.end55  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  for.end55  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  for.end55  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  for.end55  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb  for.end55  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  for.cond57  for.body60  for.inc70  
After path modifications process path
for.body60  
Hash path invariants only
Invariants are
  br label %for.inc70, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation4(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation4(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation4(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb56  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb56  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  for.cond57  for.end72  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb56  for.end72  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  for.end72  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  for.end72  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  for.end72  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb56  for.end72  
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  for.cond74  for.body77  for.inc87  
After path modifications process path
for.body77  
Hash path invariants only
Invariants are
  br label %for.inc87, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation6(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation6(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation6(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb73  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb73  
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  for.cond74  for.end89  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb73  for.end89  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  for.end89  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  for.end89  
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  for.end89  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb73  for.end89  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  for.cond91  for.body94  for.inc104  
After path modifications process path
for.body94  
Hash path invariants only
Invariants are
  br label %for.inc104, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation8(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation8(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation8(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb90  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb90  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  for.cond91  for.end106  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb90  for.end106  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  for.end106  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  for.end106  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  for.end106  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb90  for.end106  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.body109  for.inc110  
After path modifications process path
for.body109  
Hash path invariants only
Invariants are
  br label %for.inc110, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.end107  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  
Processing call instruction..
Can't handle this operand   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation10(i16** %sp, i16* %sl, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation10(i16** %sp, i16* %sl, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation10(i16** %sp, i16* %sl, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end37  if.end107  
After path modifications process path
entry  for.end  if.end37  if.end107  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.body339  for.inc395  
After path modifications process path
for.body339  
Hash path invariants only
Invariants are
  br label %for.inc395, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %L_ACF.addr = alloca i64*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  
Processing call instruction..
Can't handle this operand   %L_ACF.addr = alloca i64*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation12(i64** %L_ACF.addr, i16** %sp, i16* %sl), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation12(i64** %L_ACF.addr, i16** %sp, i16* %sl), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation12(i64** %L_ACF.addr, i16** %sp, i16* %sl), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end37  if.end107  for.end113  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.body401  for.inc402  
After path modifications process path
for.body401  
Hash path invariants only
Invariants are
  br label %for.inc402, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.cond417  for.body420  for.inc421  
After path modifications process path
for.body420  
Hash path invariants only
Invariants are
  br label %for.inc421, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.cond417  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.then410  cond.false415  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.end428  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.end428  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.end428  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.else  cond.true30  cond.end32  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.true30  cond.end32  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.true30  cond.end32  
Processing path: entry  for.end  if.else  cond.true30  cond.end32  
After path modifications process path
entry  for.end  if.else  cond.true30  cond.end32  
Processing path: entry  for.cond  for.end  if.else  cond.false31  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.false31  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.false31  
Processing path: entry  for.end  if.else  cond.false31  
After path modifications process path
entry  for.end  if.else  cond.false31  
 Processing function:Reflection_coefficients
Short range hashing enabled.
Processing path: entry  if.then  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.then  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.then  for.end  
After path modifications process path
entry  if.then  for.end  
Processing path: entry  for.end197  
After path modifications process path
entry  for.end197  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.body15  for.inc21  
After path modifications process path
for.body15  
Hash path invariants only
Invariants are
  br label %for.inc21, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.body26  for.inc31  
After path modifications process path
for.body26  
Hash path invariants only
Invariants are
  br label %for.inc31, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.body37  for.inc42  
After path modifications process path
for.body37  
Hash path invariants only
Invariants are
  br label %for.inc42, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.true53  cond.true57  
After path modifications process path
for.body48  cond.true53  cond.true57  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.true53  cond.end60  
After path modifications process path
for.body48  cond.true53  cond.end60  
Hash path invariants only
Invariants are
  br label %cond.end63, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.true53  cond.false58  
After path modifications process path
for.body48  cond.true53  cond.false58  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.cond72  for.body75  for.inc77  
After path modifications process path
for.body75  
Hash path invariants only
Invariants are
  br label %for.inc77, !control_dep_instr !8, !data_indep_instr !11
  call void @Reflection_coefficients5(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %r.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients5(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.then71  
After path modifications process path
for.body48  
Hash path invariants only
Invariants are
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients4(i32* %i, i32* %n), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %n = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients4(i32* %i, i32* %n), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  if.then71  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  if.then71  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  if.then71  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.cond72  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.then71  for.end79  
After path modifications process path
for.body48  
Hash path invariants only
Invariants are
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.end79  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.end79  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  if.then71  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  if.then71  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  if.then71  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.then93  
After path modifications process path
for.body48  cond.true86  cond.end88  if.then93  
Hash path invariants only
Invariants are
  br label %if.end97, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  call void @Reflection_coefficients7(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %r.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients7(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.then106  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  
Hash path invariants only
Invariants are
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then106  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then106  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  if.then106  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  if.then106  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  if.then106  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.true120  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.true120  
Hash path invariants only
Invariants are
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end126, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.true152  
After path modifications process path
for.body134  cond.true152  
Hash path invariants only
Invariants are
  br label %cond.end158, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.end158  cond.true180  
After path modifications process path
for.body134  cond.end158  cond.true180  
Hash path invariants only
Invariants are
  br label %cond.end186, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.end158  cond.end186  for.inc191  
After path modifications process path
for.body134  cond.end158  cond.end186  
Hash path invariants only
Invariants are
  br label %for.inc191, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.end158  cond.false185  
After path modifications process path
for.body134  cond.end158  cond.false185  
Hash path invariants only
Invariants are
  br label %cond.end186, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.false157  
After path modifications process path
for.body134  cond.false157  
Hash path invariants only
Invariants are
  br label %cond.end158, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  for.end193  for.inc194  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  for.end193  
Hash path invariants only
Invariants are
  br label %for.inc194, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.false125  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.false125  
Hash path invariants only
Invariants are
  br label %cond.end126, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.false102  
After path modifications process path
for.body48  cond.true86  cond.end88  
Hash path invariants only
Invariants are
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false102  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false102  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  cond.false102  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  cond.false102  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  cond.false102  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.false87  
After path modifications process path
for.body48  
Hash path invariants only
Invariants are
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false87  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false87  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  cond.false87  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  cond.false87  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  cond.false87  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.false61  
After path modifications process path
for.body48  cond.false61  
Hash path invariants only
Invariants are
  br label %cond.end63, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  cond.false10  
After path modifications process path
entry  if.end  cond.true  cond.end  cond.false10  
Processing path: entry  if.end  cond.false  
After path modifications process path
entry  if.end  cond.false  
 Processing function:Transformation_to_Log_Area_Ratios
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  cond.true6  
After path modifications process path
for.body  cond.true  cond.true6  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.end  
After path modifications process path
for.body  cond.true  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.false  
After path modifications process path
for.body  cond.true  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.then  
After path modifications process path
for.body  cond.true16  cond.end18  if.then  
Hash path invariants only
Invariants are
  br label %if.end49, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Transformation_to_Log_Area_Ratios0(i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Transformation_to_Log_Area_Ratios0(i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.end49  cond.true53  
After path modifications process path
for.body  cond.true16  cond.end18  if.end49  cond.true53  
Hash path invariants only
Invariants are
  br label %cond.end58, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.end49  cond.end58  cond.true64  cond.end66  for.inc  
After path modifications process path
for.body  cond.true16  cond.end18  if.end49  cond.true64  cond.end66  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end66, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.end49  cond.end58  cond.false65  
After path modifications process path
for.body  cond.true16  cond.end18  if.end49  
Hash path invariants only
Invariants are
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  cond.false65  
After path modifications process path
entry  cond.false65  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.end49  cond.false56  
After path modifications process path
for.body  cond.true16  cond.end18  if.end49  cond.false56  
Hash path invariants only
Invariants are
  br label %cond.end58, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.else  if.then27  cond.true31  cond.end33  
After path modifications process path
for.body  cond.true16  cond.end18  if.else  cond.true31  cond.end33  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Transformation_to_Log_Area_Ratios1(i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end33, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Transformation_to_Log_Area_Ratios1(i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.else  if.then27  cond.false32  
After path modifications process path
for.body  cond.true16  cond.end18  if.else  
Hash path invariants only
Invariants are
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  cond.false32  
After path modifications process path
entry  cond.false32  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.else  if.end  
After path modifications process path
for.body  cond.true16  cond.end18  if.else  if.end  
Hash path invariants only
Invariants are
  br label %if.end49, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.else  if.else37  cond.true41  cond.end43  
After path modifications process path
for.body  cond.true16  cond.end18  if.else  cond.true41  cond.end43  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Transformation_to_Log_Area_Ratios2(i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end43, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Transformation_to_Log_Area_Ratios2(i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  cond.true16  cond.end18  if.else  if.else37  cond.false42  
After path modifications process path
for.body  cond.true16  cond.end18  if.else  
Hash path invariants only
Invariants are
  br label %cond.end18, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  cond.false42  
After path modifications process path
entry  cond.false42  
Processing path: entry  for.cond  for.body  cond.end10  cond.false17  
After path modifications process path
for.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  cond.false17  
After path modifications process path
entry  cond.false17  
Processing path: entry  for.cond  for.body  cond.false8  
After path modifications process path
for.body  cond.false8  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Quantization_and_coding
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  cond.true14  
After path modifications process path
entry  cond.end  cond.true14  
Processing path: entry  cond.end  cond.end20  cond.true29  
After path modifications process path
entry  cond.end  cond.end20  cond.true29  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.true52  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.true52  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.false57  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.false57  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.true34  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.true34  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.end38  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.end38  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.false35  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.false35  
Processing path: entry  cond.end  cond.false19  
After path modifications process path
entry  cond.end  cond.false19  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Skip. No dependence graph for function gsm_debug_words
Skip. No dependence graph for function gsm_debug_longwords
Skip. No dependence graph for function gsm_debug_longword
Skip. No dependence graph for function gsm_debug_word
 Processing function:Gsm_Decoder
Short range hashing enabled.
Processing path: entry  for.cond3  for.body5  for.inc  
Extended path is 
entry  for.cond3  for.body5  for.inc  for.end  
After path modifications process path
entry  for.cond3  for.body5  for.inc  for.end  
Processing path: entry  for.cond  for.body  
Extended path is 
entry  for.cond  for.body  for.cond3  for.end  for.inc8  for.body5  for.inc  for.end14  
After path modifications process path
entry  for.cond  for.body  for.cond3  for.end  for.inc8  for.body5  for.inc  for.end14  
Processing call instruction..
Can't handle this operand   %xMcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Decoder0(i16** %xMcr.addr, i16** %xmaxcr.addr, i16** %Ncr.addr, i16** %bcr.addr, i16** %Mcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xmaxcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Decoder0(i16** %xMcr.addr, i16** %xmaxcr.addr, i16** %Ncr.addr, i16** %bcr.addr, i16** %Mcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Ncr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Decoder0(i16** %xMcr.addr, i16** %xmaxcr.addr, i16** %Ncr.addr, i16** %bcr.addr, i16** %Mcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %bcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Decoder0(i16** %xMcr.addr, i16** %xmaxcr.addr, i16** %Ncr.addr, i16** %bcr.addr, i16** %Mcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Decoder0(i16** %xMcr.addr, i16** %xmaxcr.addr, i16** %Ncr.addr, i16** %bcr.addr, i16** %Mcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond3  
Extended path is 
entry  for.cond3  for.body5  for.inc  for.end  
After path modifications process path
entry  for.cond3  for.body5  for.inc  for.end  
Processing path: entry  for.cond  for.body  for.end  for.inc8  
Extended path is 
entry  for.cond  for.body  for.cond3  for.end  for.inc8  for.body5  for.inc  for.end14  
After path modifications process path
entry  for.cond  for.body  for.cond3  for.end  for.inc8  for.body5  for.inc  for.end14  
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end14  
Extended path is 
entry  for.cond  for.body  for.cond3  for.end  for.inc8  for.body5  for.inc  for.end14  
After path modifications process path
entry  for.cond  for.body  for.cond3  for.end  for.inc8  for.body5  for.inc  for.end14  
Processing path: entry  for.end14  
After path modifications process path
entry  for.end14  
 Processing function:Gsm_RPE_Decoding
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %erp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mcr.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xmaxcr.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xMcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
No oh has been applied in the path
 Processing function:Gsm_Long_Term_Synthesis_Filtering
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.true40  
After path modifications process path
for.body  cond.true40  
Hash path invariants only
Invariants are
  br label %cond.end46, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.end46  for.inc  
After path modifications process path
for.body  cond.end46  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.false45  
After path modifications process path
for.body  cond.false45  
Hash path invariants only
Invariants are
  br label %cond.end46, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.cond51  for.body54  for.inc61  
After path modifications process path
for.body54  
Hash path invariants only
Invariants are
  br label %for.inc61, !control_dep_instr !8, !data_indep_instr !13
  call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Can't handle this operand   %drp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.cond51  for.end63  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.end  for.end63  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.end63  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.end63  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.false22  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.false22  
Processing path: entry  cond.end  cond.false16  
After path modifications process path
entry  cond.end  cond.false16  
Processing path: entry  lor.lhs.false  cond.false  
After path modifications process path
entry  lor.lhs.false  cond.false  
 Processing function:Gsm_Short_Term_Synthesis_Filter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:Postprocessing
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.true18  
After path modifications process path
for.body  cond.end  cond.true18  
Hash path invariants only
Invariants are
  br label %cond.end24, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.end24  for.inc  
After path modifications process path
for.body  cond.end  cond.end24  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.false23  
After path modifications process path
for.body  cond.end  cond.false23  
Hash path invariants only
Invariants are
  br label %cond.end24, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Short_term_synthesis_filtering
Short range hashing enabled.
Processing path: entry  for.cond  for.body  land.lhs.true  cond.true  
After path modifications process path
for.body  land.lhs.true  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.true17  
After path modifications process path
for.body  cond.end  cond.true17  
Hash path invariants only
Invariants are
  br label %cond.end25, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  land.lhs.true31  cond.true35  
After path modifications process path
for.body  cond.end  cond.end25  land.lhs.true31  cond.true35  
Hash path invariants only
Invariants are
  br label %cond.end43, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.end43  cond.true54  
After path modifications process path
for.body  cond.end  cond.end25  cond.end43  cond.true54  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.end43  cond.end60  
After path modifications process path
for.body  cond.end  cond.end25  cond.end43  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.end43  cond.false59  
After path modifications process path
for.body  cond.end  cond.end25  cond.end43  cond.false59  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.false36  
After path modifications process path
for.body  cond.end  cond.end25  cond.false36  
Hash path invariants only
Invariants are
  br label %cond.end43, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.false18  cond.true21  
After path modifications process path
for.body  cond.end  cond.false18  cond.true21  
Hash path invariants only
Invariants are
  br label %cond.end23, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.false18  cond.end23  
After path modifications process path
for.body  cond.end  cond.false18  cond.end23  
Hash path invariants only
Invariants are
  br label %cond.end25, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.false18  cond.false22  
After path modifications process path
for.body  cond.end  cond.false18  cond.false22  
Hash path invariants only
Invariants are
  br label %cond.end23, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  for.end  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
No oh has been applied in the path
 Processing function:gsm_destroy
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:gsm_decode
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:gsm_encode
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Skip. No dependence graph for function gsm_explode
Skip. No dependence graph for function gsm_implode
 Processing function:gsm_create
Short range hashing enabled.
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Skip. No dependence graph for function gsm_print
 Processing function:gsm_option
Short range hashing enabled.
Processing path: entry  sw.default  
After path modifications process path
entry  sw.default  
Processing path: entry  sw.epilog  
After path modifications process path
entry  sw.epilog  
Processing path: entry  sw.bb  if.then  
After path modifications process path
entry  sw.bb  if.then  
Processing path: entry  sw.bb  if.end  
After path modifications process path
entry  sw.bb  if.end  
Processing path: entry  sw.bb3  
After path modifications process path
entry  sw.bb3  
Extract path function for assertion assert_gsm_create_path_0
Extract path function for assertion assert_gsm_create_path_1
Extract path function for assertion assert_gsm_create_path_2
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_0
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_1
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_2
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_3
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_4
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_5
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_6
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_7
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_9
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_12
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_13
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_14
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_15
Extract path function for assertion assert_Quantization_and_coding_path_0
Extract path function for assertion assert_Quantization_and_coding_path_1
Extract path function for assertion assert_Quantization_and_coding_path_2
Extract path function for assertion assert_Quantization_and_coding_path_3
Extract path function for assertion assert_Quantization_and_coding_path_4
Extract path function for assertion assert_Quantization_and_coding_path_5
Extract path function for assertion assert_Quantization_and_coding_path_6
Extract path function for assertion assert_Quantization_and_coding_path_7
Extract path function for assertion assert_Quantization_and_coding_path_8
Extract path function for assertion assert_Quantization_and_coding_path_9
Extract path function for assertion assert_Quantization_and_coding_path_10
Extract path function for assertion assert_Quantization_and_coding_path_11
Extract path function for assertion assert_Quantization_and_coding_path_12
Extract path function for assertion assert_Quantization_and_coding_path_13
Extract path function for assertion assert_Quantization_and_coding_path_14
Extract path function for assertion assert_Quantization_and_coding_path_15
Extract path function for assertion assert_Quantization_and_coding_path_16
Extract path function for assertion assert_Quantization_and_coding_path_17
Extract path function for assertion assert_Quantization_and_coding_path_18
Extract path function for assertion assert_Quantization_and_coding_path_19
Extract path function for assertion assert_Quantization_and_coding_path_20
Extract path function for assertion assert_Quantization_and_coding_path_21
Extract path function for assertion assert_Quantization_and_coding_path_22
Extract path function for assertion assert_Quantization_and_coding_path_23
Extract path function for assertion assert_Quantization_and_coding_path_24
Extract path function for assertion assert_Quantization_and_coding_path_25
Extract path function for assertion assert_Quantization_and_coding_path_26
Extract path function for assertion assert_Quantization_and_coding_path_27
Extract path function for assertion assert_Quantization_and_coding_path_28
Extract path function for assertion assert_Quantization_and_coding_path_29
Extract path function for assertion assert_Quantization_and_coding_path_30
Extract path function for assertion assert_Quantization_and_coding_path_31
Extract path function for assertion assert_Quantization_and_coding_path_32
Extract path function for assertion assert_Quantization_and_coding_path_33
Extract path function for assertion assert_Quantization_and_coding_path_34
Extract path function for assertion assert_Quantization_and_coding_path_35
Extract path function for assertion assert_Quantization_and_coding_path_36
Extract path function for assertion assert_Quantization_and_coding_path_37
Extract path function for assertion assert_Quantization_and_coding_path_38
Extract path function for assertion assert_Quantization_and_coding_path_39
Extract path function for assertion assert_Quantization_and_coding_path_40
Extract path function for assertion assert_Quantization_and_coding_path_41
Extract path function for assertion assert_Quantization_and_coding_path_42
Extract path function for assertion assert_Quantization_and_coding_path_43
Extract path function for assertion assert_Quantization_and_coding_path_44
Extract path function for assertion assert_Quantization_and_coding_path_45
Extract path function for assertion assert_Quantization_and_coding_path_46
Extract path function for assertion assert_Quantization_and_coding_path_47
Extract path function for assertion assert_Quantization_and_coding_path_48
Extract path function for assertion assert_Quantization_and_coding_path_49
Extract path function for assertion assert_Quantization_and_coding_path_50
Extract path function for assertion assert_Quantization_and_coding_path_51
Extract path function for assertion assert_Quantization_and_coding_path_52
Extract path function for assertion assert_Quantization_and_coding_path_53
Extract path function for assertion assert_Quantization_and_coding_path_54
Extract path function for assertion assert_Quantization_and_coding_path_55
Extract path function for assertion assert_Quantization_and_coding_path_56
Extract path function for assertion assert_Quantization_and_coding_path_57
Extract path function for assertion assert_Quantization_and_coding_path_58
Extract path function for assertion assert_Quantization_and_coding_path_59
Extract path function for assertion assert_Quantization_and_coding_path_60
Extract path function for assertion assert_Quantization_and_coding_path_61
Extract path function for assertion assert_Quantization_and_coding_path_62
Extract path function for assertion assert_Quantization_and_coding_path_63
Extract path function for assertion assert_Quantization_and_coding_path_64
Extract path function for assertion assert_Coefficients_40_159_path_0
Extract path function for assertion assert_Coefficients_40_159_path_1
Extract path function for assertion assert_Coefficients_40_159_path_2
Extract path function for assertion assert_Coefficients_40_159_path_3
Extract path function for assertion assert_Coefficients_13_26_path_0
Extract path function for assertion assert_Coefficients_13_26_path_1
Extract path function for assertion assert_Coefficients_13_26_path_2
Extract path function for assertion assert_Coefficients_13_26_path_3
Extract path function for assertion assert_Coefficients_13_26_path_4
Extract path function for assertion assert_Coefficients_13_26_path_5
Extract path function for assertion assert_Coefficients_13_26_path_6
Extract path function for assertion assert_Coefficients_13_26_path_7
Extract path function for assertion assert_Short_term_analysis_filtering_path_0
Extract path function for assertion assert_Short_term_analysis_filtering_path_3
Extract path function for assertion assert_Short_term_analysis_filtering_path_6
Extract path function for assertion assert_Short_term_analysis_filtering_path_9
Extract path function for assertion assert_Short_term_analysis_filtering_path_12
Extract path function for assertion assert_LARp_to_rp_path_0
Extract path function for assertion assert_LARp_to_rp_path_1
Extract path function for assertion assert_LARp_to_rp_path_2
Extract path function for assertion assert_LARp_to_rp_path_3
Extract path function for assertion assert_LARp_to_rp_path_4
Extract path function for assertion assert_LARp_to_rp_path_5
Extract path function for assertion assert_LARp_to_rp_path_6
Extract path function for assertion assert_LARp_to_rp_path_7
Extract path function for assertion assert_LARp_to_rp_path_8
Extract path function for assertion assert_LARp_to_rp_path_9
Extract path function for assertion assert_LARp_to_rp_path_10
Extract path function for assertion assert_LARp_to_rp_path_11
Extract path function for assertion assert_LARp_to_rp_path_12
Extract path function for assertion assert_LARp_to_rp_path_13
Extract path function for assertion assert_LARp_to_rp_path_14
Extract path function for assertion assert_LARp_to_rp_path_15
Extract path function for assertion assert_LARp_to_rp_path_16
Extract path function for assertion assert_LARp_to_rp_path_17
Extract path function for assertion assert_LARp_to_rp_path_18
Extract path function for assertion assert_LARp_to_rp_path_19
Extract path function for assertion assert_LARp_to_rp_path_20
Extract path function for assertion assert_LARp_to_rp_path_21
Extract path function for assertion assert_LARp_to_rp_path_22
Extract path function for assertion assert_LARp_to_rp_path_23
Extract path function for assertion assert_LARp_to_rp_path_24
Extract path function for assertion assert_LARp_to_rp_path_25
Extract path function for assertion assert_LARp_to_rp_path_26
Extract path function for assertion assert_LARp_to_rp_path_27
Extract path function for assertion assert_LARp_to_rp_path_28
Extract path function for assertion assert_LARp_to_rp_path_29
Extract path function for assertion assert_LARp_to_rp_path_30
Extract path function for assertion assert_LARp_to_rp_path_31
Extract path function for assertion assert_LARp_to_rp_path_32
Extract path function for assertion assert_LARp_to_rp_path_33
Extract path function for assertion assert_LARp_to_rp_path_34
Extract path function for assertion assert_LARp_to_rp_path_35
Extract path function for assertion assert_Long_term_analysis_filtering_path_1
Extract path function for assertion assert_Long_term_analysis_filtering_path_3
Extract path function for assertion assert_Long_term_analysis_filtering_path_5
Extract path function for assertion assert_Long_term_analysis_filtering_path_7
Extract path function for assertion assert_Long_term_analysis_filtering_path_9
Extract path function for assertion assert_Long_term_analysis_filtering_path_13
Extract path function for assertion assert_Long_term_analysis_filtering_path_15
Extract path function for assertion assert_Long_term_analysis_filtering_path_17
Extract path function for assertion assert_Long_term_analysis_filtering_path_19
Extract path function for assertion assert_Long_term_analysis_filtering_path_21
Extract path function for assertion assert_Long_term_analysis_filtering_path_25
Extract path function for assertion assert_Long_term_analysis_filtering_path_27
Extract path function for assertion assert_Long_term_analysis_filtering_path_29
Extract path function for assertion assert_Long_term_analysis_filtering_path_31
Extract path function for assertion assert_Long_term_analysis_filtering_path_33
Extract path function for assertion assert_Long_term_analysis_filtering_path_37
Extract path function for assertion assert_Long_term_analysis_filtering_path_39
Extract path function for assertion assert_Long_term_analysis_filtering_path_41
Extract path function for assertion assert_Long_term_analysis_filtering_path_43
Extract path function for assertion assert_Long_term_analysis_filtering_path_45
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_0
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_1
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_2
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_3
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_4
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_5
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_6
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_7
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_8
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_9
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_10
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_11
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_12
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_13
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_14
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_15
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_16
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_18
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_19
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_20
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_22
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_23
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_24
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_26
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_29
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_30
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_34
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_35
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_39
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_40
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_44
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_45
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_50
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_51
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_56
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_57
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_62
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_63
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_66
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_68
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_70
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_72
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_73
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_74
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_75
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_76
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_77
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_78
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_79
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_80
Extract path function for assertion assert_RPE_grid_positioning_path_1
Extract path function for assertion assert_RPE_grid_positioning_path_3
Extract path function for assertion assert_RPE_grid_positioning_path_4
Extract path function for assertion assert_RPE_grid_positioning_path_5
Extract path function for assertion assert_RPE_grid_positioning_path_6
Extract path function for assertion assert_RPE_grid_positioning_path_7
Extract path function for assertion assert_RPE_grid_positioning_path_8
Extract path function for assertion assert_RPE_grid_positioning_path_9
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_0
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_1
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_2
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_3
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_4
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_5
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_6
Extract path function for assertion assert_gsm_decode_path_0
Extract path function for assertion assert_gsm_decode_path_1
Extract path function for assertion assert_gsm_decode_path_2
Extract path function for assertion assert_normalname_path_0
Extract path function for assertion assert_normalname_path_1
Extract path function for assertion assert_normalname_path_2
Extract path function for assertion assert_normalname_path_3
Extract path function for assertion assert_normalname_path_4
Extract path function for assertion assert_normalname_path_5
Extract path function for assertion assert_okay_as_input_path_0
Extract path function for assertion assert_okay_as_input_path_1
Extract path function for assertion assert_okay_as_input_path_2
Extract path function for assertion assert_okay_as_input_path_3
Extract path function for assertion assert_okay_as_input_path_4
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_0
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_1
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_2
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_3
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_4
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_5
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_6
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_7
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_8
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_9
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_10
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_11
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_12
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_13
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_14
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_15
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_16
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_17
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_18
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_19
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_20
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_21
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_22
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_23
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_24
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_25
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_26
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_27
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_28
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_29
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_30
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_31
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_32
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_33
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_34
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_35
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_36
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_37
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_38
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_39
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_40
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_41
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_42
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_43
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_44
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_45
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_46
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_47
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_48
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_49
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_50
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_51
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_52
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_53
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_54
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_55
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_56
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_57
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_58
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_59
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_60
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_61
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_62
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_63
Extract path function for assertion assert_Decoding_of_the_coded_Log_Area_Ratios_path_64
Extract path function for assertion assert_ok_to_replace_path_0
Extract path function for assertion assert_ok_to_replace_path_1
Extract path function for assertion assert_ok_to_replace_path_2
Extract path function for assertion assert_ok_to_replace_path_3
Extract path function for assertion assert_ok_to_replace_path_4
Extract path function for assertion assert_ok_to_replace_path_5
Extract path function for assertion assert_ok_to_replace_path_7
Extract path function for assertion assert_ok_to_replace_path_9
Extract path function for assertion assert_ok_to_replace_path_10
Extract path function for assertion assert_endname_path_0
Extract path function for assertion assert_endname_path_1
Extract path function for assertion assert_endname_path_2
Extract path function for assertion assert_get_u32_path_0
Extract path function for assertion assert_get_u32_path_1
Extract path function for assertion assert_get_u32_path_2
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_0
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_1
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_2
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_3
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_4
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_5
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_6
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_7
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_8
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_9
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_10
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_11
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_12
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_13
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_14
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_15
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_16
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_17
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_18
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_19
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_20
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_21
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_22
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_23
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_24
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_25
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_27
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_28
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_29
Extract path function for assertion assert_Transformation_to_Log_Area_Ratios_path_31
Extract path function for assertion assert_RPE_grid_selection_path_0
Extract path function for assertion assert_RPE_grid_selection_path_1
Extract path function for assertion assert_RPE_grid_selection_path_2
Extract path function for assertion assert_RPE_grid_selection_path_3
Extract path function for assertion assert_RPE_grid_selection_path_4
Extract path function for assertion assert_RPE_grid_selection_path_6
Extract path function for assertion assert_open_output_path_0
Extract path function for assertion assert_open_output_path_1
Extract path function for assertion assert_open_output_path_2
Extract path function for assertion assert_open_output_path_3
Extract path function for assertion assert_open_output_path_4
Extract path function for assertion assert_open_output_path_5
Extract path function for assertion assert_open_output_path_6
Extract path function for assertion assert_open_output_path_7
Extract path function for assertion assert_open_output_path_8
Extract path function for assertion assert_open_output_path_9
Extract path function for assertion assert_open_output_path_10
Extract path function for assertion assert_open_output_path_11
Extract path function for assertion assert_Postprocessing_path_0
Extract path function for assertion assert_Postprocessing_path_1
Extract path function for assertion assert_Postprocessing_path_2
Extract path function for assertion assert_Postprocessing_path_3
Extract path function for assertion assert_Postprocessing_path_4
Extract path function for assertion assert_Postprocessing_path_5
Extract path function for assertion assert_Postprocessing_path_6
Extract path function for assertion assert_Postprocessing_path_7
Extract path function for assertion assert_Postprocessing_path_8
Extract path function for assertion assert_Postprocessing_path_9
Extract path function for assertion assert_Postprocessing_path_11
Extract path function for assertion assert_gsm_asr_path_0
Extract path function for assertion assert_gsm_asr_path_1
Extract path function for assertion assert_gsm_asr_path_2
Extract path function for assertion assert_gsm_asr_path_3
Extract path function for assertion assert_gsm_asr_path_4
Extract path function for assertion assert_set_format_path_0
Extract path function for assertion assert_set_format_path_1
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_0
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_1
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_2
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_3
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_4
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_6
Extract path function for assertion assert_APCM_quantization_xmaxc_to_exp_mant_path_8
Extract path function for assertion assert_suffix_path_0
Extract path function for assertion assert_suffix_path_1
Extract path function for assertion assert_suffix_path_2
Extract path function for assertion assert_suffix_path_3
Extract path function for assertion assert_suffix_path_4
Extract path function for assertion assert_Coefficients_0_12_path_0
Extract path function for assertion assert_Coefficients_0_12_path_1
Extract path function for assertion assert_Coefficients_0_12_path_2
Extract path function for assertion assert_Coefficients_0_12_path_3
Extract path function for assertion assert_Coefficients_0_12_path_4
Extract path function for assertion assert_Coefficients_0_12_path_5
Extract path function for assertion assert_Coefficients_0_12_path_6
Extract path function for assertion assert_Coefficients_0_12_path_7
Extract path function for assertion assert_Coefficients_0_12_path_8
Extract path function for assertion assert_Coefficients_0_12_path_9
Extract path function for assertion assert_Coefficients_0_12_path_10
Extract path function for assertion assert_Coefficients_0_12_path_11
Extract path function for assertion assert_generic_init_path_0
Extract path function for assertion assert_gsm_sub_path_0
Extract path function for assertion assert_gsm_sub_path_1
Extract path function for assertion assert_gsm_sub_path_2
Extract path function for assertion assert_gsm_sub_path_3
Extract path function for assertion assert_gsm_sub_path_4
Extract path function for assertion assert_Autocorrelation_path_0
Extract path function for assertion assert_Autocorrelation_path_1
Extract path function for assertion assert_Autocorrelation_path_2
Extract path function for assertion assert_Autocorrelation_path_3
Extract path function for assertion assert_Autocorrelation_path_4
Extract path function for assertion assert_Autocorrelation_path_5
Extract path function for assertion assert_Autocorrelation_path_6
Extract path function for assertion assert_Autocorrelation_path_7
Extract path function for assertion assert_Autocorrelation_path_8
Extract path function for assertion assert_Autocorrelation_path_9
Extract path function for assertion assert_Autocorrelation_path_10
Extract path function for assertion assert_Autocorrelation_path_11
Extract path function for assertion assert_Autocorrelation_path_12
Extract path function for assertion assert_Autocorrelation_path_13
Extract path function for assertion assert_Autocorrelation_path_14
Extract path function for assertion assert_Autocorrelation_path_15
Extract path function for assertion assert_Autocorrelation_path_17
Extract path function for assertion assert_Autocorrelation_path_18
Extract path function for assertion assert_Autocorrelation_path_20
Extract path function for assertion assert_Autocorrelation_path_21
Extract path function for assertion assert_Autocorrelation_path_23
Extract path function for assertion assert_Autocorrelation_path_24
Extract path function for assertion assert_Autocorrelation_path_26
Extract path function for assertion assert_Autocorrelation_path_27
Extract path function for assertion assert_Autocorrelation_path_29
Extract path function for assertion assert_Autocorrelation_path_30
Extract path function for assertion assert_Autocorrelation_path_32
Extract path function for assertion assert_Autocorrelation_path_33
Extract path function for assertion assert_Autocorrelation_path_35
Extract path function for assertion assert_Autocorrelation_path_36
Extract path function for assertion assert_Autocorrelation_path_38
Extract path function for assertion assert_Autocorrelation_path_39
Extract path function for assertion assert_Autocorrelation_path_41
Extract path function for assertion assert_Autocorrelation_path_42
Extract path function for assertion assert_Autocorrelation_path_45
Extract path function for assertion assert_Autocorrelation_path_46
Extract path function for assertion assert_Autocorrelation_path_48
Extract path function for assertion assert_Autocorrelation_path_49
Extract path function for assertion assert_Autocorrelation_path_54
Extract path function for assertion assert_Autocorrelation_path_55
Extract path function for assertion assert_Autocorrelation_path_60
Extract path function for assertion assert_Autocorrelation_path_61
Extract path function for assertion assert_Autocorrelation_path_65
Extract path function for assertion assert_Autocorrelation_path_66
Extract path function for assertion assert_Autocorrelation_path_70
Extract path function for assertion assert_Autocorrelation_path_71
Extract path function for assertion assert_Autocorrelation_path_74
Extract path function for assertion assert_Autocorrelation_path_75
Extract path function for assertion assert_Autocorrelation_path_76
Extract path function for assertion assert_Autocorrelation_path_77
Extract path function for assertion assert_update_own_path_0
Extract path function for assertion assert_update_own_path_1
Extract path function for assertion assert_update_own_path_2
Extract path function for assertion assert_emalloc_path_0
Extract path function for assertion assert_emalloc_path_1
Extract path function for assertion assert_APCM_quantization_path_0
Extract path function for assertion assert_APCM_quantization_path_1
Extract path function for assertion assert_APCM_quantization_path_2
Extract path function for assertion assert_APCM_quantization_path_3
Extract path function for assertion assert_APCM_quantization_path_4
Extract path function for assertion assert_APCM_quantization_path_5
Extract path function for assertion assert_APCM_quantization_path_6
Extract path function for assertion assert_APCM_quantization_path_7
Extract path function for assertion assert_APCM_quantization_path_8
Extract path function for assertion assert_APCM_quantization_path_9
Extract path function for assertion assert_APCM_quantization_path_10
Extract path function for assertion assert_APCM_quantization_path_11
Extract path function for assertion assert_APCM_quantization_path_12
Extract path function for assertion assert_APCM_quantization_path_13
Extract path function for assertion assert_APCM_quantization_path_14
Extract path function for assertion assert_APCM_quantization_path_15
Extract path function for assertion assert_APCM_quantization_path_16
Extract path function for assertion assert_APCM_quantization_path_17
Extract path function for assertion assert_APCM_quantization_path_18
Extract path function for assertion assert_APCM_quantization_path_19
Extract path function for assertion assert_APCM_quantization_path_20
Extract path function for assertion assert_APCM_quantization_path_22
Extract path function for assertion assert_APCM_quantization_path_23
Extract path function for assertion assert_APCM_quantization_path_24
Extract path function for assertion assert_APCM_quantization_path_26
Extract path function for assertion assert_APCM_quantization_path_27
Extract path function for assertion assert_APCM_quantization_path_28
Extract path function for assertion assert_APCM_quantization_path_30
Extract path function for assertion assert_APCM_quantization_path_31
Extract path function for assertion assert_APCM_quantization_path_32
Extract path function for assertion assert_APCM_quantization_path_33
Extract path function for assertion assert_APCM_quantization_path_34
Extract path function for assertion assert_APCM_quantization_path_35
Extract path function for assertion assert_APCM_quantization_path_36
Extract path function for assertion assert_APCM_quantization_path_37
Extract path function for assertion assert_APCM_quantization_path_38
Extract path function for assertion assert_APCM_quantization_path_39
Extract path function for assertion assert_APCM_quantization_path_40
Extract path function for assertion assert_APCM_quantization_path_41
Extract path function for assertion assert_APCM_quantization_path_42
Extract path function for assertion assert_APCM_quantization_path_43
Extract path function for assertion assert_APCM_quantization_path_44
Extract path function for assertion assert_process_decode_path_1
Extract path function for assertion assert_process_decode_path_3
Extract path function for assertion assert_process_decode_path_5
Extract path function for assertion assert_process_decode_path_7
Extract path function for assertion assert_process_decode_path_9
Extract path function for assertion assert_process_decode_path_11
Extract path function for assertion assert_process_decode_path_13
Extract path function for assertion assert_process_decode_path_15
Extract path function for assertion assert_process_decode_path_17
Extract path function for assertion assert_process_decode_path_19
Extract path function for assertion assert_process_decode_path_21
Extract path function for assertion assert_process_decode_path_23
Extract path function for assertion assert_process_decode_path_25
Extract path function for assertion assert_process_decode_path_27
Extract path function for assertion assert_process_decode_path_29
Extract path function for assertion assert_process_decode_path_30
Extract path function for assertion assert_process_decode_path_31
Extract path function for assertion assert_Short_term_synthesis_filtering_path_0
Extract path function for assertion assert_Short_term_synthesis_filtering_path_3
Extract path function for assertion assert_Short_term_synthesis_filtering_path_6
Extract path function for assertion assert_Short_term_synthesis_filtering_path_9
Extract path function for assertion assert_Short_term_synthesis_filtering_path_15
Extract path function for assertion assert_Short_term_synthesis_filtering_path_18
Extract path function for assertion assert_Short_term_synthesis_filtering_path_21
Extract path function for assertion assert_Short_term_synthesis_filtering_path_24
Extract path function for assertion assert_Short_term_synthesis_filtering_path_27
Extract path function for assertion assert_Short_term_synthesis_filtering_path_30
Extract path function for assertion assert_ulaw_output_path_1
Extract path function for assertion assert_ulaw_output_path_3
Extract path function for assertion assert_ulaw_output_path_5
Extract path function for assertion assert_ulaw_output_path_7
Extract path function for assertion assert_length_okay_path_0
Extract path function for assertion assert_length_okay_path_1
Extract path function for assertion assert_length_okay_path_2
Extract path function for assertion assert_length_okay_path_3
Extract path function for assertion assert_gsm_asl_path_0
Extract path function for assertion assert_gsm_asl_path_1
Extract path function for assertion assert_gsm_asl_path_2
Extract path function for assertion assert_gsm_asl_path_3
Extract path function for assertion assert_gsm_asl_path_4
Extract path function for assertion assert_grok_format_path_1
Extract path function for assertion assert_grok_format_path_2
Extract path function for assertion assert_grok_format_path_3
Extract path function for assertion assert_grok_format_path_5
Extract path function for assertion assert_grok_format_path_6
Extract path function for assertion assert_grok_format_path_7
Extract path function for assertion assert_gsm_mult_path_0
Extract path function for assertion assert_gsm_mult_path_1
Extract path function for assertion assert_gsm_mult_path_2
Extract path function for assertion assert_parse_argv0_path_1
Extract path function for assertion assert_put_u32_path_0
Extract path function for assertion assert_put_u32_path_1
Extract path function for assertion assert_put_u32_path_2
Extract path function for assertion assert_process_path_0
Extract path function for assertion assert_process_path_1
Extract path function for assertion assert_process_path_2
Extract path function for assertion assert_process_path_3
Extract path function for assertion assert_process_path_4
Extract path function for assertion assert_process_path_5
Extract path function for assertion assert_process_path_6
Extract path function for assertion assert_process_path_7
Extract path function for assertion assert_process_path_8
Extract path function for assertion assert_process_path_9
Extract path function for assertion assert_process_path_10
Extract path function for assertion assert_process_path_11
Extract path function for assertion assert_process_path_12
Extract path function for assertion assert_process_path_13
Extract path function for assertion assert_process_path_14
Extract path function for assertion assert_process_path_15
Extract path function for assertion assert_process_path_16
Extract path function for assertion assert_process_path_17
Extract path function for assertion assert_process_path_18
Extract path function for assertion assert_process_path_19
Extract path function for assertion assert_process_path_20
Extract path function for assertion assert_process_path_21
Extract path function for assertion assert_process_path_22
Extract path function for assertion assert_process_path_23
Extract path function for assertion assert_process_path_24
Extract path function for assertion assert_process_path_25
Extract path function for assertion assert_process_path_26
Extract path function for assertion assert_process_path_27
Extract path function for assertion assert_process_path_28
Extract path function for assertion assert_process_path_29
Extract path function for assertion assert_process_path_30
Extract path function for assertion assert_Reflection_coefficients_path_0
Extract path function for assertion assert_Reflection_coefficients_path_1
Extract path function for assertion assert_Reflection_coefficients_path_3
Extract path function for assertion assert_Reflection_coefficients_path_4
Extract path function for assertion assert_Reflection_coefficients_path_5
Extract path function for assertion assert_Reflection_coefficients_path_6
Extract path function for assertion assert_Reflection_coefficients_path_7
Extract path function for assertion assert_Reflection_coefficients_path_9
Extract path function for assertion assert_Reflection_coefficients_path_10
Extract path function for assertion assert_Reflection_coefficients_path_13
Extract path function for assertion assert_Reflection_coefficients_path_14
Extract path function for assertion assert_Reflection_coefficients_path_15
Extract path function for assertion assert_Reflection_coefficients_path_19
Extract path function for assertion assert_Reflection_coefficients_path_20
Extract path function for assertion assert_Reflection_coefficients_path_24
Extract path function for assertion assert_Reflection_coefficients_path_25
Extract path function for assertion assert_Reflection_coefficients_path_29
Extract path function for assertion assert_Reflection_coefficients_path_30
Extract path function for assertion assert_Reflection_coefficients_path_31
Extract path function for assertion assert_Reflection_coefficients_path_36
Extract path function for assertion assert_Reflection_coefficients_path_37
Extract path function for assertion assert_Reflection_coefficients_path_41
Extract path function for assertion assert_Reflection_coefficients_path_42
Extract path function for assertion assert_Reflection_coefficients_path_46
Extract path function for assertion assert_Reflection_coefficients_path_47
Extract path function for assertion assert_Reflection_coefficients_path_51
Extract path function for assertion assert_Reflection_coefficients_path_52
Extract path function for assertion assert_Reflection_coefficients_path_56
Extract path function for assertion assert_Reflection_coefficients_path_57
Extract path function for assertion assert_Reflection_coefficients_path_58
Extract path function for assertion assert_Reflection_coefficients_path_62
Extract path function for assertion assert_Reflection_coefficients_path_63
Extract path function for assertion assert_Reflection_coefficients_path_64
Extract path function for assertion assert_Reflection_coefficients_path_68
Extract path function for assertion assert_Reflection_coefficients_path_69
Extract path function for assertion assert_Reflection_coefficients_path_70
Extract path function for assertion assert_Reflection_coefficients_path_74
Extract path function for assertion assert_Reflection_coefficients_path_75
Extract path function for assertion assert_Reflection_coefficients_path_76
Extract path function for assertion assert_Reflection_coefficients_path_80
Extract path function for assertion assert_Reflection_coefficients_path_81
Extract path function for assertion assert_Reflection_coefficients_path_82
Extract path function for assertion assert_Reflection_coefficients_path_86
Extract path function for assertion assert_Reflection_coefficients_path_88
Extract path function for assertion assert_Reflection_coefficients_path_92
Extract path function for assertion assert_Reflection_coefficients_path_93
Extract path function for assertion assert_Reflection_coefficients_path_97
Extract path function for assertion assert_Reflection_coefficients_path_98
Extract path function for assertion assert_Reflection_coefficients_path_102
Extract path function for assertion assert_Reflection_coefficients_path_103
Extract path function for assertion assert_Reflection_coefficients_path_107
Extract path function for assertion assert_Reflection_coefficients_path_108
Extract path function for assertion assert_Reflection_coefficients_path_112
Extract path function for assertion assert_Reflection_coefficients_path_113
Extract path function for assertion assert_Weighting_filter_path_0
Extract path function for assertion assert_Weighting_filter_path_1
Extract path function for assertion assert_Weighting_filter_path_2
Extract path function for assertion assert_Weighting_filter_path_3
Extract path function for assertion assert_Weighting_filter_path_4
Extract path function for assertion assert_Weighting_filter_path_5
Extract path function for assertion assert_Weighting_filter_path_6
Extract path function for assertion assert_Weighting_filter_path_7
Extract path function for assertion assert_Weighting_filter_path_8
Extract path function for assertion assert_Weighting_filter_path_9
Extract path function for assertion assert_Weighting_filter_path_10
Extract path function for assertion assert_Weighting_filter_path_11
Extract path function for assertion assert_open_input_path_0
Extract path function for assertion assert_open_input_path_1
Extract path function for assertion assert_open_input_path_2
Extract path function for assertion assert_open_input_path_3
Extract path function for assertion assert_open_input_path_4
Extract path function for assertion assert_open_input_path_5
Extract path function for assertion assert_open_input_path_6
Extract path function for assertion assert_open_input_path_7
Extract path function for assertion assert_open_input_path_8
Extract path function for assertion assert_open_input_path_9
Extract path function for assertion assert_open_input_path_10
Extract path function for assertion assert_open_input_path_11
Extract path function for assertion assert_update_mode_path_0
Extract path function for assertion assert_update_mode_path_1
Extract path function for assertion assert_update_mode_path_2
Extract path function for assertion assert_gsm_option_path_0
Extract path function for assertion assert_gsm_option_path_1
Extract path function for assertion assert_gsm_option_path_2
Extract path function for assertion assert_gsm_option_path_3
Extract path function for assertion assert_gsm_option_path_4
Extract path function for assertion assert_gsm_add_path_0
Extract path function for assertion assert_gsm_add_path_1
Extract path function for assertion assert_gsm_add_path_2
Extract path function for assertion assert_gsm_add_path_3
Extract path function for assertion assert_gsm_add_path_4
Extract path function for assertion assert_ulaw_input_path_1
Extract path function for assertion assert_ulaw_input_path_3
Extract path function for assertion assert_ulaw_input_path_5
Extract path function for assertion assert_ulaw_input_path_7
Extract path function for assertion assert_ulaw_input_path_9
Extract path function for assertion assert_APCM_inverse_quantization_path_0
Extract path function for assertion assert_APCM_inverse_quantization_path_1
Extract path function for assertion assert_APCM_inverse_quantization_path_2
Extract path function for assertion assert_APCM_inverse_quantization_path_3
Extract path function for assertion assert_APCM_inverse_quantization_path_4
Extract path function for assertion assert_APCM_inverse_quantization_path_5
Extract path function for assertion assert_APCM_inverse_quantization_path_6
Extract path function for assertion assert_APCM_inverse_quantization_path_7
Extract path function for assertion assert_APCM_inverse_quantization_path_9
Extract path function for assertion assert_APCM_inverse_quantization_path_11
Extract path function for assertion assert_APCM_inverse_quantization_path_12
Extract path function for assertion assert_process_encode_path_0
Extract path function for assertion assert_process_encode_path_1
Extract path function for assertion assert_process_encode_path_3
Extract path function for assertion assert_process_encode_path_5
Extract path function for assertion assert_process_encode_path_7
Extract path function for assertion assert_process_encode_path_9
Extract path function for assertion assert_process_encode_path_11
Extract path function for assertion assert_process_encode_path_13
Extract path function for assertion assert_process_encode_path_15
Extract path function for assertion assert_process_encode_path_17
Extract path function for assertion assert_process_encode_path_19
Extract path function for assertion assert_process_encode_path_21
Extract path function for assertion assert_process_encode_path_23
Extract path function for assertion assert_process_encode_path_25
Extract path function for assertion assert_process_encode_path_26
Extract path function for assertion assert_process_encode_path_27
Extract path function for assertion assert_onintr_path_0
Extract path function for assertion assert_onintr_path_1
Extract path function for assertion assert_alaw_input_path_1
Extract path function for assertion assert_alaw_input_path_3
Extract path function for assertion assert_alaw_input_path_5
Extract path function for assertion assert_alaw_input_path_7
Extract path function for assertion assert_alaw_input_path_9
Extract path function for assertion assert_Gsm_Coder_path_0
Extract path function for assertion assert_Gsm_Coder_path_1
Extract path function for assertion assert_Gsm_Coder_path_2
Extract path function for assertion assert_Gsm_Coder_path_3
Extract path function for assertion assert_Gsm_Coder_path_4
Extract path function for assertion assert_Gsm_Coder_path_5
Extract path function for assertion assert_Gsm_Coder_path_6
Extract path function for assertion assert_Gsm_Coder_path_7
Extract path function for assertion assert_Gsm_Coder_path_8
Extract path function for assertion assert_Gsm_Coder_path_10
Extract path function for assertion assert_Gsm_Coder_path_11
Extract path function for assertion assert_Gsm_Coder_path_13
Extract path function for assertion assert_alaw_output_path_1
Extract path function for assertion assert_alaw_output_path_3
Extract path function for assertion assert_alaw_output_path_5
Extract path function for assertion assert_alaw_output_path_7
Extract path function for assertion assert_Gsm_Decoder_path_0
Extract path function for assertion assert_Gsm_Decoder_path_1
Extract path function for assertion assert_Gsm_Decoder_path_2
Extract path function for assertion assert_Gsm_Decoder_path_3
Extract path function for assertion assert_Gsm_Decoder_path_4
Extract path function for assertion assert_Gsm_Decoder_path_5
Extract path function for assertion assert_Gsm_Decoder_path_6
Extract path function for assertion assert_Gsm_Decoder_path_7
Extract path function for assertion assert_audio_init_input_path_0
Extract path function for assertion assert_audio_init_input_path_1
Extract path function for assertion assert_audio_init_input_path_2
Extract path function for assertion assert_audio_init_input_path_3
Extract path function for assertion assert_audio_init_input_path_4
Extract path function for assertion assert_audio_init_input_path_5
Extract path function for assertion assert_audio_init_input_path_6
Extract path function for assertion assert_audio_init_input_path_7
Extract path function for assertion assert_audio_init_input_path_8
Extract path function for assertion assert_gsm_destroy_path_0
Extract path function for assertion assert_gsm_destroy_path_1
Extract path function for assertion assert_update_times_path_0
Extract path function for assertion assert_update_times_path_1
Extract path function for assertion assert_update_times_path_2
Extract path function for assertion assert_Gsm_Preprocess_path_0
Extract path function for assertion assert_Gsm_Preprocess_path_1
Extract path function for assertion assert_Gsm_Preprocess_path_2
Extract path function for assertion assert_Gsm_Preprocess_path_3
Extract path function for assertion assert_Gsm_Preprocess_path_4
Extract path function for assertion assert_Gsm_Preprocess_path_5
Extract path function for assertion assert_Gsm_Preprocess_path_6
Extract path function for assertion assert_Gsm_Preprocess_path_7
Extract path function for assertion assert_Gsm_Preprocess_path_8
Extract path function for assertion assert_Gsm_Preprocess_path_9
Extract path function for assertion assert_Gsm_Preprocess_path_10
Extract path function for assertion assert_Gsm_Preprocess_path_11
Extract path function for assertion assert_Gsm_Preprocess_path_12
Extract path function for assertion assert_Gsm_Preprocess_path_13
Extract path function for assertion assert_Gsm_Preprocess_path_14
Extract path function for assertion assert_Gsm_Preprocess_path_15
Extract path function for assertion assert_Gsm_Preprocess_path_16
Extract path function for assertion assert_Gsm_Preprocess_path_17
Extract path function for assertion assert_Gsm_Preprocess_path_18
Extract path function for assertion assert_Gsm_Preprocess_path_19
Extract path function for assertion assert_Gsm_Preprocess_path_20
Extract path function for assertion assert_Gsm_Preprocess_path_21
Extract path function for assertion assert_Gsm_Preprocess_path_22
Extract path function for assertion assert_Gsm_Preprocess_path_23
Extract path function for assertion assert_Gsm_Preprocess_path_24
Extract path function for assertion assert_Gsm_Preprocess_path_25
Extract path function for assertion assert_Gsm_Preprocess_path_26
Extract path function for assertion assert_Gsm_Preprocess_path_27
Extract path function for assertion assert_Gsm_Preprocess_path_28
Extract path function for assertion assert_Gsm_Preprocess_path_29
Extract path function for assertion assert_Gsm_Preprocess_path_30
Extract path function for assertion assert_Gsm_Preprocess_path_31
Extract path function for assertion assert_Gsm_Preprocess_path_32
Extract path function for assertion assert_Gsm_Preprocess_path_33
Extract path function for assertion assert_Gsm_Preprocess_path_35
Extract path function for assertion assert_Gsm_Preprocess_path_37
Extract path function for assertion assert_Gsm_Preprocess_path_39
Extract path function for assertion assert_Gsm_Preprocess_path_41
Extract path function for assertion assert_Coefficients_27_39_path_0
Extract path function for assertion assert_Coefficients_27_39_path_1
Extract path function for assertion assert_Coefficients_27_39_path_2
Extract path function for assertion assert_Coefficients_27_39_path_3
Extract path function for assertion assert_Coefficients_27_39_path_4
Extract path function for assertion assert_Coefficients_27_39_path_5
Extract path function for assertion assert_Coefficients_27_39_path_6
Extract path function for assertion assert_Coefficients_27_39_path_7
Extract path function for assertion assert_Coefficients_27_39_path_8
Extract path function for assertion assert_Coefficients_27_39_path_9
Extract path function for assertion assert_Coefficients_27_39_path_10
Extract path function for assertion assert_Coefficients_27_39_path_11
Extract path function for assertion assert_audio_init_output_path_0
Extract path function for assertion assert_audio_init_output_path_1
Extract path function for assertion assert_audio_init_output_path_2
Extract path function for assertion assert_main_path_2
Extract path function for assertion assert_main_path_6
Extract path function for assertion assert_main_path_8
Extract path function for assertion assert_main_path_10
Extract path function for assertion assert_main_path_12
Extract path function for assertion assert_main_path_14
Extract path function for assertion assert_main_path_29
Extract path function for assertion assert_main_path_31
Extract path function for assertion assert_main_path_34
Extract path function for assertion assert_main_path_37
Extract path function for assertion assert_gsm_norm_path_0
Extract path function for assertion assert_gsm_norm_path_1
Extract path function for assertion assert_gsm_norm_path_2
Extract path function for assertion assert_gsm_norm_path_3
Extract path function for assertion assert_gsm_norm_path_4
Extract path function for assertion assert_gsm_norm_path_5
Extract path function for assertion assert_gsm_norm_path_6
Extract path function for assertion assert_gsm_norm_path_7
Extract path function for assertion assert_gsm_norm_path_8
Extract path function for assertion assert_gsm_norm_path_9
Extract path function for assertion assert_gsm_norm_path_10
Extract path function for assertion assert_gsm_div_path_0
Extract path function for assertion assert_gsm_div_path_1
Extract path function for assertion assert_gsm_div_path_2
Extract path function for assertion assert_gsm_div_path_3
Extract path function for assertion assert_gsm_div_path_5
Extract path function for assertion assert_gsm_div_path_7
Extract path function for assertion assert_gsm_div_path_8
OH stats is requested, dumping stat file...
Processed instructions number 10210
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 88,
    "numberOfDataDependentInstructions": 6149,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 0,
    "numberOfInstructionsInFunctionsWithNoDG": 1533,
    "numberOfNonHashableBlocks": 118,
    "numberOfNonHashableInstructions": 512,
    "numberOfOHProcessedInstr": 8677,
    "numberOfOtherUnprotectedInstructions": 68,
    "numberOfOtherUnprotectedLoopVariantInstructions": 20,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 66,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 1,
    "numberOfSensitiveBlocks": 1254,
    "numberOfSensitiveFunctions": 80,
    "numberOfShortRangeAssertCalls": 839,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 1005,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 834,
    "numberOfUnprotectedArgumentReachableInstructions": 348,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 2,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 128,
    "numberOfUnprotectedGlobalReachableInstructions": 216,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 529
}
ERR. processed 80 function, while filter count is 274
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 51.5408 seconds (51.5482 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  44.9067 ( 87.7%)   0.2960 ( 81.9%)  45.2026 ( 87.7%)  45.2098 ( 87.7%)  Instruments bitcode with hashing and logging functions
   5.1301 ( 10.0%)   0.0478 ( 13.2%)   5.1779 ( 10.0%)   5.1784 ( 10.0%)  runs input dependency analysis
   0.7966 (  1.6%)   0.0044 (  1.2%)   0.8010 (  1.6%)   0.7995 (  1.6%)  Memory SSA
   0.1522 (  0.3%)   0.0040 (  1.1%)   0.1562 (  0.3%)   0.1562 (  0.3%)  Bitcode Writer
   0.0800 (  0.2%)   0.0005 (  0.1%)   0.0805 (  0.2%)   0.0820 (  0.2%)  Dominator Tree Construction
   0.0499 (  0.1%)   0.0004 (  0.1%)   0.0503 (  0.1%)   0.0501 (  0.1%)  Natural Loop Information
   0.0356 (  0.1%)   0.0037 (  1.0%)   0.0393 (  0.1%)   0.0391 (  0.1%)  Module Verifier
   0.0058 (  0.0%)   0.0001 (  0.0%)   0.0059 (  0.0%)   0.0059 (  0.0%)  Function Alias Analysis Results
   0.0053 (  0.0%)   0.0001 (  0.0%)   0.0054 (  0.0%)   0.0054 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)   0.0047 (  0.0%)  Dominator Tree Construction
   0.0046 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.0%)   0.0047 (  0.0%)  Post-Dominator Tree Construction
   0.0006 (  0.0%)   0.0040 (  1.1%)   0.0046 (  0.0%)   0.0046 (  0.0%)  Include functions in a given file in any transformation
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)   0.0029 (  0.0%)  Natural Loop Information
   0.0023 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)   0.0023 (  0.0%)  Instruments bitcode with guards
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Call site information
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Remove unreachable blocks from the CFG
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  runs indirect and virtual calls analysis
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  51.1796 (100.0%)   0.3613 (100.0%)  51.5408 (100.0%)  51.5482 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0366 seconds (0.0366 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0338 (100.0%)   0.0027 (100.0%)   0.0366 (100.0%)   0.0366 (100.0%)  Parse IR
   0.0338 (100.0%)   0.0027 (100.0%)   0.0366 (100.0%)   0.0366 (100.0%)  Total

Running input dependency analysis pass
Processing function generic_init
Processing function endname0
Processing function endname
Processing function parse_argv00
Processing function parse_argv0
Processing function set_format0
Processing function set_format
Processing function version0
Processing function version
Processing function help0
Processing function help
Processing function main0
Processing function catch_signals0
Did not find function assigned   store void (...)* %1, void (...)** %fun.addr.el, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Did not find function assigned   store void (...)* %18, void (...)** %17, !extraction_store !12, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Processing function catch_signals
Did not find function assigned   store void (...)* %fun, void (...)** %fun.addr, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
Processing function open_input0
Processing function normalname0
Processing function emalloc0
Processing function onintr0
Processing function onintr1
Processing function onintr
Processing function emalloc
Processing function suffix
Processing function normalname1
Processing function normalname2
Processing function normalname3
Processing function normalname
Processing function codename
Processing function open_input1
Processing function open_input2
Processing function open_input3
Processing function open_input4
Processing function okay_as_input0
Processing function okay_as_input1
Processing function okay_as_input
Processing function plainname
Processing function grok_format0
Processing function grok_format
Processing function prepare_io
Processing function open_input
Processing function open_output0
Processing function length_okay0
Processing function length_okay
Processing function open_output1
Processing function ok_to_replace0
Processing function ok_to_replace1
Processing function ok_to_replace2
Processing function ok_to_replace
Processing function open_output2
Processing function open_output3
Processing function open_output4
Processing function open_output
Processing function update_times0
Processing function update_times
Processing function update_mode0
Processing function update_mode
Processing function update_own0
Processing function update_own
Processing function process0
Processing function process1
Processing function process2
Processing function process3
Processing function process4
Processing function process5
Processing function process6
Processing function process7
Processing function process
Processing function main
Processing function gsm_create
Processing function process_decode0
Processing function gsm_option
Processing function gsm_destroy
Processing function APCM_quantization_xmaxc_to_exp_mant0
Processing function APCM_quantization_xmaxc_to_exp_mant1
Processing function APCM_quantization_xmaxc_to_exp_mant2
Processing function APCM_quantization_xmaxc_to_exp_mant3
Processing function APCM_quantization_xmaxc_to_exp_mant4
Processing function APCM_quantization_xmaxc_to_exp_mant
Processing function gsm_sub
Processing function gsm_asl0
Processing function gsm_asr0
Processing function gsm_asr1
Processing function gsm_asr2
Processing function gsm_asr
Processing function gsm_asl1
Processing function gsm_asl2
Processing function gsm_asl
Processing function APCM_inverse_quantization0
Processing function APCM_inverse_quantization
Processing function RPE_grid_positioning0
Processing function RPE_grid_positioning1
Processing function RPE_grid_positioning2
Processing function RPE_grid_positioning3
Processing function RPE_grid_positioning4
Processing function RPE_grid_positioning
Processing function Gsm_RPE_Decoding0
Processing function Gsm_RPE_Decoding
Processing function Gsm_Long_Term_Synthesis_Filtering0
Processing function Gsm_Long_Term_Synthesis_Filtering1
Processing function Gsm_Long_Term_Synthesis_Filtering2
Processing function Gsm_Long_Term_Synthesis_Filtering
Processing function Gsm_Decoder0
Processing function Decoding_of_the_coded_Log_Area_Ratios
Processing function Coefficients_0_120
Processing function Coefficients_0_12
Processing function LARp_to_rp0
Processing function LARp_to_rp
Processing function Short_term_synthesis_filtering0
Processing function Short_term_synthesis_filtering1
Processing function Short_term_synthesis_filtering
Processing function Coefficients_13_260
Processing function Coefficients_13_26
Processing function Coefficients_27_390
Processing function Coefficients_27_39
Processing function Coefficients_40_1590
Processing function Coefficients_40_1591
Processing function Coefficients_40_159
Processing function Gsm_Short_Term_Synthesis_Filter
Processing function Postprocessing0
Processing function Postprocessing
Processing function Gsm_Decoder
Processing function gsm_decode
Processing function process_decode
Processing function process_encode0
Processing function Gsm_Preprocess
Processing function Autocorrelation0
Processing function gsm_norm0
Processing function gsm_norm
Processing function Autocorrelation1
Processing function Autocorrelation2
Processing function Autocorrelation3
Processing function Autocorrelation4
Processing function Autocorrelation5
Processing function Autocorrelation6
Processing function Autocorrelation7
Processing function Autocorrelation8
Processing function Autocorrelation9
Processing function Autocorrelation10
Processing function Autocorrelation11
Processing function Autocorrelation12
Processing function Autocorrelation13
Processing function Autocorrelation14
Processing function Autocorrelation15
Processing function Autocorrelation16
Processing function Autocorrelation
Processing function Reflection_coefficients0
Processing function Reflection_coefficients1
Processing function Reflection_coefficients2
Processing function Reflection_coefficients3
Processing function Reflection_coefficients4
Processing function Reflection_coefficients5
Processing function Reflection_coefficients6
Processing function gsm_div0
Processing function gsm_div1
Processing function gsm_div2
Processing function gsm_div
Processing function Reflection_coefficients7
Processing function Reflection_coefficients8
Processing function Reflection_coefficients
Processing function Transformation_to_Log_Area_Ratios0
Processing function Transformation_to_Log_Area_Ratios1
Processing function Transformation_to_Log_Area_Ratios2
Processing function Transformation_to_Log_Area_Ratios3
Processing function Transformation_to_Log_Area_Ratios
Processing function Quantization_and_coding
Processing function Gsm_LPC_Analysis0
Processing function Gsm_LPC_Analysis
Processing function Short_term_analysis_filtering0
Processing function Short_term_analysis_filtering1
Processing function Short_term_analysis_filtering2
Processing function Short_term_analysis_filtering
Processing function Gsm_Short_Term_Analysis_Filter
Processing function Calculation_of_the_LTP_parameters0
Processing function Calculation_of_the_LTP_parameters1
Processing function Calculation_of_the_LTP_parameters2
Processing function Calculation_of_the_LTP_parameters3
Processing function Calculation_of_the_LTP_parameters4
Processing function Calculation_of_the_LTP_parameters5
Processing function Calculation_of_the_LTP_parameters6
Processing function Calculation_of_the_LTP_parameters7
Processing function Calculation_of_the_LTP_parameters8
Processing function Calculation_of_the_LTP_parameters9
Processing function gsm_mult0
Processing function gsm_mult
Processing function Calculation_of_the_LTP_parameters10
Processing function Calculation_of_the_LTP_parameters11
Processing function Calculation_of_the_LTP_parameters
Processing function Long_term_analysis_filtering0
Processing function Long_term_analysis_filtering1
Processing function Long_term_analysis_filtering2
Processing function Long_term_analysis_filtering3
Processing function Long_term_analysis_filtering
Processing function Gsm_Long_Term_Predictor0
Processing function Gsm_Long_Term_Predictor
Processing function Weighting_filter0
Processing function Weighting_filter
Processing function RPE_grid_selection0
Processing function RPE_grid_selection1
Processing function RPE_grid_selection2
Processing function RPE_grid_selection3
Processing function RPE_grid_selection4
Processing function RPE_grid_selection5
Processing function RPE_grid_selection
Processing function APCM_quantization0
Processing function APCM_quantization1
Processing function APCM_quantization2
Processing function APCM_quantization3
Processing function gsm_add
Processing function APCM_quantization4
Processing function APCM_quantization5
Processing function APCM_quantization6
Processing function APCM_quantization7
Processing function APCM_quantization
Processing function Gsm_RPE_Encoding0
Processing function Gsm_RPE_Encoding
Processing function Gsm_Coder0
Processing function Gsm_Coder1
Processing function Gsm_Coder
Processing function gsm_encode
Processing function process_encode
Processing function linear_input
Processing function linear_output
Processing function ulaw_input0
Processing function ulaw_input1
Processing function ulaw_input2
Processing function ulaw_input
Processing function ulaw_output0
Processing function ulaw_output
Processing function alaw_input0
Processing function alaw_input1
Processing function alaw_input2
Processing function alaw_input
Processing function alaw_output0
Processing function alaw_output
Processing function get_u320
Processing function get_u32
Processing function audio_init_input0
Processing function audio_init_input
Processing function put_u32
Processing function audio_init_output
Processing function gsm_mult_r0
Processing function gsm_mult_r
Processing function gsm_abs
Processing function gsm_L_mult
Processing function gsm_L_add0
Processing function gsm_L_add1
Processing function gsm_L_add
Processing function gsm_L_sub0
Processing function gsm_L_sub1
Processing function gsm_L_sub
Processing function gsm_L_asl0
Processing function gsm_L_asr0
Processing function gsm_L_asr1
Processing function gsm_L_asr2
Processing function gsm_L_asr
Processing function gsm_L_asl1
Processing function gsm_L_asl2
Processing function gsm_L_asl
Processing function gsm_debug_words0
Processing function gsm_debug_words1
Processing function gsm_debug_words2
Processing function gsm_debug_words
Processing function gsm_debug_longwords0
Processing function gsm_debug_longwords1
Processing function gsm_debug_longwords2
Processing function gsm_debug_longwords
Processing function gsm_debug_longword0
Processing function gsm_debug_longword
Processing function gsm_debug_word0
Processing function gsm_debug_word
Processing function gsm_explode0
Processing function gsm_explode
Processing function gsm_implode0
Processing function gsm_implode
Processing function gsm_print
Finalizing gsm_print
Finalizing gsm_implode
Finalizing gsm_implode0
Mark Input dependent function gsm_implode0
Finalizing gsm_explode
Finalizing gsm_explode0
Mark Input dependent function gsm_explode0
Finalizing gsm_debug_word
Finalizing gsm_debug_word0
Mark Input dependent function gsm_debug_word0
Finalizing gsm_debug_longword
Finalizing gsm_debug_longword0
Mark Input dependent function gsm_debug_longword0
Finalizing gsm_debug_longwords
Finalizing gsm_debug_longwords2
Mark Input dependent function gsm_debug_longwords2
Finalizing gsm_debug_longwords1
Mark Input dependent function gsm_debug_longwords1
Finalizing gsm_debug_longwords0
Mark Input dependent function gsm_debug_longwords0
Finalizing gsm_debug_words
Finalizing gsm_debug_words2
Mark Input dependent function gsm_debug_words2
Finalizing gsm_debug_words1
Mark Input dependent function gsm_debug_words1
Finalizing gsm_debug_words0
Mark Input dependent function gsm_debug_words0
Finalizing gsm_L_asl
Finalizing gsm_L_asl2
Mark Input dependent function gsm_L_asl2
Finalizing gsm_L_asl1
Mark Input dependent function gsm_L_asl1
Finalizing gsm_L_asr
Mark Input dependent function gsm_L_asr
Finalizing gsm_L_asr2
Mark Input dependent function gsm_L_asr2
Finalizing gsm_L_asr1
Mark Input dependent function gsm_L_asr1
Finalizing gsm_L_asr0
Mark Input dependent function gsm_L_asr0
Finalizing gsm_L_asl0
Mark Input dependent function gsm_L_asl0
Finalizing gsm_L_sub
Finalizing gsm_L_sub1
Mark Input dependent function gsm_L_sub1
Finalizing gsm_L_sub0
Mark Input dependent function gsm_L_sub0
Finalizing gsm_L_add
Finalizing gsm_L_add1
Mark Input dependent function gsm_L_add1
Finalizing gsm_L_add0
Mark Input dependent function gsm_L_add0
Finalizing gsm_L_mult
Finalizing gsm_abs
Finalizing gsm_mult_r
Finalizing gsm_mult_r0
Mark Input dependent function gsm_mult_r0
Finalizing audio_init_output
Finalizing put_u32
Mark Input dependent function put_u32
Finalizing audio_init_input
Finalizing audio_init_input0
Mark Input dependent function audio_init_input0
Finalizing get_u32
Mark Input dependent function get_u32
Finalizing get_u320
Mark Input dependent function get_u320
Finalizing alaw_output
Finalizing alaw_output0
Mark Input dependent function alaw_output0
Finalizing alaw_input
Finalizing alaw_input2
Mark Input dependent function alaw_input2
Finalizing alaw_input1
Mark Input dependent function alaw_input1
Finalizing alaw_input0
Mark Input dependent function alaw_input0
Finalizing ulaw_output
Finalizing ulaw_output0
Mark Input dependent function ulaw_output0
Finalizing ulaw_input
Finalizing ulaw_input2
Mark Input dependent function ulaw_input2
Finalizing ulaw_input1
Mark Input dependent function ulaw_input1
Finalizing ulaw_input0
Mark Input dependent function ulaw_input0
Finalizing linear_output
Finalizing linear_input
Finalizing process_encode
Finalizing gsm_encode
Mark Input dependent function gsm_encode
Finalizing Gsm_Coder
Mark Input dependent function Gsm_Coder
Finalizing Gsm_Coder1
Mark Input dependent function Gsm_Coder1
Finalizing Gsm_Coder0
Mark Input dependent function Gsm_Coder0
Finalizing Gsm_RPE_Encoding
Mark Input dependent function Gsm_RPE_Encoding
Finalizing Gsm_RPE_Encoding0
Mark Input dependent function Gsm_RPE_Encoding0
Finalizing APCM_quantization
Mark Input dependent function APCM_quantization
Finalizing APCM_quantization7
Mark Input dependent function APCM_quantization7
Finalizing APCM_quantization6
Mark Input dependent function APCM_quantization6
Finalizing APCM_quantization5
Mark Input dependent function APCM_quantization5
Finalizing APCM_quantization4
Mark Input dependent function APCM_quantization4
Finalizing gsm_add
Mark Input dependent function gsm_add
Finalizing APCM_quantization3
Mark Input dependent function APCM_quantization3
Finalizing APCM_quantization2
Mark Input dependent function APCM_quantization2
Finalizing APCM_quantization1
Mark Input dependent function APCM_quantization1
Finalizing APCM_quantization0
Mark Input dependent function APCM_quantization0
Finalizing RPE_grid_selection
Mark Input dependent function RPE_grid_selection
Finalizing RPE_grid_selection5
Mark Input dependent function RPE_grid_selection5
Finalizing RPE_grid_selection4
Mark Input dependent function RPE_grid_selection4
Finalizing RPE_grid_selection3
Mark Input dependent function RPE_grid_selection3
Finalizing RPE_grid_selection2
Mark Input dependent function RPE_grid_selection2
Finalizing RPE_grid_selection1
Mark Input dependent function RPE_grid_selection1
Finalizing RPE_grid_selection0
Mark Input dependent function RPE_grid_selection0
Finalizing Weighting_filter
Mark Input dependent function Weighting_filter
Finalizing Weighting_filter0
Mark Input dependent function Weighting_filter0
Finalizing Gsm_Long_Term_Predictor
Mark Input dependent function Gsm_Long_Term_Predictor
Finalizing Gsm_Long_Term_Predictor0
Mark Input dependent function Gsm_Long_Term_Predictor0
Finalizing Long_term_analysis_filtering
Mark Input dependent function Long_term_analysis_filtering
Finalizing Long_term_analysis_filtering3
Mark Input dependent function Long_term_analysis_filtering3
Finalizing Long_term_analysis_filtering2
Mark Input dependent function Long_term_analysis_filtering2
Finalizing Long_term_analysis_filtering1
Mark Input dependent function Long_term_analysis_filtering1
Finalizing Long_term_analysis_filtering0
Mark Input dependent function Long_term_analysis_filtering0
Finalizing Calculation_of_the_LTP_parameters
Mark Input dependent function Calculation_of_the_LTP_parameters
Finalizing Calculation_of_the_LTP_parameters11
Mark Input dependent function Calculation_of_the_LTP_parameters11
Finalizing Calculation_of_the_LTP_parameters10
Mark Input dependent function Calculation_of_the_LTP_parameters10
Finalizing gsm_mult
Mark Input dependent function gsm_mult
Finalizing gsm_mult0
Mark Input dependent function gsm_mult0
Finalizing Calculation_of_the_LTP_parameters9
Mark Input dependent function Calculation_of_the_LTP_parameters9
Finalizing Calculation_of_the_LTP_parameters8
Mark Input dependent function Calculation_of_the_LTP_parameters8
Finalizing Calculation_of_the_LTP_parameters7
Mark Input dependent function Calculation_of_the_LTP_parameters7
Finalizing Calculation_of_the_LTP_parameters6
Mark Input dependent function Calculation_of_the_LTP_parameters6
Finalizing Calculation_of_the_LTP_parameters5
Mark Input dependent function Calculation_of_the_LTP_parameters5
Finalizing Calculation_of_the_LTP_parameters4
Mark Input dependent function Calculation_of_the_LTP_parameters4
Finalizing Calculation_of_the_LTP_parameters3
Mark Input dependent function Calculation_of_the_LTP_parameters3
Finalizing Calculation_of_the_LTP_parameters2
Mark Input dependent function Calculation_of_the_LTP_parameters2
Finalizing Calculation_of_the_LTP_parameters1
Mark Input dependent function Calculation_of_the_LTP_parameters1
Finalizing Calculation_of_the_LTP_parameters0
Mark Input dependent function Calculation_of_the_LTP_parameters0
Finalizing Gsm_Short_Term_Analysis_Filter
Mark Input dependent function Gsm_Short_Term_Analysis_Filter
Finalizing Short_term_analysis_filtering
Mark Input dependent function Short_term_analysis_filtering
Finalizing Short_term_analysis_filtering2
Mark Input dependent function Short_term_analysis_filtering2
Finalizing Short_term_analysis_filtering1
Mark Input dependent function Short_term_analysis_filtering1
Finalizing Short_term_analysis_filtering0
Mark Input dependent function Short_term_analysis_filtering0
Finalizing Gsm_LPC_Analysis
Mark Input dependent function Gsm_LPC_Analysis
Finalizing Gsm_LPC_Analysis0
Mark Input dependent function Gsm_LPC_Analysis0
Finalizing Quantization_and_coding
Mark Input dependent function Quantization_and_coding
Finalizing Transformation_to_Log_Area_Ratios
Mark Input dependent function Transformation_to_Log_Area_Ratios
Finalizing Transformation_to_Log_Area_Ratios3
Mark Input dependent function Transformation_to_Log_Area_Ratios3
Finalizing Transformation_to_Log_Area_Ratios2
Mark Input dependent function Transformation_to_Log_Area_Ratios2
Finalizing Transformation_to_Log_Area_Ratios1
Mark Input dependent function Transformation_to_Log_Area_Ratios1
Finalizing Transformation_to_Log_Area_Ratios0
Mark Input dependent function Transformation_to_Log_Area_Ratios0
Finalizing Reflection_coefficients
Mark Input dependent function Reflection_coefficients
Finalizing Reflection_coefficients8
Mark Input dependent function Reflection_coefficients8
Finalizing Reflection_coefficients7
Mark Input dependent function Reflection_coefficients7
Finalizing gsm_div
Mark Input dependent function gsm_div
Finalizing gsm_div2
Mark Input dependent function gsm_div2
Finalizing gsm_div1
Mark Input dependent function gsm_div1
Finalizing gsm_div0
Mark Input dependent function gsm_div0
Finalizing Reflection_coefficients6
Mark Input dependent function Reflection_coefficients6
Finalizing Reflection_coefficients5
Mark Input dependent function Reflection_coefficients5
Finalizing Reflection_coefficients4
Mark Input dependent function Reflection_coefficients4
Finalizing Reflection_coefficients3
Mark Input dependent function Reflection_coefficients3
Finalizing Reflection_coefficients2
Mark Input dependent function Reflection_coefficients2
Finalizing Reflection_coefficients1
Mark Input dependent function Reflection_coefficients1
Finalizing Reflection_coefficients0
Mark Input dependent function Reflection_coefficients0
Finalizing Autocorrelation
Mark Input dependent function Autocorrelation
Finalizing Autocorrelation16
Mark Input dependent function Autocorrelation16
Finalizing Autocorrelation15
Mark Input dependent function Autocorrelation15
Finalizing Autocorrelation14
Mark Input dependent function Autocorrelation14
Finalizing Autocorrelation13
Mark Input dependent function Autocorrelation13
Finalizing Autocorrelation12
Mark Input dependent function Autocorrelation12
Finalizing Autocorrelation11
Mark Input dependent function Autocorrelation11
Finalizing Autocorrelation10
Mark Input dependent function Autocorrelation10
Finalizing Autocorrelation9
Mark Input dependent function Autocorrelation9
Finalizing Autocorrelation8
Mark Input dependent function Autocorrelation8
Finalizing Autocorrelation7
Mark Input dependent function Autocorrelation7
Finalizing Autocorrelation6
Mark Input dependent function Autocorrelation6
Finalizing Autocorrelation5
Mark Input dependent function Autocorrelation5
Finalizing Autocorrelation4
Mark Input dependent function Autocorrelation4
Finalizing Autocorrelation3
Mark Input dependent function Autocorrelation3
Finalizing Autocorrelation2
Mark Input dependent function Autocorrelation2
Finalizing Autocorrelation1
Mark Input dependent function Autocorrelation1
Finalizing gsm_norm
Mark Input dependent function gsm_norm
Finalizing gsm_norm0
Mark Input dependent function gsm_norm0
Finalizing Autocorrelation0
Mark Input dependent function Autocorrelation0
Finalizing Gsm_Preprocess
Mark Input dependent function Gsm_Preprocess
Finalizing process_encode0
Mark Input dependent function process_encode0
Finalizing process_decode
Finalizing gsm_decode
Mark Input dependent function gsm_decode
Finalizing Gsm_Decoder
Mark Input dependent function Gsm_Decoder
Finalizing Postprocessing
Mark Input dependent function Postprocessing
Finalizing Postprocessing0
Mark Input dependent function Postprocessing0
Finalizing Gsm_Short_Term_Synthesis_Filter
Mark Input dependent function Gsm_Short_Term_Synthesis_Filter
Finalizing Coefficients_40_159
Mark Input dependent function Coefficients_40_159
Finalizing Coefficients_40_1591
Mark Input dependent function Coefficients_40_1591
Finalizing Coefficients_40_1590
Mark Input dependent function Coefficients_40_1590
Finalizing Coefficients_27_39
Mark Input dependent function Coefficients_27_39
Finalizing Coefficients_27_390
Mark Input dependent function Coefficients_27_390
Finalizing Coefficients_13_26
Mark Input dependent function Coefficients_13_26
Finalizing Coefficients_13_260
Mark Input dependent function Coefficients_13_260
Finalizing Short_term_synthesis_filtering
Mark Input dependent function Short_term_synthesis_filtering
Finalizing Short_term_synthesis_filtering1
Mark Input dependent function Short_term_synthesis_filtering1
Finalizing Short_term_synthesis_filtering0
Mark Input dependent function Short_term_synthesis_filtering0
Finalizing LARp_to_rp
Mark Input dependent function LARp_to_rp
Finalizing LARp_to_rp0
Mark Input dependent function LARp_to_rp0
Finalizing Coefficients_0_12
Mark Input dependent function Coefficients_0_12
Finalizing Coefficients_0_120
Mark Input dependent function Coefficients_0_120
Finalizing Decoding_of_the_coded_Log_Area_Ratios
Mark Input dependent function Decoding_of_the_coded_Log_Area_Ratios
Finalizing Gsm_Decoder0
Mark Input dependent function Gsm_Decoder0
Finalizing Gsm_Long_Term_Synthesis_Filtering
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering
Finalizing Gsm_Long_Term_Synthesis_Filtering2
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering2
Finalizing Gsm_Long_Term_Synthesis_Filtering1
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering1
Finalizing Gsm_Long_Term_Synthesis_Filtering0
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering0
Finalizing Gsm_RPE_Decoding
Mark Input dependent function Gsm_RPE_Decoding
Finalizing Gsm_RPE_Decoding0
Mark Input dependent function Gsm_RPE_Decoding0
Finalizing RPE_grid_positioning
Mark Input dependent function RPE_grid_positioning
Finalizing RPE_grid_positioning4
Mark Input dependent function RPE_grid_positioning4
Finalizing RPE_grid_positioning3
Mark Input dependent function RPE_grid_positioning3
Finalizing RPE_grid_positioning2
Mark Input dependent function RPE_grid_positioning2
Finalizing RPE_grid_positioning1
Mark Input dependent function RPE_grid_positioning1
Finalizing RPE_grid_positioning0
Mark Input dependent function RPE_grid_positioning0
Finalizing APCM_inverse_quantization
Mark Input dependent function APCM_inverse_quantization
Finalizing APCM_inverse_quantization0
Mark Input dependent function APCM_inverse_quantization0
Finalizing gsm_asl
Mark Input dependent function gsm_asl
Finalizing gsm_asl2
Mark Input dependent function gsm_asl2
Finalizing gsm_asl1
Mark Input dependent function gsm_asl1
Finalizing gsm_asr
Mark Input dependent function gsm_asr
Finalizing gsm_asr2
Mark Input dependent function gsm_asr2
Finalizing gsm_asr1
Mark Input dependent function gsm_asr1
Finalizing gsm_asr0
Mark Input dependent function gsm_asr0
Finalizing gsm_asl0
Mark Input dependent function gsm_asl0
Finalizing gsm_sub
Mark Input dependent function gsm_sub
Finalizing APCM_quantization_xmaxc_to_exp_mant
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant
Finalizing APCM_quantization_xmaxc_to_exp_mant4
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant4
Finalizing APCM_quantization_xmaxc_to_exp_mant3
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant3
Finalizing APCM_quantization_xmaxc_to_exp_mant2
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant2
Finalizing APCM_quantization_xmaxc_to_exp_mant1
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant1
Finalizing APCM_quantization_xmaxc_to_exp_mant0
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant0
Finalizing gsm_destroy
Mark Input dependent function gsm_destroy
Finalizing gsm_option
Mark Input dependent function gsm_option
Finalizing process_decode0
Mark Input dependent function process_decode0
Finalizing gsm_create
Finalizing main
Finalizing process
Mark Input dependent function process
Finalizing process7
Mark Input dependent function process7
Finalizing process6
Mark Input dependent function process6
Finalizing process5
Mark Input dependent function process5
Finalizing process4
Mark Input dependent function process4
Finalizing process3
Mark Input dependent function process3
Finalizing process2
Mark Input dependent function process2
Finalizing process1
Mark Input dependent function process1
Finalizing process0
Mark Input dependent function process0
Finalizing update_own
Mark Input dependent function update_own
Finalizing update_own0
Mark Input dependent function update_own0
Finalizing update_mode
Mark Input dependent function update_mode
Finalizing update_mode0
Mark Input dependent function update_mode0
Finalizing update_times
Mark Input dependent function update_times
Finalizing update_times0
Mark Input dependent function update_times0
Finalizing open_output
Mark Input dependent function open_output
Finalizing open_output4
Mark Input dependent function open_output4
Finalizing open_output3
Mark Input dependent function open_output3
Finalizing open_output2
Mark Input dependent function open_output2
Finalizing ok_to_replace
Mark Input dependent function ok_to_replace
Finalizing ok_to_replace2
Mark Input dependent function ok_to_replace2
Finalizing ok_to_replace1
Mark Input dependent function ok_to_replace1
Finalizing ok_to_replace0
Mark Input dependent function ok_to_replace0
Finalizing open_output1
Mark Input dependent function open_output1
Finalizing length_okay
Mark Input dependent function length_okay
Finalizing length_okay0
Mark Input dependent function length_okay0
Finalizing open_output0
Mark Input dependent function open_output0
Finalizing open_input
Mark Input dependent function open_input
Finalizing prepare_io
Mark Input dependent function prepare_io
Finalizing grok_format
Mark Input dependent function grok_format
Finalizing grok_format0
Mark Input dependent function grok_format0
Finalizing plainname
Mark Input dependent function plainname
Finalizing okay_as_input
Mark Input dependent function okay_as_input
Finalizing okay_as_input1
Mark Input dependent function okay_as_input1
Finalizing okay_as_input0
Mark Input dependent function okay_as_input0
Finalizing open_input4
Mark Input dependent function open_input4
Finalizing open_input3
Mark Input dependent function open_input3
Finalizing open_input2
Mark Input dependent function open_input2
Finalizing open_input1
Mark Input dependent function open_input1
Finalizing codename
Mark Input dependent function codename
Finalizing normalname
Mark Input dependent function normalname
Finalizing normalname3
Mark Input dependent function normalname3
Finalizing normalname2
Mark Input dependent function normalname2
Finalizing normalname1
Mark Input dependent function normalname1
Finalizing suffix
Mark Input dependent function suffix
Finalizing emalloc
Mark Input dependent function emalloc
Finalizing onintr
Mark Input dependent function onintr
Finalizing onintr1
Mark Input dependent function onintr1
Finalizing onintr0
Mark Input dependent function onintr0
Finalizing emalloc0
Mark Input dependent function emalloc0
Finalizing normalname0
Mark Input dependent function normalname0
Finalizing open_input0
Mark Input dependent function open_input0
Finalizing catch_signals
Mark Input dependent function catch_signals
Finalizing catch_signals0
Mark Input dependent function catch_signals0
Finalizing main0
Mark Input dependent function main0
Finalizing help
Mark Input dependent function help
Finalizing help0
Mark Input dependent function help0
Finalizing version
Mark Input dependent function version
Finalizing version0
Mark Input dependent function version0
Finalizing set_format
Mark Input dependent function set_format
Finalizing set_format0
Mark Input dependent function set_format0
Finalizing parse_argv0
Finalizing parse_argv00
Mark Input dependent function parse_argv00
Finalizing endname
Mark Input dependent function endname
Finalizing endname0
Mark Input dependent function endname0
Finalizing generic_init
Mark Input dependent function generic_init
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/toast.x.bc/25/0
here!:gsm_L_asl1
here!:Calculation_of_the_LTP_parameters5
here!:gsm_L_asl
here!:audio_init_output
here!:update_mode0
here!:RPE_grid_positioning0
here!:alaw_output0
here!:Autocorrelation0
here!:APCM_quantization_xmaxc_to_exp_mant1
here!:onintr0
here!:update_times0
here!:Weighting_filter0
here!:gsm_destroy
here!:gsm_add
here!:alaw_output
here!:gsm_norm
here!:Reflection_coefficients1
here!:Quantization_and_coding
here!:LARp_to_rp0
here!:RPE_grid_selection2
here!:Gsm_RPE_Encoding0
here!:parse_argv00
here!:Reflection_coefficients4
here!:main
here!:process
here!:RPE_grid_selection
here!:emalloc0
here!:update_own0
here!:Reflection_coefficients6
here!:Gsm_RPE_Decoding0
here!:Autocorrelation3
here!:normalname2
here!:gsm_L_add
here!:parse_argv0
here!:gsm_div0
here!:update_times
here!:gsm_mult
here!:gsm_L_asr0
here!:Autocorrelation13
here!:Gsm_Long_Term_Synthesis_Filtering
here!:process1
here!:gsm_decode
here!:gsm_debug_words2
here!:Reflection_coefficients2
here!:okay_as_input1
here!:Gsm_RPE_Decoding
here!:RPE_grid_positioning
here!:Calculation_of_the_LTP_parameters11
here!:open_input2
here!:Autocorrelation14
here!:Autocorrelation7
here!:open_output2
here!:main0
here!:Short_term_analysis_filtering0
here!:gsm_print
here!:Calculation_of_the_LTP_parameters4
here!:normalname
here!:Coefficients_27_39
here!:alaw_input1
here!:Gsm_Short_Term_Synthesis_Filter
here!:gsm_debug_longword0
here!:APCM_quantization0
here!:Autocorrelation15
here!:Autocorrelation1
here!:APCM_inverse_quantization0
here!:gsm_L_asr2
here!:Reflection_coefficients8
here!:Autocorrelation5
here!:gsm_L_sub1
here!:gsm_L_sub1
got filter function names
did not find generic_init demangled to generic_init
Add filter function main
FunctionInfo. Adding function:main
Add filter function parse_argv0
FunctionInfo. Adding function:parse_argv0
did not find getopt demangled to getopt
did not find set_format demangled to set_format
did not find version demangled to version
did not find exit demangled to exit
did not find help demangled to help
did not find fprintf demangled to fprintf
did not find onintr demangled to onintr
did not find catch_signals demangled to catch_signals
Add filter function process
FunctionInfo. Adding function:process
did not find open_input demangled to open_input
did not find open_output demangled to open_output
did not find process_decode demangled to process_decode
did not find process_encode demangled to process_encode
did not find fflush demangled to fflush
did not find ferror demangled to ferror
did not find perror demangled to perror
Add filter function update_times
FunctionInfo. Adding function:update_times
did not find update_mode demangled to update_mode
did not find update_own demangled to update_own
did not find fclose demangled to fclose
did not find free demangled to free
did not find unlink demangled to unlink
did not find __errno_location demangled to __errno_location
did not find fileno demangled to fileno
did not find fchown demangled to fchown
did not find fchmod demangled to fchmod
did not find utime demangled to utime
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fwrite demangled to fwrite
did not find fread demangled to fread
did not find plainname demangled to plainname
did not find codename demangled to codename
did not find length_okay demangled to length_okay
did not find open demangled to open
did not find fdopen demangled to fdopen
did not find ok_to_replace demangled to ok_to_replace
did not find fopen demangled to fopen
did not find close demangled to close
did not find isatty demangled to isatty
did not find getchar demangled to getchar
did not find endname demangled to endname
did not find strlen demangled to strlen
did not find strrchr demangled to strrchr
Add filter function normalname
FunctionInfo. Adding function:normalname
did not find emalloc demangled to emalloc
did not find strcpy demangled to strcpy
did not find suffix demangled to suffix
did not find strcat demangled to strcat
did not find memcmp demangled to memcmp
did not find malloc demangled to malloc
did not find okay_as_input demangled to okay_as_input
did not find grok_format demangled to grok_format
did not find prepare_io demangled to prepare_io
did not find fstat demangled to fstat
did not find __sysv_signal demangled to __sysv_signal
did not find printf demangled to printf
did not find strncmp demangled to strncmp
did not find strcmp demangled to strcmp
did not find linear_input demangled to linear_input
did not find linear_output demangled to linear_output
did not find ulaw_input demangled to ulaw_input
did not find fgetc demangled to fgetc
did not find ulaw_output demangled to ulaw_output
did not find fputc demangled to fputc
did not find alaw_input demangled to alaw_input
Add filter function alaw_output
FunctionInfo. Adding function:alaw_output
did not find audio_init_input demangled to audio_init_input
did not find get_u32 demangled to get_u32
did not find fseek demangled to fseek
did not find _IO_getc demangled to _IO_getc
Add filter function audio_init_output
FunctionInfo. Adding function:audio_init_output
did not find fputs demangled to fputs
did not find put_u32 demangled to put_u32
did not find _IO_putc demangled to _IO_putc
Add filter function gsm_add
FunctionInfo. Adding function:gsm_add
did not find gsm_sub demangled to gsm_sub
Add filter function gsm_mult
FunctionInfo. Adding function:gsm_mult
did not find gsm_mult_r demangled to gsm_mult_r
did not find gsm_abs demangled to gsm_abs
did not find gsm_L_mult demangled to gsm_L_mult
did not find __assert_fail demangled to __assert_fail
Add filter function gsm_L_add
FunctionInfo. Adding function:gsm_L_add
did not find gsm_L_sub demangled to gsm_L_sub
Add filter function gsm_norm
FunctionInfo. Adding function:gsm_norm
Add filter function gsm_L_asl
FunctionInfo. Adding function:gsm_L_asl
did not find gsm_L_asr demangled to gsm_L_asr
did not find gsm_asl demangled to gsm_asl
did not find gsm_asr demangled to gsm_asr
did not find gsm_div demangled to gsm_div
did not find Gsm_Coder demangled to Gsm_Coder
did not find Gsm_Preprocess demangled to Gsm_Preprocess
did not find Gsm_LPC_Analysis demangled to Gsm_LPC_Analysis
did not find Gsm_Short_Term_Analysis_Filter demangled to Gsm_Short_Term_Analysis_Filter
did not find Gsm_Long_Term_Predictor demangled to Gsm_Long_Term_Predictor
did not find Gsm_RPE_Encoding demangled to Gsm_RPE_Encoding
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find Weighting_filter demangled to Weighting_filter
Add filter function RPE_grid_selection
FunctionInfo. Adding function:RPE_grid_selection
did not find APCM_quantization demangled to APCM_quantization
did not find APCM_inverse_quantization demangled to APCM_inverse_quantization
Add filter function RPE_grid_positioning
FunctionInfo. Adding function:RPE_grid_positioning
did not find APCM_quantization_xmaxc_to_exp_mant demangled to APCM_quantization_xmaxc_to_exp_mant
did not find Calculation_of_the_LTP_parameters demangled to Calculation_of_the_LTP_parameters
did not find Long_term_analysis_filtering demangled to Long_term_analysis_filtering
did not find Decoding_of_the_coded_Log_Area_Ratios demangled to Decoding_of_the_coded_Log_Area_Ratios
did not find Coefficients_0_12 demangled to Coefficients_0_12
did not find LARp_to_rp demangled to LARp_to_rp
did not find Short_term_analysis_filtering demangled to Short_term_analysis_filtering
did not find Coefficients_13_26 demangled to Coefficients_13_26
Add filter function Coefficients_27_39
FunctionInfo. Adding function:Coefficients_27_39
did not find Coefficients_40_159 demangled to Coefficients_40_159
did not find Autocorrelation demangled to Autocorrelation
did not find Reflection_coefficients demangled to Reflection_coefficients
did not find Transformation_to_Log_Area_Ratios demangled to Transformation_to_Log_Area_Ratios
Add filter function Quantization_and_coding
FunctionInfo. Adding function:Quantization_and_coding
did not find gsm_debug_words demangled to gsm_debug_words
did not find gsm_debug_longwords demangled to gsm_debug_longwords
did not find gsm_debug_longword demangled to gsm_debug_longword
did not find gsm_debug_word demangled to gsm_debug_word
did not find Gsm_Decoder demangled to Gsm_Decoder
Add filter function Gsm_RPE_Decoding
FunctionInfo. Adding function:Gsm_RPE_Decoding
Add filter function Gsm_Long_Term_Synthesis_Filtering
FunctionInfo. Adding function:Gsm_Long_Term_Synthesis_Filtering
Add filter function Gsm_Short_Term_Synthesis_Filter
FunctionInfo. Adding function:Gsm_Short_Term_Synthesis_Filter
did not find Postprocessing demangled to Postprocessing
did not find Short_term_synthesis_filtering demangled to Short_term_synthesis_filtering
Add filter function gsm_destroy
FunctionInfo. Adding function:gsm_destroy
Add filter function gsm_decode
FunctionInfo. Adding function:gsm_decode
did not find gsm_encode demangled to gsm_encode
did not find gsm_explode demangled to gsm_explode
did not find gsm_implode demangled to gsm_implode
did not find gsm_create demangled to gsm_create
Add filter function gsm_print
FunctionInfo. Adding function:gsm_print
did not find gsm_option demangled to gsm_option
Add filter function main0
FunctionInfo. Adding function:main0
Add filter function parse_argv00
FunctionInfo. Adding function:parse_argv00
did not find set_format0 demangled to set_format0
did not find version0 demangled to version0
did not find help0 demangled to help0
Add filter function onintr0
FunctionInfo. Adding function:onintr0
did not find onintr1 demangled to onintr1
did not find catch_signals0 demangled to catch_signals0
did not find process0 demangled to process0
Add filter function process1
FunctionInfo. Adding function:process1
did not find process2 demangled to process2
did not find process3 demangled to process3
did not find process4 demangled to process4
did not find process5 demangled to process5
did not find process6 demangled to process6
did not find process7 demangled to process7
did not find open_input0 demangled to open_input0
did not find open_input1 demangled to open_input1
Add filter function open_input2
FunctionInfo. Adding function:open_input2
did not find open_input3 demangled to open_input3
did not find open_input4 demangled to open_input4
did not find open_output0 demangled to open_output0
did not find open_output1 demangled to open_output1
Add filter function open_output2
FunctionInfo. Adding function:open_output2
did not find open_output3 demangled to open_output3
did not find open_output4 demangled to open_output4
did not find process_decode0 demangled to process_decode0
did not find process_encode0 demangled to process_encode0
Add filter function update_times0
FunctionInfo. Adding function:update_times0
Add filter function update_mode0
FunctionInfo. Adding function:update_mode0
Add filter function update_own0
FunctionInfo. Adding function:update_own0
did not find length_okay0 demangled to length_okay0
did not find ok_to_replace0 demangled to ok_to_replace0
did not find ok_to_replace1 demangled to ok_to_replace1
did not find ok_to_replace2 demangled to ok_to_replace2
did not find endname0 demangled to endname0
did not find normalname0 demangled to normalname0
did not find normalname1 demangled to normalname1
Add filter function normalname2
FunctionInfo. Adding function:normalname2
did not find normalname3 demangled to normalname3
Add filter function emalloc0
FunctionInfo. Adding function:emalloc0
did not find okay_as_input0 demangled to okay_as_input0
Add filter function okay_as_input1
FunctionInfo. Adding function:okay_as_input1
did not find grok_format0 demangled to grok_format0
did not find ulaw_input0 demangled to ulaw_input0
did not find ulaw_input1 demangled to ulaw_input1
did not find ulaw_input2 demangled to ulaw_input2
did not find ulaw_output0 demangled to ulaw_output0
did not find alaw_input0 demangled to alaw_input0
Add filter function alaw_input1
FunctionInfo. Adding function:alaw_input1
did not find alaw_input2 demangled to alaw_input2
Add filter function alaw_output0
FunctionInfo. Adding function:alaw_output0
did not find audio_init_input0 demangled to audio_init_input0
did not find get_u320 demangled to get_u320
did not find gsm_mult0 demangled to gsm_mult0
did not find gsm_mult_r0 demangled to gsm_mult_r0
did not find gsm_L_add0 demangled to gsm_L_add0
did not find gsm_L_add1 demangled to gsm_L_add1
did not find gsm_L_sub0 demangled to gsm_L_sub0
Add filter function gsm_L_sub1
FunctionInfo. Adding function:gsm_L_sub1
did not find gsm_norm0 demangled to gsm_norm0
did not find gsm_L_asl0 demangled to gsm_L_asl0
Add filter function gsm_L_asl1
FunctionInfo. Adding function:gsm_L_asl1
did not find gsm_L_asl2 demangled to gsm_L_asl2
Add filter function gsm_L_asr0
FunctionInfo. Adding function:gsm_L_asr0
did not find gsm_L_asr1 demangled to gsm_L_asr1
Add filter function gsm_L_asr2
FunctionInfo. Adding function:gsm_L_asr2
did not find gsm_asl0 demangled to gsm_asl0
did not find gsm_asl1 demangled to gsm_asl1
did not find gsm_asl2 demangled to gsm_asl2
did not find gsm_asr0 demangled to gsm_asr0
did not find gsm_asr1 demangled to gsm_asr1
did not find gsm_asr2 demangled to gsm_asr2
Add filter function gsm_div0
FunctionInfo. Adding function:gsm_div0
did not find gsm_div1 demangled to gsm_div1
did not find gsm_div2 demangled to gsm_div2
did not find Gsm_Coder0 demangled to Gsm_Coder0
did not find Gsm_Coder1 demangled to Gsm_Coder1
did not find Gsm_LPC_Analysis0 demangled to Gsm_LPC_Analysis0
did not find Gsm_Long_Term_Predictor0 demangled to Gsm_Long_Term_Predictor0
Add filter function Gsm_RPE_Encoding0
FunctionInfo. Adding function:Gsm_RPE_Encoding0
Add filter function Weighting_filter0
FunctionInfo. Adding function:Weighting_filter0
did not find RPE_grid_selection0 demangled to RPE_grid_selection0
did not find RPE_grid_selection1 demangled to RPE_grid_selection1
Add filter function RPE_grid_selection2
FunctionInfo. Adding function:RPE_grid_selection2
did not find RPE_grid_selection3 demangled to RPE_grid_selection3
did not find RPE_grid_selection4 demangled to RPE_grid_selection4
did not find RPE_grid_selection5 demangled to RPE_grid_selection5
Add filter function APCM_quantization0
FunctionInfo. Adding function:APCM_quantization0
did not find APCM_quantization1 demangled to APCM_quantization1
did not find APCM_quantization2 demangled to APCM_quantization2
did not find APCM_quantization3 demangled to APCM_quantization3
did not find APCM_quantization4 demangled to APCM_quantization4
did not find APCM_quantization5 demangled to APCM_quantization5
did not find APCM_quantization6 demangled to APCM_quantization6
did not find APCM_quantization7 demangled to APCM_quantization7
Add filter function APCM_inverse_quantization0
FunctionInfo. Adding function:APCM_inverse_quantization0
Add filter function RPE_grid_positioning0
FunctionInfo. Adding function:RPE_grid_positioning0
did not find RPE_grid_positioning1 demangled to RPE_grid_positioning1
did not find RPE_grid_positioning2 demangled to RPE_grid_positioning2
did not find RPE_grid_positioning3 demangled to RPE_grid_positioning3
did not find RPE_grid_positioning4 demangled to RPE_grid_positioning4
did not find APCM_quantization_xmaxc_to_exp_mant0 demangled to APCM_quantization_xmaxc_to_exp_mant0
Add filter function APCM_quantization_xmaxc_to_exp_mant1
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant1
did not find APCM_quantization_xmaxc_to_exp_mant2 demangled to APCM_quantization_xmaxc_to_exp_mant2
did not find APCM_quantization_xmaxc_to_exp_mant3 demangled to APCM_quantization_xmaxc_to_exp_mant3
did not find APCM_quantization_xmaxc_to_exp_mant4 demangled to APCM_quantization_xmaxc_to_exp_mant4
did not find Calculation_of_the_LTP_parameters0 demangled to Calculation_of_the_LTP_parameters0
did not find Calculation_of_the_LTP_parameters1 demangled to Calculation_of_the_LTP_parameters1
did not find Calculation_of_the_LTP_parameters2 demangled to Calculation_of_the_LTP_parameters2
did not find Calculation_of_the_LTP_parameters3 demangled to Calculation_of_the_LTP_parameters3
Add filter function Calculation_of_the_LTP_parameters4
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters4
Add filter function Calculation_of_the_LTP_parameters5
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters5
did not find Calculation_of_the_LTP_parameters6 demangled to Calculation_of_the_LTP_parameters6
did not find Calculation_of_the_LTP_parameters7 demangled to Calculation_of_the_LTP_parameters7
did not find Calculation_of_the_LTP_parameters8 demangled to Calculation_of_the_LTP_parameters8
did not find Calculation_of_the_LTP_parameters9 demangled to Calculation_of_the_LTP_parameters9
did not find Calculation_of_the_LTP_parameters10 demangled to Calculation_of_the_LTP_parameters10
Add filter function Calculation_of_the_LTP_parameters11
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters11
did not find Long_term_analysis_filtering0 demangled to Long_term_analysis_filtering0
did not find Long_term_analysis_filtering1 demangled to Long_term_analysis_filtering1
did not find Long_term_analysis_filtering2 demangled to Long_term_analysis_filtering2
did not find Long_term_analysis_filtering3 demangled to Long_term_analysis_filtering3
did not find Coefficients_0_120 demangled to Coefficients_0_120
Add filter function LARp_to_rp0
FunctionInfo. Adding function:LARp_to_rp0
Add filter function Short_term_analysis_filtering0
FunctionInfo. Adding function:Short_term_analysis_filtering0
did not find Short_term_analysis_filtering1 demangled to Short_term_analysis_filtering1
did not find Short_term_analysis_filtering2 demangled to Short_term_analysis_filtering2
did not find Coefficients_13_260 demangled to Coefficients_13_260
did not find Coefficients_27_390 demangled to Coefficients_27_390
did not find Coefficients_40_1590 demangled to Coefficients_40_1590
did not find Coefficients_40_1591 demangled to Coefficients_40_1591
Add filter function Autocorrelation0
FunctionInfo. Adding function:Autocorrelation0
Add filter function Autocorrelation1
FunctionInfo. Adding function:Autocorrelation1
did not find Autocorrelation2 demangled to Autocorrelation2
Add filter function Autocorrelation3
FunctionInfo. Adding function:Autocorrelation3
did not find Autocorrelation4 demangled to Autocorrelation4
Add filter function Autocorrelation5
FunctionInfo. Adding function:Autocorrelation5
did not find Autocorrelation6 demangled to Autocorrelation6
Add filter function Autocorrelation7
FunctionInfo. Adding function:Autocorrelation7
did not find Autocorrelation8 demangled to Autocorrelation8
did not find Autocorrelation9 demangled to Autocorrelation9
did not find Autocorrelation10 demangled to Autocorrelation10
did not find Autocorrelation11 demangled to Autocorrelation11
did not find Autocorrelation12 demangled to Autocorrelation12
Add filter function Autocorrelation13
FunctionInfo. Adding function:Autocorrelation13
Add filter function Autocorrelation14
FunctionInfo. Adding function:Autocorrelation14
Add filter function Autocorrelation15
FunctionInfo. Adding function:Autocorrelation15
did not find Autocorrelation16 demangled to Autocorrelation16
did not find Reflection_coefficients0 demangled to Reflection_coefficients0
Add filter function Reflection_coefficients1
FunctionInfo. Adding function:Reflection_coefficients1
Add filter function Reflection_coefficients2
FunctionInfo. Adding function:Reflection_coefficients2
did not find Reflection_coefficients3 demangled to Reflection_coefficients3
Add filter function Reflection_coefficients4
FunctionInfo. Adding function:Reflection_coefficients4
did not find Reflection_coefficients5 demangled to Reflection_coefficients5
Add filter function Reflection_coefficients6
FunctionInfo. Adding function:Reflection_coefficients6
did not find Reflection_coefficients7 demangled to Reflection_coefficients7
Add filter function Reflection_coefficients8
FunctionInfo. Adding function:Reflection_coefficients8
did not find Transformation_to_Log_Area_Ratios0 demangled to Transformation_to_Log_Area_Ratios0
did not find Transformation_to_Log_Area_Ratios1 demangled to Transformation_to_Log_Area_Ratios1
did not find Transformation_to_Log_Area_Ratios2 demangled to Transformation_to_Log_Area_Ratios2
did not find Transformation_to_Log_Area_Ratios3 demangled to Transformation_to_Log_Area_Ratios3
did not find gsm_debug_words0 demangled to gsm_debug_words0
did not find gsm_debug_words1 demangled to gsm_debug_words1
Add filter function gsm_debug_words2
FunctionInfo. Adding function:gsm_debug_words2
did not find gsm_debug_longwords0 demangled to gsm_debug_longwords0
did not find gsm_debug_longwords1 demangled to gsm_debug_longwords1
did not find gsm_debug_longwords2 demangled to gsm_debug_longwords2
Add filter function gsm_debug_longword0
FunctionInfo. Adding function:gsm_debug_longword0
did not find gsm_debug_word0 demangled to gsm_debug_word0
did not find Gsm_Decoder0 demangled to Gsm_Decoder0
Add filter function Gsm_RPE_Decoding0
FunctionInfo. Adding function:Gsm_RPE_Decoding0
did not find Gsm_Long_Term_Synthesis_Filtering0 demangled to Gsm_Long_Term_Synthesis_Filtering0
did not find Gsm_Long_Term_Synthesis_Filtering1 demangled to Gsm_Long_Term_Synthesis_Filtering1
did not find Gsm_Long_Term_Synthesis_Filtering2 demangled to Gsm_Long_Term_Synthesis_Filtering2
did not find Postprocessing0 demangled to Postprocessing0
did not find Short_term_synthesis_filtering0 demangled to Short_term_synthesis_filtering0
did not find Short_term_synthesis_filtering1 demangled to Short_term_synthesis_filtering1
did not find gsm_explode0 demangled to gsm_explode0
did not find gsm_implode0 demangled to gsm_implode0
Adding generic_init other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding parse_argv0 other functions, ExtractedOnly mode uses other functions
Adding set_format other functions, ExtractedOnly mode uses other functions
Adding version other functions, ExtractedOnly mode uses other functions
Adding help other functions, ExtractedOnly mode uses other functions
Adding onintr other functions, ExtractedOnly mode uses other functions
Adding catch_signals other functions, ExtractedOnly mode uses other functions
Adding process other functions, ExtractedOnly mode uses other functions
Adding open_input other functions, ExtractedOnly mode uses other functions
Adding open_output other functions, ExtractedOnly mode uses other functions
Adding process_decode other functions, ExtractedOnly mode uses other functions
Adding process_encode other functions, ExtractedOnly mode uses other functions
Adding update_times other functions, ExtractedOnly mode uses other functions
Adding update_mode other functions, ExtractedOnly mode uses other functions
Adding update_own other functions, ExtractedOnly mode uses other functions
Adding plainname other functions, ExtractedOnly mode uses other functions
Adding codename other functions, ExtractedOnly mode uses other functions
Adding length_okay other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace other functions, ExtractedOnly mode uses other functions
Adding endname other functions, ExtractedOnly mode uses other functions
Adding normalname other functions, ExtractedOnly mode uses other functions
Adding emalloc other functions, ExtractedOnly mode uses other functions
Adding suffix other functions, ExtractedOnly mode uses other functions
Adding okay_as_input other functions, ExtractedOnly mode uses other functions
Adding grok_format other functions, ExtractedOnly mode uses other functions
Adding prepare_io other functions, ExtractedOnly mode uses other functions
Adding linear_input other functions, ExtractedOnly mode uses other functions
Adding linear_output other functions, ExtractedOnly mode uses other functions
Adding ulaw_input other functions, ExtractedOnly mode uses other functions
Adding ulaw_output other functions, ExtractedOnly mode uses other functions
Adding alaw_input other functions, ExtractedOnly mode uses other functions
Adding alaw_output other functions, ExtractedOnly mode uses other functions
Adding audio_init_input other functions, ExtractedOnly mode uses other functions
Adding get_u32 other functions, ExtractedOnly mode uses other functions
Adding audio_init_output other functions, ExtractedOnly mode uses other functions
Adding put_u32 other functions, ExtractedOnly mode uses other functions
Adding gsm_add other functions, ExtractedOnly mode uses other functions
Adding gsm_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r other functions, ExtractedOnly mode uses other functions
Adding gsm_abs other functions, ExtractedOnly mode uses other functions
Adding gsm_L_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_norm other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_div other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder other functions, ExtractedOnly mode uses other functions
Adding Gsm_Preprocess other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Analysis_Filter other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Decoding_of_the_coded_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_12 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_26 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_39 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_159 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Quantization_and_coding other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Synthesis_Filter other functions, ExtractedOnly mode uses other functions
Adding Postprocessing other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering other functions, ExtractedOnly mode uses other functions
Adding gsm_destroy other functions, ExtractedOnly mode uses other functions
Adding gsm_decode other functions, ExtractedOnly mode uses other functions
Adding gsm_encode other functions, ExtractedOnly mode uses other functions
Adding gsm_explode other functions, ExtractedOnly mode uses other functions
Adding gsm_implode other functions, ExtractedOnly mode uses other functions
Adding gsm_create other functions, ExtractedOnly mode uses other functions
Adding gsm_print other functions, ExtractedOnly mode uses other functions
Adding gsm_option other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding parse_argv00 other functions, ExtractedOnly mode uses other functions
Adding set_format0 other functions, ExtractedOnly mode uses other functions
Adding version0 other functions, ExtractedOnly mode uses other functions
Adding help0 other functions, ExtractedOnly mode uses other functions
Adding onintr0 other functions, ExtractedOnly mode uses other functions
Adding onintr1 other functions, ExtractedOnly mode uses other functions
Adding catch_signals0 other functions, ExtractedOnly mode uses other functions
Adding process0 other functions, ExtractedOnly mode uses other functions
Adding process1 other functions, ExtractedOnly mode uses other functions
Adding process2 other functions, ExtractedOnly mode uses other functions
Adding process3 other functions, ExtractedOnly mode uses other functions
Adding process4 other functions, ExtractedOnly mode uses other functions
Adding process5 other functions, ExtractedOnly mode uses other functions
Adding process6 other functions, ExtractedOnly mode uses other functions
Adding process7 other functions, ExtractedOnly mode uses other functions
Adding open_input0 other functions, ExtractedOnly mode uses other functions
Adding open_input1 other functions, ExtractedOnly mode uses other functions
Adding open_input2 other functions, ExtractedOnly mode uses other functions
Adding open_input3 other functions, ExtractedOnly mode uses other functions
Adding open_input4 other functions, ExtractedOnly mode uses other functions
Adding open_output0 other functions, ExtractedOnly mode uses other functions
Adding open_output1 other functions, ExtractedOnly mode uses other functions
Adding open_output2 other functions, ExtractedOnly mode uses other functions
Adding open_output3 other functions, ExtractedOnly mode uses other functions
Adding open_output4 other functions, ExtractedOnly mode uses other functions
Adding process_decode0 other functions, ExtractedOnly mode uses other functions
Adding process_encode0 other functions, ExtractedOnly mode uses other functions
Adding update_times0 other functions, ExtractedOnly mode uses other functions
Adding update_mode0 other functions, ExtractedOnly mode uses other functions
Adding update_own0 other functions, ExtractedOnly mode uses other functions
Adding length_okay0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace1 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace2 other functions, ExtractedOnly mode uses other functions
Adding endname0 other functions, ExtractedOnly mode uses other functions
Adding normalname0 other functions, ExtractedOnly mode uses other functions
Adding normalname1 other functions, ExtractedOnly mode uses other functions
Adding normalname2 other functions, ExtractedOnly mode uses other functions
Adding normalname3 other functions, ExtractedOnly mode uses other functions
Adding emalloc0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input1 other functions, ExtractedOnly mode uses other functions
Adding grok_format0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input1 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input2 other functions, ExtractedOnly mode uses other functions
Adding ulaw_output0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input1 other functions, ExtractedOnly mode uses other functions
Adding alaw_input2 other functions, ExtractedOnly mode uses other functions
Adding alaw_output0 other functions, ExtractedOnly mode uses other functions
Adding audio_init_input0 other functions, ExtractedOnly mode uses other functions
Adding get_u320 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult0 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub1 other functions, ExtractedOnly mode uses other functions
Adding gsm_norm0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_div0 other functions, ExtractedOnly mode uses other functions
Adding gsm_div1 other functions, ExtractedOnly mode uses other functions
Adding gsm_div2 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding0 other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection4 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization6 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization7 other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters0 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters1 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters2 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters3 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters5 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters6 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters7 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters8 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters9 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters10 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters11 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering3 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_120 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_260 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_390 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1590 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1591 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation0 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation1 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation2 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation3 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation4 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation5 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation6 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation7 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation8 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation9 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation10 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation11 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation12 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation13 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation14 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation15 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation16 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients0 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients1 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients2 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients3 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients4 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients5 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients6 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients7 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients8 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios0 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios1 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios2 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios3 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering2 other functions, ExtractedOnly mode uses other functions
Adding Postprocessing0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding gsm_explode0 other functions, ExtractedOnly mode uses other functions
Adding gsm_implode0 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:274
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
Transformation_to_Log_Area_Ratios0
Gsm_Short_Term_Synthesis_Filter
linear_input
length_okay0
Short_term_analysis_filtering1
Coefficients_27_39
Short_term_analysis_filtering
ok_to_replace
audio_init_input
Gsm_RPE_Encoding
Gsm_Long_Term_Synthesis_Filtering
process_encode0
Weighting_filter0
gsm_asr
Coefficients_40_1590
process_decode0
Gsm_Long_Term_Predictor0
open_input
open_output2
gsm_L_sub1
gsm_L_asl2
Postprocessing0
Gsm_Coder1
endname0
gsm_debug_word0
open_output3
onintr0
version
Gsm_RPE_Encoding0
process1
gsm_norm0
APCM_quantization_xmaxc_to_exp_mant
Autocorrelation8
gsm_asr0
endname
gsm_debug_words
Coefficients_40_159
gsm_mult_r0
Reflection_coefficients5
Gsm_Coder
APCM_quantization4
normalname0
gsm_L_mult
gsm_asl
generic_init
Autocorrelation3
help
APCM_quantization7
process0
gsm_L_asl0
grok_format
Autocorrelation11
Reflection_coefficients3
gsm_debug_longwords0
catch_signals0
open_input0
parse_argv00
Gsm_Long_Term_Synthesis_Filtering2
process7
Calculation_of_the_LTP_parameters5
audio_init_input0
process4
Gsm_Decoder
RPE_grid_selection5
RPE_grid_selection0
Decoding_of_the_coded_Log_Area_Ratios
Coefficients_13_26
Gsm_RPE_Decoding
grok_format0
Calculation_of_the_LTP_parameters
Gsm_Coder0
gsm_div0
open_output0
gsm_L_add0
Short_term_synthesis_filtering
Autocorrelation13
suffix
gsm_asl1
APCM_inverse_quantization
gsm_L_asl
alaw_input1
Transformation_to_Log_Area_Ratios3
APCM_quantization0
ulaw_output0
gsm_mult0
open_output4
normalname2
Calculation_of_the_LTP_parameters9
gsm_decode
Reflection_coefficients2
RPE_grid_positioning0
APCM_quantization_xmaxc_to_exp_mant0
Autocorrelation
update_mode
Long_term_analysis_filtering0
RPE_grid_positioning
gsm_abs
RPE_grid_positioning1
gsm_L_asl1
gsm_L_asr1
open_output
gsm_destroy
open_input4
Coefficients_27_390
LARp_to_rp
Short_term_synthesis_filtering0
gsm_implode0
gsm_debug_words0
gsm_debug_longword
Postprocessing
Autocorrelation0
Calculation_of_the_LTP_parameters6
alaw_output
gsm_L_sub
Reflection_coefficients0
Weighting_filter
RPE_grid_positioning2
Coefficients_13_260
Gsm_Preprocess
ulaw_input2
ok_to_replace1
APCM_quantization3
Calculation_of_the_LTP_parameters10
length_okay
Autocorrelation14
APCM_quantization_xmaxc_to_exp_mant2
gsm_L_add
Autocorrelation7
gsm_L_asr
gsm_L_asr2
onintr1
process2
process5
Reflection_coefficients
ulaw_output
RPE_grid_selection
alaw_input0
Transformation_to_Log_Area_Ratios
normalname3
Calculation_of_the_LTP_parameters0
RPE_grid_selection3
help0
Calculation_of_the_LTP_parameters1
alaw_output0
gsm_create
gsm_implode
gsm_debug_word
gsm_L_sub0
RPE_grid_positioning4
catch_signals
gsm_asr2
set_format
Autocorrelation1
Gsm_LPC_Analysis0
Reflection_coefficients7
Long_term_analysis_filtering3
Autocorrelation2
Reflection_coefficients6
gsm_norm
RPE_grid_positioning3
okay_as_input
Coefficients_40_1591
Long_term_analysis_filtering
Short_term_analysis_filtering0
APCM_inverse_quantization0
APCM_quantization_xmaxc_to_exp_mant4
gsm_debug_longwords
ulaw_input
Gsm_Long_Term_Synthesis_Filtering0
version0
gsm_L_add1
APCM_quantization6
APCM_quantization2
process3
Coefficients_0_120
Calculation_of_the_LTP_parameters4
gsm_debug_words2
gsm_sub
gsm_div1
process_encode
ulaw_input1
gsm_asl2
RPE_grid_selection4
open_input2
parse_argv0
gsm_debug_longwords2
Calculation_of_the_LTP_parameters11
Long_term_analysis_filtering2
APCM_quantization_xmaxc_to_exp_mant1
plainname
update_times0
ok_to_replace0
Quantization_and_coding
get_u32
audio_init_output
Calculation_of_the_LTP_parameters3
Transformation_to_Log_Area_Ratios1
Reflection_coefficients1
process6
Gsm_Long_Term_Predictor
Autocorrelation5
Calculation_of_the_LTP_parameters2
put_u32
Gsm_RPE_Decoding0
APCM_quantization1
Gsm_LPC_Analysis
emalloc
Autocorrelation6
open_input1
alaw_input2
APCM_quantization_xmaxc_to_exp_mant3
Autocorrelation4
gsm_asl0
Autocorrelation15
open_output1
Gsm_Short_Term_Analysis_Filter
main
gsm_debug_longword0
gsm_debug_longwords1
open_input3
gsm_asr1
emalloc0
normalname1
gsm_L_asr0
gsm_mult_r
gsm_div2
onintr
ulaw_input0
Long_term_analysis_filtering1
RPE_grid_selection1
Coefficients_0_12
process_decode
APCM_quantization
APCM_quantization5
Autocorrelation10
normalname
gsm_option
update_own0
Autocorrelation9
prepare_io
gsm_mult
codename
Autocorrelation12
main0
gsm_div
gsm_explode
okay_as_input0
Reflection_coefficients4
alaw_input
get_u320
LARp_to_rp0
update_mode0
Reflection_coefficients8
Short_term_analysis_filtering2
update_times
linear_output
Calculation_of_the_LTP_parameters7
gsm_encode
gsm_explode0
okay_as_input1
ok_to_replace2
Transformation_to_Log_Area_Ratios2
gsm_print
RPE_grid_selection2
Calculation_of_the_LTP_parameters8
set_format0
gsm_add
update_own
Gsm_Long_Term_Synthesis_Filtering1
Gsm_Decoder0
process
gsm_debug_words1
Short_term_synthesis_filtering1
Autocorrelation16
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 274 function, while filter count is 69
Functions called in loop
Function call numbers
parse_argv0 -- 1
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 260
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 261
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @optind = external global i32, align 4 in:   store i32 %or, i32* @f_precious, align 4, !control_dep_instr !12, !data_dep_instr !8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdout = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %S = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %S.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %R = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %R.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %i.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp3 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp3.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_common_0_3.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_temp.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sp.el = alloca i16*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sl.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %scalauto = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %scalauto.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_denum = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_denum.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_num = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_num.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %c.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %reply = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %reply.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %tmp = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %tmp.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: linear_input
DEF-USE: no information for: linear_output
DEF-USE: no information for: generic_init
DEF-USE: no information for: alaw_input
DEF-USE: no information for: alaw_output
DEF-USE: no information for: ulaw_output
DEF-USE: no information for: audio_init_input
DEF-USE: no information for: audio_init_output
DEF-USE: no information for: ulaw_input
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: onintr
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 69
 Skipping function per FilterFunctionPass:generic_init
Collecting defining blocks for main
Collecting defining blocks for parse_argv0
 Skipping function per FilterFunctionPass:set_format
 Skipping function per FilterFunctionPass:version
 Skipping function per FilterFunctionPass:help
 Skipping function per FilterFunctionPass:onintr
 Skipping function per FilterFunctionPass:catch_signals
Collecting defining blocks for process
 Skipping function per FilterFunctionPass:open_input
 Skipping function per FilterFunctionPass:open_output
 Skipping function per FilterFunctionPass:process_decode
 Skipping function per FilterFunctionPass:process_encode
Collecting defining blocks for update_times
 Skipping function per FilterFunctionPass:update_mode
 Skipping function per FilterFunctionPass:update_own
 Skipping function per FilterFunctionPass:plainname
 Skipping function per FilterFunctionPass:codename
 Skipping function per FilterFunctionPass:length_okay
 Skipping function per FilterFunctionPass:ok_to_replace
 Skipping function per FilterFunctionPass:endname
Collecting defining blocks for normalname
 Skipping function per FilterFunctionPass:emalloc
 Skipping function per FilterFunctionPass:suffix
 Skipping function per FilterFunctionPass:okay_as_input
 Skipping function per FilterFunctionPass:grok_format
 Skipping function per FilterFunctionPass:prepare_io
 Skipping function per FilterFunctionPass:linear_input
 Skipping function per FilterFunctionPass:linear_output
 Skipping function per FilterFunctionPass:ulaw_input
 Skipping function per FilterFunctionPass:ulaw_output
 Skipping function per FilterFunctionPass:alaw_input
Collecting defining blocks for alaw_output
 Skipping function per FilterFunctionPass:audio_init_input
 Skipping function per FilterFunctionPass:get_u32
Collecting defining blocks for audio_init_output
 Skipping function per FilterFunctionPass:put_u32
Collecting defining blocks for gsm_add
 Skipping function per FilterFunctionPass:gsm_sub
Collecting defining blocks for gsm_mult
 Skipping function per FilterFunctionPass:gsm_mult_r
 Skipping function per FilterFunctionPass:gsm_abs
 Skipping function per FilterFunctionPass:gsm_L_mult
Skip. No dependence graph for function gsm_L_add
 Skipping function per FilterFunctionPass:gsm_L_sub
Collecting defining blocks for gsm_norm
Skip. No dependence graph for function gsm_L_asl
 Skipping function per FilterFunctionPass:gsm_L_asr
 Skipping function per FilterFunctionPass:gsm_asl
 Skipping function per FilterFunctionPass:gsm_asr
 Skipping function per FilterFunctionPass:gsm_div
 Skipping function per FilterFunctionPass:Gsm_Coder
 Skipping function per FilterFunctionPass:Gsm_Preprocess
 Skipping function per FilterFunctionPass:Gsm_LPC_Analysis
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Analysis_Filter
 Skipping function per FilterFunctionPass:Gsm_Long_Term_Predictor
 Skipping function per FilterFunctionPass:Gsm_RPE_Encoding
 Skipping function per FilterFunctionPass:Weighting_filter
Collecting defining blocks for RPE_grid_selection
 Skipping function per FilterFunctionPass:APCM_quantization
 Skipping function per FilterFunctionPass:APCM_inverse_quantization
Collecting defining blocks for RPE_grid_positioning
 Skipping function per FilterFunctionPass:APCM_quantization_xmaxc_to_exp_mant
 Skipping function per FilterFunctionPass:Calculation_of_the_LTP_parameters
 Skipping function per FilterFunctionPass:Long_term_analysis_filtering
 Skipping function per FilterFunctionPass:Decoding_of_the_coded_Log_Area_Ratios
 Skipping function per FilterFunctionPass:Coefficients_0_12
 Skipping function per FilterFunctionPass:LARp_to_rp
 Skipping function per FilterFunctionPass:Short_term_analysis_filtering
 Skipping function per FilterFunctionPass:Coefficients_13_26
Collecting defining blocks for Coefficients_27_39
 Skipping function per FilterFunctionPass:Coefficients_40_159
 Skipping function per FilterFunctionPass:Autocorrelation
 Skipping function per FilterFunctionPass:Reflection_coefficients
 Skipping function per FilterFunctionPass:Transformation_to_Log_Area_Ratios
Collecting defining blocks for Quantization_and_coding
 Skipping function per FilterFunctionPass:gsm_debug_words
 Skipping function per FilterFunctionPass:gsm_debug_longwords
 Skipping function per FilterFunctionPass:gsm_debug_longword
 Skipping function per FilterFunctionPass:gsm_debug_word
 Skipping function per FilterFunctionPass:Gsm_Decoder
Collecting defining blocks for Gsm_RPE_Decoding
Collecting defining blocks for Gsm_Long_Term_Synthesis_Filtering
Collecting defining blocks for Gsm_Short_Term_Synthesis_Filter
 Skipping function per FilterFunctionPass:Postprocessing
 Skipping function per FilterFunctionPass:Short_term_synthesis_filtering
Collecting defining blocks for gsm_destroy
Collecting defining blocks for gsm_decode
 Skipping function per FilterFunctionPass:gsm_encode
 Skipping function per FilterFunctionPass:gsm_explode
 Skipping function per FilterFunctionPass:gsm_implode
 Skipping function per FilterFunctionPass:gsm_create
Skip. No dependence graph for function gsm_print
 Skipping function per FilterFunctionPass:gsm_option
 Skipping function per FilterFunctionPass:generic_init
 Processing function:main
Short range hashing enabled.
Processing path: entry  while.cond  while.body  sw.default  
After path modifications process path is empty
Processing path: entry  sw.default  
After path modifications process path
entry  sw.default  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle input dependent load operand Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Processing path: entry  while.cond  while.body  sw.bb  
After path modifications process path
sw.bb  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_decode, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.epilog  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb1  
After path modifications process path
sw.bb1  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_force, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb2  
After path modifications process path
sw.bb2  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_cat, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb3  
After path modifications process path
sw.bb3  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_precious, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb4  
After path modifications process path
sw.bb4  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_fast, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb5  
After path modifications process path
sw.bb5  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_verbose, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb6  
After path modifications process path
sw.bb6  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_ulaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb7  
After path modifications process path
sw.bb7  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_linear = global %struct.fmtdesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @linear_input, i32 (i16*)* @linear_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb8  
After path modifications process path
sw.bb8  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_alaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @alaw_input, i32 (i16*)* @alaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb9  
After path modifications process path
sw.bb9  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_audio = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 ()* @audio_init_input, i32 ()* @audio_init_output, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb10  
After path modifications process path is empty
Processing path: entry  sw.bb10  
After path modifications process path
entry  sw.bb10  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb11  
After path modifications process path is empty
Processing path: entry  sw.bb11  
After path modifications process path
entry  sw.bb11  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand void (...)* bitcast (void ()* @onintr to void (...)*) of the call   call void @catch_signals(void (...)* bitcast (void ()* @onintr to void (...)*)), !control_dep_instr !13, !data_indep_instr !11
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.cond  while.end  if.else  
After path modifications process path is empty
Processing path: entry  while.end  if.else  while.cond15  while.body16  
After path modifications process path is empty
Processing path: entry  while.end  if.else  
After path modifications process path
entry  while.end  if.else  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.cond  while.end  if.else  while.end18  
After path modifications process path is empty
Processing path: entry  while.end  if.else  while.cond15  while.end18  
After path modifications process path is empty
Processing path: entry  while.end  if.else  while.end18  
After path modifications process path
entry  while.end  if.else  while.end18  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
 Processing function:parse_argv0
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  cond.end  if.end  land.lhs.true  if.then8  
After path modifications process path
entry  cond.end  if.end  land.lhs.true  if.then8  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Processing path: entry  cond.end  if.end  if.end9  
After path modifications process path
entry  cond.end  if.end  if.end9  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion skipped because there was no hash update in between!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  cond.end  if.then  
After path modifications process path
entry  cond.end  if.then  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
 Skipping function per FilterFunctionPass:set_format
 Skipping function per FilterFunctionPass:version
 Skipping function per FilterFunctionPass:help
 Skipping function per FilterFunctionPass:onintr
 Skipping function per FilterFunctionPass:catch_signals
 Processing function:process
Short range hashing enabled.
Processing path: entry  lor.lhs.false  if.end  cond.true  
After path modifications process path
entry  lor.lhs.false  if.end  cond.true  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
Processing path: entry  lor.lhs.false  if.end  cond.false  
After path modifications process path
entry  lor.lhs.false  if.end  cond.false  
Processing path: entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
After path modifications process path
entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
Processing path: entry  err  land.lhs.true77  if.then79  if.end91  
After path modifications process path
entry  err  land.lhs.true77  if.then79  if.end91  
Processing path: entry  err  if.end92  land.lhs.true94  if.then96  
After path modifications process path
entry  err  if.end92  land.lhs.true94  if.then96  
Processing path: entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
After path modifications process path
entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
Processing path: entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
Processing path: entry  err  if.end92  if.end98  if.end103  if.end108  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  if.end108  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Skipping function per FilterFunctionPass:open_input
 Skipping function per FilterFunctionPass:open_output
 Skipping function per FilterFunctionPass:process_decode
 Skipping function per FilterFunctionPass:process_encode
 Processing function:update_times
Short range hashing enabled.
Processing path: entry  if.end  if.then2  
After path modifications process path
entry  if.end  if.then2  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Skipping function per FilterFunctionPass:update_mode
 Skipping function per FilterFunctionPass:update_own
 Skipping function per FilterFunctionPass:plainname
 Skipping function per FilterFunctionPass:codename
 Skipping function per FilterFunctionPass:length_okay
 Skipping function per FilterFunctionPass:ok_to_replace
 Skipping function per FilterFunctionPass:endname
 Processing function:normalname
Short range hashing enabled.
Processing path: entry  if.end  if.then9  
After path modifications process path
entry  if.end  if.then9  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %want.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname1(i8** %want.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname1(i8** %want.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end17  
After path modifications process path
entry  if.end  if.end17  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname3(i8** %retval, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname3(i8** %retval, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.else  land.lhs.true  if.then14  
After path modifications process path
entry  if.end  if.else  land.lhs.true  if.then14  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %want.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname2(i8** %want.addr, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname2(i8** %want.addr, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.else  if.end16  
After path modifications process path
entry  if.end  if.else  if.end16  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
 Skipping function per FilterFunctionPass:emalloc
 Skipping function per FilterFunctionPass:suffix
 Skipping function per FilterFunctionPass:okay_as_input
 Skipping function per FilterFunctionPass:grok_format
 Skipping function per FilterFunctionPass:prepare_io
 Skipping function per FilterFunctionPass:linear_input
 Skipping function per FilterFunctionPass:linear_output
 Skipping function per FilterFunctionPass:ulaw_input
 Skipping function per FilterFunctionPass:ulaw_output
 Skipping function per FilterFunctionPass:alaw_input
 Processing function:alaw_output
Short range hashing enabled.
Processing path: entry  for.cond  for.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  for.cond  for.body  if.end  for.inc  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:audio_init_input
 Skipping function per FilterFunctionPass:get_u32
 Processing function:audio_init_output
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
 Skipping function per FilterFunctionPass:put_u32
 Processing function:gsm_add
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end7  
After path modifications process path
entry  cond.end7  
Processing path: entry  cond.false  cond.true5  
After path modifications process path
entry  cond.false  cond.true5  
Processing path: entry  cond.false  cond.end  
After path modifications process path
entry  cond.false  cond.end  
Processing path: entry  cond.false  cond.false6  
After path modifications process path
entry  cond.false  cond.false6  
 Skipping function per FilterFunctionPass:gsm_sub
 Processing function:gsm_mult
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Skipping function per FilterFunctionPass:gsm_mult_r
 Skipping function per FilterFunctionPass:gsm_abs
 Skipping function per FilterFunctionPass:gsm_L_mult
Skip. No dependence graph for function gsm_L_add
 Skipping function per FilterFunctionPass:gsm_L_sub
 Processing function:gsm_norm
Short range hashing enabled.
Processing path: entry  cond.true  cond.end  if.then  if.then3  
After path modifications process path
entry  cond.true  cond.end  if.then  if.then3  
Processing path: entry  cond.true  cond.end  if.then  if.end  
After path modifications process path
entry  cond.true  cond.end  if.then  if.end  
Processing path: entry  cond.true  cond.end  return  
After path modifications process path
entry  cond.true  cond.end  return  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
Processing path: entry  cond.true  cond.end  if.end4  cond.end33  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.end33  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Skip. No dependence graph for function gsm_L_asl
 Skipping function per FilterFunctionPass:gsm_L_asr
 Skipping function per FilterFunctionPass:gsm_asl
 Skipping function per FilterFunctionPass:gsm_asr
 Skipping function per FilterFunctionPass:gsm_div
 Skipping function per FilterFunctionPass:Gsm_Coder
 Skipping function per FilterFunctionPass:Gsm_Preprocess
 Skipping function per FilterFunctionPass:Gsm_LPC_Analysis
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Analysis_Filter
 Skipping function per FilterFunctionPass:Gsm_Long_Term_Predictor
 Skipping function per FilterFunctionPass:Gsm_RPE_Encoding
 Skipping function per FilterFunctionPass:Weighting_filter
 Processing function:RPE_grid_selection
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %x.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  if.end  if.then235  
After path modifications process path
entry  if.end  if.then235  
Processing path: entry  if.end  if.end236  if.then246  
After path modifications process path
entry  if.end  if.end236  if.then246  
Processing call instruction..
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  if.end  if.end236  if.end247  
After path modifications process path
entry  if.end  if.end236  if.end247  
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  if.end236  if.end247  for.end  
After path modifications process path
entry  if.end  if.end236  if.end247  for.end  
Processing call instruction..
Can't handle this operand   %Mc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
 Skipping function per FilterFunctionPass:APCM_quantization
 Skipping function per FilterFunctionPass:APCM_inverse_quantization
 Processing function:RPE_grid_positioning
Short range hashing enabled.
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.epilog  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb6  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb6  
Processing path: entry  land.lhs.true  cond.true  cond.end  do.body  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  do.body  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb8  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb8  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb10  do.cond  do.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb10  do.cond  do.end  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Skipping function per FilterFunctionPass:APCM_quantization_xmaxc_to_exp_mant
 Skipping function per FilterFunctionPass:Calculation_of_the_LTP_parameters
 Skipping function per FilterFunctionPass:Long_term_analysis_filtering
 Skipping function per FilterFunctionPass:Decoding_of_the_coded_Log_Area_Ratios
 Skipping function per FilterFunctionPass:Coefficients_0_12
 Skipping function per FilterFunctionPass:LARp_to_rp
 Skipping function per FilterFunctionPass:Short_term_analysis_filtering
 Skipping function per FilterFunctionPass:Coefficients_13_26
 Processing function:Coefficients_27_39
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.true20  
After path modifications process path
for.body  cond.end  cond.true20  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.end26  for.inc  
After path modifications process path
for.body  cond.end  cond.end26  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.false25  
After path modifications process path
for.body  cond.end  cond.false25  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j_1.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:Coefficients_40_159
 Skipping function per FilterFunctionPass:Autocorrelation
 Skipping function per FilterFunctionPass:Reflection_coefficients
 Skipping function per FilterFunctionPass:Transformation_to_Log_Area_Ratios
 Processing function:Quantization_and_coding
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  cond.true14  
After path modifications process path
entry  cond.end  cond.true14  
Processing path: entry  cond.end  cond.end20  cond.true29  
After path modifications process path
entry  cond.end  cond.end20  cond.true29  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.true52  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.true52  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.false57  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.false57  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.true34  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.true34  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.end38  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.end38  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.false35  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.false35  
Processing path: entry  cond.end  cond.false19  
After path modifications process path
entry  cond.end  cond.false19  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Skipping function per FilterFunctionPass:gsm_debug_words
 Skipping function per FilterFunctionPass:gsm_debug_longwords
 Skipping function per FilterFunctionPass:gsm_debug_longword
 Skipping function per FilterFunctionPass:gsm_debug_word
 Skipping function per FilterFunctionPass:Gsm_Decoder
 Processing function:Gsm_RPE_Decoding
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %erp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mcr.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xmaxcr.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xMcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
No oh has been applied in the path
 Processing function:Gsm_Long_Term_Synthesis_Filtering
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.true40  
After path modifications process path
for.body  cond.true40  
Hash path invariants only
Invariants are
  br label %cond.end46, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.end46  for.inc  
After path modifications process path
for.body  cond.end46  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.false45  
After path modifications process path
for.body  cond.false45  
Hash path invariants only
Invariants are
  br label %cond.end46, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.cond51  for.body54  for.inc61  
After path modifications process path
for.body54  
Hash path invariants only
Invariants are
  br label %for.inc61, !control_dep_instr !8, !data_indep_instr !13
  call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Can't handle this operand   %drp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.end  for.end63  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.cond51  for.end63  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.end63  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.end63  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.false22  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.false22  
Processing path: entry  cond.end  cond.false16  
After path modifications process path
entry  cond.end  cond.false16  
Processing path: entry  lor.lhs.false  cond.false  
After path modifications process path
entry  lor.lhs.false  cond.false  
 Processing function:Gsm_Short_Term_Synthesis_Filter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:Postprocessing
 Skipping function per FilterFunctionPass:Short_term_synthesis_filtering
 Processing function:gsm_destroy
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:gsm_decode
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:gsm_encode
 Skipping function per FilterFunctionPass:gsm_explode
 Skipping function per FilterFunctionPass:gsm_implode
 Skipping function per FilterFunctionPass:gsm_create
Skip. No dependence graph for function gsm_print
 Skipping function per FilterFunctionPass:gsm_option
Extract path function for assertion assert_gsm_decode_path_0
Extract path function for assertion assert_gsm_decode_path_1
Extract path function for assertion assert_gsm_decode_path_2
Extract path function for assertion assert_Coefficients_27_39_path_0
Extract path function for assertion assert_Coefficients_27_39_path_1
Extract path function for assertion assert_Coefficients_27_39_path_2
Extract path function for assertion assert_Coefficients_27_39_path_3
Extract path function for assertion assert_Coefficients_27_39_path_4
Extract path function for assertion assert_Coefficients_27_39_path_5
Extract path function for assertion assert_Coefficients_27_39_path_6
Extract path function for assertion assert_Coefficients_27_39_path_7
Extract path function for assertion assert_Coefficients_27_39_path_8
Extract path function for assertion assert_Coefficients_27_39_path_9
Extract path function for assertion assert_Coefficients_27_39_path_10
Extract path function for assertion assert_Coefficients_27_39_path_11
Extract path function for assertion assert_RPE_grid_positioning_path_1
Extract path function for assertion assert_RPE_grid_positioning_path_3
Extract path function for assertion assert_RPE_grid_positioning_path_4
Extract path function for assertion assert_RPE_grid_positioning_path_5
Extract path function for assertion assert_RPE_grid_positioning_path_6
Extract path function for assertion assert_RPE_grid_positioning_path_7
Extract path function for assertion assert_RPE_grid_positioning_path_8
Extract path function for assertion assert_RPE_grid_positioning_path_9
Extract path function for assertion assert_RPE_grid_selection_path_0
Extract path function for assertion assert_RPE_grid_selection_path_1
Extract path function for assertion assert_RPE_grid_selection_path_2
Extract path function for assertion assert_RPE_grid_selection_path_3
Extract path function for assertion assert_RPE_grid_selection_path_4
Extract path function for assertion assert_RPE_grid_selection_path_6
Extract path function for assertion assert_Quantization_and_coding_path_0
Extract path function for assertion assert_Quantization_and_coding_path_1
Extract path function for assertion assert_Quantization_and_coding_path_2
Extract path function for assertion assert_Quantization_and_coding_path_3
Extract path function for assertion assert_Quantization_and_coding_path_4
Extract path function for assertion assert_Quantization_and_coding_path_5
Extract path function for assertion assert_Quantization_and_coding_path_6
Extract path function for assertion assert_Quantization_and_coding_path_7
Extract path function for assertion assert_Quantization_and_coding_path_8
Extract path function for assertion assert_Quantization_and_coding_path_9
Extract path function for assertion assert_Quantization_and_coding_path_10
Extract path function for assertion assert_Quantization_and_coding_path_11
Extract path function for assertion assert_Quantization_and_coding_path_12
Extract path function for assertion assert_Quantization_and_coding_path_13
Extract path function for assertion assert_Quantization_and_coding_path_14
Extract path function for assertion assert_Quantization_and_coding_path_15
Extract path function for assertion assert_Quantization_and_coding_path_16
Extract path function for assertion assert_Quantization_and_coding_path_17
Extract path function for assertion assert_Quantization_and_coding_path_18
Extract path function for assertion assert_Quantization_and_coding_path_19
Extract path function for assertion assert_Quantization_and_coding_path_20
Extract path function for assertion assert_Quantization_and_coding_path_21
Extract path function for assertion assert_Quantization_and_coding_path_22
Extract path function for assertion assert_Quantization_and_coding_path_23
Extract path function for assertion assert_Quantization_and_coding_path_24
Extract path function for assertion assert_Quantization_and_coding_path_25
Extract path function for assertion assert_Quantization_and_coding_path_26
Extract path function for assertion assert_Quantization_and_coding_path_27
Extract path function for assertion assert_Quantization_and_coding_path_28
Extract path function for assertion assert_Quantization_and_coding_path_29
Extract path function for assertion assert_Quantization_and_coding_path_30
Extract path function for assertion assert_Quantization_and_coding_path_31
Extract path function for assertion assert_Quantization_and_coding_path_32
Extract path function for assertion assert_Quantization_and_coding_path_33
Extract path function for assertion assert_Quantization_and_coding_path_34
Extract path function for assertion assert_Quantization_and_coding_path_35
Extract path function for assertion assert_Quantization_and_coding_path_36
Extract path function for assertion assert_Quantization_and_coding_path_37
Extract path function for assertion assert_Quantization_and_coding_path_38
Extract path function for assertion assert_Quantization_and_coding_path_39
Extract path function for assertion assert_Quantization_and_coding_path_40
Extract path function for assertion assert_Quantization_and_coding_path_41
Extract path function for assertion assert_Quantization_and_coding_path_42
Extract path function for assertion assert_Quantization_and_coding_path_43
Extract path function for assertion assert_Quantization_and_coding_path_44
Extract path function for assertion assert_Quantization_and_coding_path_45
Extract path function for assertion assert_Quantization_and_coding_path_46
Extract path function for assertion assert_Quantization_and_coding_path_47
Extract path function for assertion assert_Quantization_and_coding_path_48
Extract path function for assertion assert_Quantization_and_coding_path_49
Extract path function for assertion assert_Quantization_and_coding_path_50
Extract path function for assertion assert_Quantization_and_coding_path_51
Extract path function for assertion assert_Quantization_and_coding_path_52
Extract path function for assertion assert_Quantization_and_coding_path_53
Extract path function for assertion assert_Quantization_and_coding_path_54
Extract path function for assertion assert_Quantization_and_coding_path_55
Extract path function for assertion assert_Quantization_and_coding_path_56
Extract path function for assertion assert_Quantization_and_coding_path_57
Extract path function for assertion assert_Quantization_and_coding_path_58
Extract path function for assertion assert_Quantization_and_coding_path_59
Extract path function for assertion assert_Quantization_and_coding_path_60
Extract path function for assertion assert_Quantization_and_coding_path_61
Extract path function for assertion assert_Quantization_and_coding_path_62
Extract path function for assertion assert_Quantization_and_coding_path_63
Extract path function for assertion assert_Quantization_and_coding_path_64
Extract path function for assertion assert_update_times_path_0
Extract path function for assertion assert_update_times_path_1
Extract path function for assertion assert_update_times_path_2
Extract path function for assertion assert_gsm_norm_path_0
Extract path function for assertion assert_gsm_norm_path_1
Extract path function for assertion assert_gsm_norm_path_2
Extract path function for assertion assert_gsm_norm_path_3
Extract path function for assertion assert_gsm_norm_path_4
Extract path function for assertion assert_gsm_norm_path_5
Extract path function for assertion assert_gsm_norm_path_6
Extract path function for assertion assert_gsm_norm_path_7
Extract path function for assertion assert_gsm_norm_path_8
Extract path function for assertion assert_gsm_norm_path_9
Extract path function for assertion assert_gsm_norm_path_10
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_0
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_1
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_2
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_3
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_4
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_5
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_6
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_8
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_9
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_12
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_13
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_14
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_15
Extract path function for assertion assert_process_path_0
Extract path function for assertion assert_process_path_1
Extract path function for assertion assert_process_path_2
Extract path function for assertion assert_process_path_3
Extract path function for assertion assert_process_path_4
Extract path function for assertion assert_process_path_5
Extract path function for assertion assert_process_path_6
Extract path function for assertion assert_process_path_7
Extract path function for assertion assert_process_path_8
Extract path function for assertion assert_process_path_9
Extract path function for assertion assert_process_path_10
Extract path function for assertion assert_process_path_11
Extract path function for assertion assert_process_path_12
Extract path function for assertion assert_process_path_13
Extract path function for assertion assert_process_path_14
Extract path function for assertion assert_process_path_15
Extract path function for assertion assert_process_path_16
Extract path function for assertion assert_process_path_17
Extract path function for assertion assert_process_path_18
Extract path function for assertion assert_process_path_19
Extract path function for assertion assert_process_path_20
Extract path function for assertion assert_process_path_21
Extract path function for assertion assert_process_path_22
Extract path function for assertion assert_process_path_23
Extract path function for assertion assert_process_path_24
Extract path function for assertion assert_process_path_25
Extract path function for assertion assert_process_path_26
Extract path function for assertion assert_process_path_27
Extract path function for assertion assert_process_path_28
Extract path function for assertion assert_process_path_29
Extract path function for assertion assert_process_path_30
Extract path function for assertion assert_parse_argv0_path_1
Extract path function for assertion assert_gsm_add_path_0
Extract path function for assertion assert_gsm_add_path_1
Extract path function for assertion assert_gsm_add_path_2
Extract path function for assertion assert_gsm_add_path_3
Extract path function for assertion assert_gsm_add_path_4
Extract path function for assertion assert_main_path_2
Extract path function for assertion assert_main_path_6
Extract path function for assertion assert_main_path_8
Extract path function for assertion assert_main_path_10
Extract path function for assertion assert_main_path_12
Extract path function for assertion assert_main_path_14
Extract path function for assertion assert_main_path_29
Extract path function for assertion assert_main_path_31
Extract path function for assertion assert_main_path_34
Extract path function for assertion assert_main_path_37
Extract path function for assertion assert_gsm_mult_path_0
Extract path function for assertion assert_gsm_mult_path_1
Extract path function for assertion assert_gsm_mult_path_2
Extract path function for assertion assert_normalname_path_0
Extract path function for assertion assert_normalname_path_1
Extract path function for assertion assert_normalname_path_2
Extract path function for assertion assert_normalname_path_3
Extract path function for assertion assert_normalname_path_4
Extract path function for assertion assert_normalname_path_5
Extract path function for assertion assert_gsm_destroy_path_0
Extract path function for assertion assert_gsm_destroy_path_1
Extract path function for assertion assert_audio_init_output_path_0
Extract path function for assertion assert_audio_init_output_path_1
Extract path function for assertion assert_audio_init_output_path_2
Extract path function for assertion assert_alaw_output_path_1
Extract path function for assertion assert_alaw_output_path_3
Extract path function for assertion assert_alaw_output_path_5
Extract path function for assertion assert_alaw_output_path_7
OH stats is requested, dumping stat file...
Processed instructions number 10210
{
    "numberOfAssertCalls": 1,
    "numberOfBlocksInFunctionsWithNoDG": 26,
    "numberOfDataDependentInstructions": 2252,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 6088,
    "numberOfInstructionsInFunctionsWithNoDG": 1265,
    "numberOfNonHashableBlocks": 30,
    "numberOfNonHashableInstructions": 74,
    "numberOfOHProcessedInstr": 2857,
    "numberOfOtherUnprotectedInstructions": 12,
    "numberOfOtherUnprotectedLoopVariantInstructions": 1,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 17,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 1,
    "numberOfSensitiveBlocks": 326,
    "numberOfSensitiveFunctions": 19,
    "numberOfShortRangeAssertCalls": 186,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 279,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 239,
    "numberOfUnprotectedArgumentReachableInstructions": 135,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 16,
    "numberOfUnprotectedGlobalReachableInstructions": 81,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 62
}
ERR. processed 19 function, while filter count is 69
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 39.5964 seconds (39.5964 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  33.8759 ( 86.0%)   0.1565 ( 81.3%)  34.0325 ( 85.9%)  34.0324 ( 85.9%)  Instruments bitcode with hashing and logging functions
   5.3071 ( 13.5%)   0.0239 ( 12.4%)   5.3310 ( 13.5%)   5.3311 ( 13.5%)  runs input dependency analysis
   0.1215 (  0.3%)   0.0074 (  3.9%)   0.1290 (  0.3%)   0.1287 (  0.3%)  Memory SSA
   0.0475 (  0.1%)   0.0000 (  0.0%)   0.0475 (  0.1%)   0.0475 (  0.1%)  Bitcode Writer
   0.0132 (  0.0%)   0.0006 (  0.3%)   0.0138 (  0.0%)   0.0140 (  0.0%)  Dominator Tree Construction
   0.0123 (  0.0%)   0.0000 (  0.0%)   0.0123 (  0.0%)   0.0123 (  0.0%)  Module Verifier
   0.0071 (  0.0%)   0.0003 (  0.1%)   0.0073 (  0.0%)   0.0073 (  0.0%)  Natural Loop Information
   0.0049 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)   0.0050 (  0.0%)  Dominator Tree Construction
   0.0049 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)   0.0049 (  0.0%)  Post-Dominator Tree Construction
   0.0032 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)   0.0031 (  0.0%)  Natural Loop Information
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Include functions in a given file in any transformation
   0.0000 (  0.0%)   0.0027 (  1.4%)   0.0027 (  0.0%)   0.0027 (  0.0%)  Instruments bitcode with guards
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0008 (  0.4%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Call site information
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  runs indirect and virtual calls analysis
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove unreachable blocks from the CFG
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  39.4039 (100.0%)   0.1925 (100.0%)  39.5964 (100.0%)  39.5964 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0320 seconds (0.0320 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0315 (100.0%)   0.0005 (100.0%)   0.0320 (100.0%)   0.0320 (100.0%)  Parse IR
   0.0315 (100.0%)   0.0005 (100.0%)   0.0320 (100.0%)   0.0320 (100.0%)  Total

Running input dependency analysis pass
Processing function generic_init
Processing function endname0
Processing function endname
Processing function parse_argv00
Processing function parse_argv0
Processing function set_format0
Processing function set_format
Processing function version0
Processing function version
Processing function help0
Processing function help
Processing function main0
Processing function catch_signals0
Did not find function assigned   store void (...)* %1, void (...)** %fun.addr.el, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Did not find function assigned   store void (...)* %18, void (...)** %17, !extraction_store !12, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10
Processing function catch_signals
Did not find function assigned   store void (...)* %fun, void (...)** %fun.addr, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9
Processing function open_input0
Processing function normalname0
Processing function emalloc0
Processing function onintr0
Processing function onintr1
Processing function onintr
Processing function emalloc
Processing function suffix
Processing function normalname1
Processing function normalname2
Processing function normalname3
Processing function normalname
Processing function codename
Processing function open_input1
Processing function open_input2
Processing function open_input3
Processing function open_input4
Processing function okay_as_input0
Processing function okay_as_input1
Processing function okay_as_input
Processing function plainname
Processing function grok_format0
Processing function grok_format
Processing function prepare_io
Processing function open_input
Processing function open_output0
Processing function length_okay0
Processing function length_okay
Processing function open_output1
Processing function ok_to_replace0
Processing function ok_to_replace1
Processing function ok_to_replace2
Processing function ok_to_replace
Processing function open_output2
Processing function open_output3
Processing function open_output4
Processing function open_output
Processing function update_times0
Processing function update_times
Processing function update_mode0
Processing function update_mode
Processing function update_own0
Processing function update_own
Processing function process0
Processing function process1
Processing function process2
Processing function process3
Processing function process4
Processing function process5
Processing function process6
Processing function process7
Processing function process
Processing function main
Processing function gsm_create
Processing function process_decode0
Processing function gsm_option
Processing function gsm_destroy
Processing function APCM_quantization_xmaxc_to_exp_mant0
Processing function APCM_quantization_xmaxc_to_exp_mant1
Processing function APCM_quantization_xmaxc_to_exp_mant2
Processing function APCM_quantization_xmaxc_to_exp_mant3
Processing function APCM_quantization_xmaxc_to_exp_mant4
Processing function APCM_quantization_xmaxc_to_exp_mant
Processing function gsm_sub
Processing function gsm_asl0
Processing function gsm_asr0
Processing function gsm_asr1
Processing function gsm_asr2
Processing function gsm_asr
Processing function gsm_asl1
Processing function gsm_asl2
Processing function gsm_asl
Processing function APCM_inverse_quantization0
Processing function APCM_inverse_quantization
Processing function RPE_grid_positioning0
Processing function RPE_grid_positioning1
Processing function RPE_grid_positioning2
Processing function RPE_grid_positioning3
Processing function RPE_grid_positioning4
Processing function RPE_grid_positioning
Processing function Gsm_RPE_Decoding0
Processing function Gsm_RPE_Decoding
Processing function Gsm_Long_Term_Synthesis_Filtering0
Processing function Gsm_Long_Term_Synthesis_Filtering1
Processing function Gsm_Long_Term_Synthesis_Filtering2
Processing function Gsm_Long_Term_Synthesis_Filtering
Processing function Gsm_Decoder0
Processing function Decoding_of_the_coded_Log_Area_Ratios
Processing function Coefficients_0_120
Processing function Coefficients_0_12
Processing function LARp_to_rp0
Processing function LARp_to_rp
Processing function Short_term_synthesis_filtering0
Processing function Short_term_synthesis_filtering1
Processing function Short_term_synthesis_filtering
Processing function Coefficients_13_260
Processing function Coefficients_13_26
Processing function Coefficients_27_390
Processing function Coefficients_27_39
Processing function Coefficients_40_1590
Processing function Coefficients_40_1591
Processing function Coefficients_40_159
Processing function Gsm_Short_Term_Synthesis_Filter
Processing function Postprocessing0
Processing function Postprocessing
Processing function Gsm_Decoder
Processing function gsm_decode
Processing function process_decode
Processing function process_encode0
Processing function Gsm_Preprocess
Processing function Autocorrelation0
Processing function gsm_norm0
Processing function gsm_norm
Processing function Autocorrelation1
Processing function Autocorrelation2
Processing function Autocorrelation3
Processing function Autocorrelation4
Processing function Autocorrelation5
Processing function Autocorrelation6
Processing function Autocorrelation7
Processing function Autocorrelation8
Processing function Autocorrelation9
Processing function Autocorrelation10
Processing function Autocorrelation11
Processing function Autocorrelation12
Processing function Autocorrelation13
Processing function Autocorrelation14
Processing function Autocorrelation15
Processing function Autocorrelation16
Processing function Autocorrelation
Processing function Reflection_coefficients0
Processing function Reflection_coefficients1
Processing function Reflection_coefficients2
Processing function Reflection_coefficients3
Processing function Reflection_coefficients4
Processing function Reflection_coefficients5
Processing function Reflection_coefficients6
Processing function gsm_div0
Processing function gsm_div1
Processing function gsm_div2
Processing function gsm_div
Processing function Reflection_coefficients7
Processing function Reflection_coefficients8
Processing function Reflection_coefficients
Processing function Transformation_to_Log_Area_Ratios0
Processing function Transformation_to_Log_Area_Ratios1
Processing function Transformation_to_Log_Area_Ratios2
Processing function Transformation_to_Log_Area_Ratios3
Processing function Transformation_to_Log_Area_Ratios
Processing function Quantization_and_coding
Processing function Gsm_LPC_Analysis0
Processing function Gsm_LPC_Analysis
Processing function Short_term_analysis_filtering0
Processing function Short_term_analysis_filtering1
Processing function Short_term_analysis_filtering2
Processing function Short_term_analysis_filtering
Processing function Gsm_Short_Term_Analysis_Filter
Processing function Calculation_of_the_LTP_parameters0
Processing function Calculation_of_the_LTP_parameters1
Processing function Calculation_of_the_LTP_parameters2
Processing function Calculation_of_the_LTP_parameters3
Processing function Calculation_of_the_LTP_parameters4
Processing function Calculation_of_the_LTP_parameters5
Processing function Calculation_of_the_LTP_parameters6
Processing function Calculation_of_the_LTP_parameters7
Processing function Calculation_of_the_LTP_parameters8
Processing function Calculation_of_the_LTP_parameters9
Processing function gsm_mult0
Processing function gsm_mult
Processing function Calculation_of_the_LTP_parameters10
Processing function Calculation_of_the_LTP_parameters11
Processing function Calculation_of_the_LTP_parameters
Processing function Long_term_analysis_filtering0
Processing function Long_term_analysis_filtering1
Processing function Long_term_analysis_filtering2
Processing function Long_term_analysis_filtering3
Processing function Long_term_analysis_filtering
Processing function Gsm_Long_Term_Predictor0
Processing function Gsm_Long_Term_Predictor
Processing function Weighting_filter0
Processing function Weighting_filter
Processing function RPE_grid_selection0
Processing function RPE_grid_selection1
Processing function RPE_grid_selection2
Processing function RPE_grid_selection3
Processing function RPE_grid_selection4
Processing function RPE_grid_selection5
Processing function RPE_grid_selection
Processing function APCM_quantization0
Processing function APCM_quantization1
Processing function APCM_quantization2
Processing function APCM_quantization3
Processing function gsm_add
Processing function APCM_quantization4
Processing function APCM_quantization5
Processing function APCM_quantization6
Processing function APCM_quantization7
Processing function APCM_quantization
Processing function Gsm_RPE_Encoding0
Processing function Gsm_RPE_Encoding
Processing function Gsm_Coder0
Processing function Gsm_Coder1
Processing function Gsm_Coder
Processing function gsm_encode
Processing function process_encode
Processing function linear_input
Processing function linear_output
Processing function ulaw_input0
Processing function ulaw_input1
Processing function ulaw_input2
Processing function ulaw_input
Processing function ulaw_output0
Processing function ulaw_output
Processing function alaw_input0
Processing function alaw_input1
Processing function alaw_input2
Processing function alaw_input
Processing function alaw_output0
Processing function alaw_output
Processing function get_u320
Processing function get_u32
Processing function audio_init_input0
Processing function audio_init_input
Processing function put_u32
Processing function audio_init_output
Processing function gsm_mult_r0
Processing function gsm_mult_r
Processing function gsm_abs
Processing function gsm_L_mult
Processing function gsm_L_add0
Processing function gsm_L_add1
Processing function gsm_L_add
Processing function gsm_L_sub0
Processing function gsm_L_sub1
Processing function gsm_L_sub
Processing function gsm_L_asl0
Processing function gsm_L_asr0
Processing function gsm_L_asr1
Processing function gsm_L_asr2
Processing function gsm_L_asr
Processing function gsm_L_asl1
Processing function gsm_L_asl2
Processing function gsm_L_asl
Processing function gsm_debug_words0
Processing function gsm_debug_words1
Processing function gsm_debug_words2
Processing function gsm_debug_words
Processing function gsm_debug_longwords0
Processing function gsm_debug_longwords1
Processing function gsm_debug_longwords2
Processing function gsm_debug_longwords
Processing function gsm_debug_longword0
Processing function gsm_debug_longword
Processing function gsm_debug_word0
Processing function gsm_debug_word
Processing function gsm_explode0
Processing function gsm_explode
Processing function gsm_implode0
Processing function gsm_implode
Processing function gsm_print
Finalizing gsm_print
Finalizing gsm_implode
Finalizing gsm_implode0
Mark Input dependent function gsm_implode0
Finalizing gsm_explode
Finalizing gsm_explode0
Mark Input dependent function gsm_explode0
Finalizing gsm_debug_word
Finalizing gsm_debug_word0
Mark Input dependent function gsm_debug_word0
Finalizing gsm_debug_longword
Finalizing gsm_debug_longword0
Mark Input dependent function gsm_debug_longword0
Finalizing gsm_debug_longwords
Finalizing gsm_debug_longwords2
Mark Input dependent function gsm_debug_longwords2
Finalizing gsm_debug_longwords1
Mark Input dependent function gsm_debug_longwords1
Finalizing gsm_debug_longwords0
Mark Input dependent function gsm_debug_longwords0
Finalizing gsm_debug_words
Finalizing gsm_debug_words2
Mark Input dependent function gsm_debug_words2
Finalizing gsm_debug_words1
Mark Input dependent function gsm_debug_words1
Finalizing gsm_debug_words0
Mark Input dependent function gsm_debug_words0
Finalizing gsm_L_asl
Finalizing gsm_L_asl2
Mark Input dependent function gsm_L_asl2
Finalizing gsm_L_asl1
Mark Input dependent function gsm_L_asl1
Finalizing gsm_L_asr
Mark Input dependent function gsm_L_asr
Finalizing gsm_L_asr2
Mark Input dependent function gsm_L_asr2
Finalizing gsm_L_asr1
Mark Input dependent function gsm_L_asr1
Finalizing gsm_L_asr0
Mark Input dependent function gsm_L_asr0
Finalizing gsm_L_asl0
Mark Input dependent function gsm_L_asl0
Finalizing gsm_L_sub
Finalizing gsm_L_sub1
Mark Input dependent function gsm_L_sub1
Finalizing gsm_L_sub0
Mark Input dependent function gsm_L_sub0
Finalizing gsm_L_add
Finalizing gsm_L_add1
Mark Input dependent function gsm_L_add1
Finalizing gsm_L_add0
Mark Input dependent function gsm_L_add0
Finalizing gsm_L_mult
Finalizing gsm_abs
Finalizing gsm_mult_r
Finalizing gsm_mult_r0
Mark Input dependent function gsm_mult_r0
Finalizing audio_init_output
Finalizing put_u32
Mark Input dependent function put_u32
Finalizing audio_init_input
Finalizing audio_init_input0
Mark Input dependent function audio_init_input0
Finalizing get_u32
Mark Input dependent function get_u32
Finalizing get_u320
Mark Input dependent function get_u320
Finalizing alaw_output
Finalizing alaw_output0
Mark Input dependent function alaw_output0
Finalizing alaw_input
Finalizing alaw_input2
Mark Input dependent function alaw_input2
Finalizing alaw_input1
Mark Input dependent function alaw_input1
Finalizing alaw_input0
Mark Input dependent function alaw_input0
Finalizing ulaw_output
Finalizing ulaw_output0
Mark Input dependent function ulaw_output0
Finalizing ulaw_input
Finalizing ulaw_input2
Mark Input dependent function ulaw_input2
Finalizing ulaw_input1
Mark Input dependent function ulaw_input1
Finalizing ulaw_input0
Mark Input dependent function ulaw_input0
Finalizing linear_output
Finalizing linear_input
Finalizing process_encode
Finalizing gsm_encode
Mark Input dependent function gsm_encode
Finalizing Gsm_Coder
Mark Input dependent function Gsm_Coder
Finalizing Gsm_Coder1
Mark Input dependent function Gsm_Coder1
Finalizing Gsm_Coder0
Mark Input dependent function Gsm_Coder0
Finalizing Gsm_RPE_Encoding
Mark Input dependent function Gsm_RPE_Encoding
Finalizing Gsm_RPE_Encoding0
Mark Input dependent function Gsm_RPE_Encoding0
Finalizing APCM_quantization
Mark Input dependent function APCM_quantization
Finalizing APCM_quantization7
Mark Input dependent function APCM_quantization7
Finalizing APCM_quantization6
Mark Input dependent function APCM_quantization6
Finalizing APCM_quantization5
Mark Input dependent function APCM_quantization5
Finalizing APCM_quantization4
Mark Input dependent function APCM_quantization4
Finalizing gsm_add
Mark Input dependent function gsm_add
Finalizing APCM_quantization3
Mark Input dependent function APCM_quantization3
Finalizing APCM_quantization2
Mark Input dependent function APCM_quantization2
Finalizing APCM_quantization1
Mark Input dependent function APCM_quantization1
Finalizing APCM_quantization0
Mark Input dependent function APCM_quantization0
Finalizing RPE_grid_selection
Mark Input dependent function RPE_grid_selection
Finalizing RPE_grid_selection5
Mark Input dependent function RPE_grid_selection5
Finalizing RPE_grid_selection4
Mark Input dependent function RPE_grid_selection4
Finalizing RPE_grid_selection3
Mark Input dependent function RPE_grid_selection3
Finalizing RPE_grid_selection2
Mark Input dependent function RPE_grid_selection2
Finalizing RPE_grid_selection1
Mark Input dependent function RPE_grid_selection1
Finalizing RPE_grid_selection0
Mark Input dependent function RPE_grid_selection0
Finalizing Weighting_filter
Mark Input dependent function Weighting_filter
Finalizing Weighting_filter0
Mark Input dependent function Weighting_filter0
Finalizing Gsm_Long_Term_Predictor
Mark Input dependent function Gsm_Long_Term_Predictor
Finalizing Gsm_Long_Term_Predictor0
Mark Input dependent function Gsm_Long_Term_Predictor0
Finalizing Long_term_analysis_filtering
Mark Input dependent function Long_term_analysis_filtering
Finalizing Long_term_analysis_filtering3
Mark Input dependent function Long_term_analysis_filtering3
Finalizing Long_term_analysis_filtering2
Mark Input dependent function Long_term_analysis_filtering2
Finalizing Long_term_analysis_filtering1
Mark Input dependent function Long_term_analysis_filtering1
Finalizing Long_term_analysis_filtering0
Mark Input dependent function Long_term_analysis_filtering0
Finalizing Calculation_of_the_LTP_parameters
Mark Input dependent function Calculation_of_the_LTP_parameters
Finalizing Calculation_of_the_LTP_parameters11
Mark Input dependent function Calculation_of_the_LTP_parameters11
Finalizing Calculation_of_the_LTP_parameters10
Mark Input dependent function Calculation_of_the_LTP_parameters10
Finalizing gsm_mult
Mark Input dependent function gsm_mult
Finalizing gsm_mult0
Mark Input dependent function gsm_mult0
Finalizing Calculation_of_the_LTP_parameters9
Mark Input dependent function Calculation_of_the_LTP_parameters9
Finalizing Calculation_of_the_LTP_parameters8
Mark Input dependent function Calculation_of_the_LTP_parameters8
Finalizing Calculation_of_the_LTP_parameters7
Mark Input dependent function Calculation_of_the_LTP_parameters7
Finalizing Calculation_of_the_LTP_parameters6
Mark Input dependent function Calculation_of_the_LTP_parameters6
Finalizing Calculation_of_the_LTP_parameters5
Mark Input dependent function Calculation_of_the_LTP_parameters5
Finalizing Calculation_of_the_LTP_parameters4
Mark Input dependent function Calculation_of_the_LTP_parameters4
Finalizing Calculation_of_the_LTP_parameters3
Mark Input dependent function Calculation_of_the_LTP_parameters3
Finalizing Calculation_of_the_LTP_parameters2
Mark Input dependent function Calculation_of_the_LTP_parameters2
Finalizing Calculation_of_the_LTP_parameters1
Mark Input dependent function Calculation_of_the_LTP_parameters1
Finalizing Calculation_of_the_LTP_parameters0
Mark Input dependent function Calculation_of_the_LTP_parameters0
Finalizing Gsm_Short_Term_Analysis_Filter
Mark Input dependent function Gsm_Short_Term_Analysis_Filter
Finalizing Short_term_analysis_filtering
Mark Input dependent function Short_term_analysis_filtering
Finalizing Short_term_analysis_filtering2
Mark Input dependent function Short_term_analysis_filtering2
Finalizing Short_term_analysis_filtering1
Mark Input dependent function Short_term_analysis_filtering1
Finalizing Short_term_analysis_filtering0
Mark Input dependent function Short_term_analysis_filtering0
Finalizing Gsm_LPC_Analysis
Mark Input dependent function Gsm_LPC_Analysis
Finalizing Gsm_LPC_Analysis0
Mark Input dependent function Gsm_LPC_Analysis0
Finalizing Quantization_and_coding
Mark Input dependent function Quantization_and_coding
Finalizing Transformation_to_Log_Area_Ratios
Mark Input dependent function Transformation_to_Log_Area_Ratios
Finalizing Transformation_to_Log_Area_Ratios3
Mark Input dependent function Transformation_to_Log_Area_Ratios3
Finalizing Transformation_to_Log_Area_Ratios2
Mark Input dependent function Transformation_to_Log_Area_Ratios2
Finalizing Transformation_to_Log_Area_Ratios1
Mark Input dependent function Transformation_to_Log_Area_Ratios1
Finalizing Transformation_to_Log_Area_Ratios0
Mark Input dependent function Transformation_to_Log_Area_Ratios0
Finalizing Reflection_coefficients
Mark Input dependent function Reflection_coefficients
Finalizing Reflection_coefficients8
Mark Input dependent function Reflection_coefficients8
Finalizing Reflection_coefficients7
Mark Input dependent function Reflection_coefficients7
Finalizing gsm_div
Mark Input dependent function gsm_div
Finalizing gsm_div2
Mark Input dependent function gsm_div2
Finalizing gsm_div1
Mark Input dependent function gsm_div1
Finalizing gsm_div0
Mark Input dependent function gsm_div0
Finalizing Reflection_coefficients6
Mark Input dependent function Reflection_coefficients6
Finalizing Reflection_coefficients5
Mark Input dependent function Reflection_coefficients5
Finalizing Reflection_coefficients4
Mark Input dependent function Reflection_coefficients4
Finalizing Reflection_coefficients3
Mark Input dependent function Reflection_coefficients3
Finalizing Reflection_coefficients2
Mark Input dependent function Reflection_coefficients2
Finalizing Reflection_coefficients1
Mark Input dependent function Reflection_coefficients1
Finalizing Reflection_coefficients0
Mark Input dependent function Reflection_coefficients0
Finalizing Autocorrelation
Mark Input dependent function Autocorrelation
Finalizing Autocorrelation16
Mark Input dependent function Autocorrelation16
Finalizing Autocorrelation15
Mark Input dependent function Autocorrelation15
Finalizing Autocorrelation14
Mark Input dependent function Autocorrelation14
Finalizing Autocorrelation13
Mark Input dependent function Autocorrelation13
Finalizing Autocorrelation12
Mark Input dependent function Autocorrelation12
Finalizing Autocorrelation11
Mark Input dependent function Autocorrelation11
Finalizing Autocorrelation10
Mark Input dependent function Autocorrelation10
Finalizing Autocorrelation9
Mark Input dependent function Autocorrelation9
Finalizing Autocorrelation8
Mark Input dependent function Autocorrelation8
Finalizing Autocorrelation7
Mark Input dependent function Autocorrelation7
Finalizing Autocorrelation6
Mark Input dependent function Autocorrelation6
Finalizing Autocorrelation5
Mark Input dependent function Autocorrelation5
Finalizing Autocorrelation4
Mark Input dependent function Autocorrelation4
Finalizing Autocorrelation3
Mark Input dependent function Autocorrelation3
Finalizing Autocorrelation2
Mark Input dependent function Autocorrelation2
Finalizing Autocorrelation1
Mark Input dependent function Autocorrelation1
Finalizing gsm_norm
Mark Input dependent function gsm_norm
Finalizing gsm_norm0
Mark Input dependent function gsm_norm0
Finalizing Autocorrelation0
Mark Input dependent function Autocorrelation0
Finalizing Gsm_Preprocess
Mark Input dependent function Gsm_Preprocess
Finalizing process_encode0
Mark Input dependent function process_encode0
Finalizing process_decode
Finalizing gsm_decode
Mark Input dependent function gsm_decode
Finalizing Gsm_Decoder
Mark Input dependent function Gsm_Decoder
Finalizing Postprocessing
Mark Input dependent function Postprocessing
Finalizing Postprocessing0
Mark Input dependent function Postprocessing0
Finalizing Gsm_Short_Term_Synthesis_Filter
Mark Input dependent function Gsm_Short_Term_Synthesis_Filter
Finalizing Coefficients_40_159
Mark Input dependent function Coefficients_40_159
Finalizing Coefficients_40_1591
Mark Input dependent function Coefficients_40_1591
Finalizing Coefficients_40_1590
Mark Input dependent function Coefficients_40_1590
Finalizing Coefficients_27_39
Mark Input dependent function Coefficients_27_39
Finalizing Coefficients_27_390
Mark Input dependent function Coefficients_27_390
Finalizing Coefficients_13_26
Mark Input dependent function Coefficients_13_26
Finalizing Coefficients_13_260
Mark Input dependent function Coefficients_13_260
Finalizing Short_term_synthesis_filtering
Mark Input dependent function Short_term_synthesis_filtering
Finalizing Short_term_synthesis_filtering1
Mark Input dependent function Short_term_synthesis_filtering1
Finalizing Short_term_synthesis_filtering0
Mark Input dependent function Short_term_synthesis_filtering0
Finalizing LARp_to_rp
Mark Input dependent function LARp_to_rp
Finalizing LARp_to_rp0
Mark Input dependent function LARp_to_rp0
Finalizing Coefficients_0_12
Mark Input dependent function Coefficients_0_12
Finalizing Coefficients_0_120
Mark Input dependent function Coefficients_0_120
Finalizing Decoding_of_the_coded_Log_Area_Ratios
Mark Input dependent function Decoding_of_the_coded_Log_Area_Ratios
Finalizing Gsm_Decoder0
Mark Input dependent function Gsm_Decoder0
Finalizing Gsm_Long_Term_Synthesis_Filtering
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering
Finalizing Gsm_Long_Term_Synthesis_Filtering2
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering2
Finalizing Gsm_Long_Term_Synthesis_Filtering1
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering1
Finalizing Gsm_Long_Term_Synthesis_Filtering0
Mark Input dependent function Gsm_Long_Term_Synthesis_Filtering0
Finalizing Gsm_RPE_Decoding
Mark Input dependent function Gsm_RPE_Decoding
Finalizing Gsm_RPE_Decoding0
Mark Input dependent function Gsm_RPE_Decoding0
Finalizing RPE_grid_positioning
Mark Input dependent function RPE_grid_positioning
Finalizing RPE_grid_positioning4
Mark Input dependent function RPE_grid_positioning4
Finalizing RPE_grid_positioning3
Mark Input dependent function RPE_grid_positioning3
Finalizing RPE_grid_positioning2
Mark Input dependent function RPE_grid_positioning2
Finalizing RPE_grid_positioning1
Mark Input dependent function RPE_grid_positioning1
Finalizing RPE_grid_positioning0
Mark Input dependent function RPE_grid_positioning0
Finalizing APCM_inverse_quantization
Mark Input dependent function APCM_inverse_quantization
Finalizing APCM_inverse_quantization0
Mark Input dependent function APCM_inverse_quantization0
Finalizing gsm_asl
Mark Input dependent function gsm_asl
Finalizing gsm_asl2
Mark Input dependent function gsm_asl2
Finalizing gsm_asl1
Mark Input dependent function gsm_asl1
Finalizing gsm_asr
Mark Input dependent function gsm_asr
Finalizing gsm_asr2
Mark Input dependent function gsm_asr2
Finalizing gsm_asr1
Mark Input dependent function gsm_asr1
Finalizing gsm_asr0
Mark Input dependent function gsm_asr0
Finalizing gsm_asl0
Mark Input dependent function gsm_asl0
Finalizing gsm_sub
Mark Input dependent function gsm_sub
Finalizing APCM_quantization_xmaxc_to_exp_mant
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant
Finalizing APCM_quantization_xmaxc_to_exp_mant4
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant4
Finalizing APCM_quantization_xmaxc_to_exp_mant3
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant3
Finalizing APCM_quantization_xmaxc_to_exp_mant2
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant2
Finalizing APCM_quantization_xmaxc_to_exp_mant1
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant1
Finalizing APCM_quantization_xmaxc_to_exp_mant0
Mark Input dependent function APCM_quantization_xmaxc_to_exp_mant0
Finalizing gsm_destroy
Mark Input dependent function gsm_destroy
Finalizing gsm_option
Mark Input dependent function gsm_option
Finalizing process_decode0
Mark Input dependent function process_decode0
Finalizing gsm_create
Finalizing main
Finalizing process
Mark Input dependent function process
Finalizing process7
Mark Input dependent function process7
Finalizing process6
Mark Input dependent function process6
Finalizing process5
Mark Input dependent function process5
Finalizing process4
Mark Input dependent function process4
Finalizing process3
Mark Input dependent function process3
Finalizing process2
Mark Input dependent function process2
Finalizing process1
Mark Input dependent function process1
Finalizing process0
Mark Input dependent function process0
Finalizing update_own
Mark Input dependent function update_own
Finalizing update_own0
Mark Input dependent function update_own0
Finalizing update_mode
Mark Input dependent function update_mode
Finalizing update_mode0
Mark Input dependent function update_mode0
Finalizing update_times
Mark Input dependent function update_times
Finalizing update_times0
Mark Input dependent function update_times0
Finalizing open_output
Mark Input dependent function open_output
Finalizing open_output4
Mark Input dependent function open_output4
Finalizing open_output3
Mark Input dependent function open_output3
Finalizing open_output2
Mark Input dependent function open_output2
Finalizing ok_to_replace
Mark Input dependent function ok_to_replace
Finalizing ok_to_replace2
Mark Input dependent function ok_to_replace2
Finalizing ok_to_replace1
Mark Input dependent function ok_to_replace1
Finalizing ok_to_replace0
Mark Input dependent function ok_to_replace0
Finalizing open_output1
Mark Input dependent function open_output1
Finalizing length_okay
Mark Input dependent function length_okay
Finalizing length_okay0
Mark Input dependent function length_okay0
Finalizing open_output0
Mark Input dependent function open_output0
Finalizing open_input
Mark Input dependent function open_input
Finalizing prepare_io
Mark Input dependent function prepare_io
Finalizing grok_format
Mark Input dependent function grok_format
Finalizing grok_format0
Mark Input dependent function grok_format0
Finalizing plainname
Mark Input dependent function plainname
Finalizing okay_as_input
Mark Input dependent function okay_as_input
Finalizing okay_as_input1
Mark Input dependent function okay_as_input1
Finalizing okay_as_input0
Mark Input dependent function okay_as_input0
Finalizing open_input4
Mark Input dependent function open_input4
Finalizing open_input3
Mark Input dependent function open_input3
Finalizing open_input2
Mark Input dependent function open_input2
Finalizing open_input1
Mark Input dependent function open_input1
Finalizing codename
Mark Input dependent function codename
Finalizing normalname
Mark Input dependent function normalname
Finalizing normalname3
Mark Input dependent function normalname3
Finalizing normalname2
Mark Input dependent function normalname2
Finalizing normalname1
Mark Input dependent function normalname1
Finalizing suffix
Mark Input dependent function suffix
Finalizing emalloc
Mark Input dependent function emalloc
Finalizing onintr
Mark Input dependent function onintr
Finalizing onintr1
Mark Input dependent function onintr1
Finalizing onintr0
Mark Input dependent function onintr0
Finalizing emalloc0
Mark Input dependent function emalloc0
Finalizing normalname0
Mark Input dependent function normalname0
Finalizing open_input0
Mark Input dependent function open_input0
Finalizing catch_signals
Mark Input dependent function catch_signals
Finalizing catch_signals0
Mark Input dependent function catch_signals0
Finalizing main0
Mark Input dependent function main0
Finalizing help
Mark Input dependent function help
Finalizing help0
Mark Input dependent function help0
Finalizing version
Mark Input dependent function version
Finalizing version0
Mark Input dependent function version0
Finalizing set_format
Mark Input dependent function set_format
Finalizing set_format0
Mark Input dependent function set_format0
Finalizing parse_argv0
Finalizing parse_argv00
Mark Input dependent function parse_argv00
Finalizing endname
Mark Input dependent function endname
Finalizing endname0
Mark Input dependent function endname0
Finalizing generic_init
Mark Input dependent function generic_init
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/toast.x.bc/50/0
here!:gsm_L_asl1
here!:Calculation_of_the_LTP_parameters5
here!:gsm_L_asl
here!:audio_init_output
here!:update_mode0
here!:RPE_grid_positioning0
here!:alaw_output0
here!:Autocorrelation0
here!:APCM_quantization_xmaxc_to_exp_mant1
here!:onintr0
here!:update_times0
here!:Weighting_filter0
here!:gsm_destroy
here!:gsm_add
here!:alaw_output
here!:gsm_norm
here!:Reflection_coefficients1
here!:Quantization_and_coding
here!:LARp_to_rp0
here!:RPE_grid_selection2
here!:Gsm_RPE_Encoding0
here!:parse_argv00
here!:Reflection_coefficients4
here!:main
here!:process
here!:RPE_grid_selection
here!:emalloc0
here!:update_own0
here!:Reflection_coefficients6
here!:Gsm_RPE_Decoding0
here!:Autocorrelation3
here!:normalname2
here!:gsm_L_add
here!:parse_argv0
here!:gsm_div0
here!:update_times
here!:gsm_mult
here!:gsm_L_asr0
here!:Autocorrelation13
here!:Gsm_Long_Term_Synthesis_Filtering
here!:process1
here!:gsm_decode
here!:gsm_debug_words2
here!:Reflection_coefficients2
here!:okay_as_input1
here!:Gsm_RPE_Decoding
here!:RPE_grid_positioning
here!:Calculation_of_the_LTP_parameters11
here!:open_input2
here!:Autocorrelation14
here!:Autocorrelation7
here!:open_output2
here!:main0
here!:Short_term_analysis_filtering0
here!:gsm_print
here!:Calculation_of_the_LTP_parameters4
here!:normalname
here!:Coefficients_27_39
here!:alaw_input1
here!:Gsm_Short_Term_Synthesis_Filter
here!:gsm_debug_longword0
here!:APCM_quantization0
here!:Autocorrelation15
here!:Autocorrelation1
here!:APCM_inverse_quantization0
here!:gsm_L_asr2
here!:Reflection_coefficients8
here!:Autocorrelation5
here!:gsm_L_sub1
here!:gsm_sub
here!:update_own
here!:okay_as_input
here!:Gsm_Decoder0
here!:Calculation_of_the_LTP_parameters6
here!:Short_term_synthesis_filtering
here!:grok_format
here!:get_u320
here!:gsm_L_add1
here!:Autocorrelation12
here!:gsm_debug_longword
here!:Gsm_LPC_Analysis0
here!:get_u32
here!:Gsm_LPC_Analysis
here!:gsm_abs
here!:open_output3
here!:gsm_asl0
here!:Coefficients_13_26
here!:Autocorrelation8
here!:RPE_grid_selection4
here!:process_encode0
here!:RPE_grid_positioning3
here!:gsm_debug_word
here!:Reflection_coefficients
here!:gsm_debug_words1
here!:version0
here!:process5
here!:Short_term_analysis_filtering
here!:ulaw_input1
here!:gsm_mult0
here!:length_okay0
here!:Autocorrelation
here!:gsm_L_asr1
here!:Reflection_coefficients3
here!:RPE_grid_positioning4
here!:normalname3
here!:open_input0
here!:Gsm_Long_Term_Predictor
here!:codename
here!:RPE_grid_selection1
here!:ulaw_input0
here!:help
here!:Coefficients_0_120
here!:plainname
here!:process6
here!:Long_term_analysis_filtering2
here!:gsm_asr2
here!:gsm_debug_longwords
here!:RPE_grid_positioning2
here!:APCM_quantization5
here!:Calculation_of_the_LTP_parameters8
here!:gsm_debug_longwords0
here!:Calculation_of_the_LTP_parameters7
here!:Long_term_analysis_filtering
here!:Calculation_of_the_LTP_parameters10
here!:open_output4
here!:alaw_input
here!:emalloc
here!:Calculation_of_the_LTP_parameters
here!:Autocorrelation4
here!:catch_signals0
here!:open_input4
here!:APCM_inverse_quantization
here!:Coefficients_40_1591
here!:Coefficients_40_1590
here!:Autocorrelation11
here!:Reflection_coefficients0
here!:open_output1
here!:open_output1
got filter function names
did not find generic_init demangled to generic_init
Add filter function main
FunctionInfo. Adding function:main
Add filter function parse_argv0
FunctionInfo. Adding function:parse_argv0
did not find getopt demangled to getopt
did not find set_format demangled to set_format
did not find version demangled to version
did not find exit demangled to exit
Add filter function help
FunctionInfo. Adding function:help
did not find fprintf demangled to fprintf
did not find onintr demangled to onintr
did not find catch_signals demangled to catch_signals
Add filter function process
FunctionInfo. Adding function:process
did not find open_input demangled to open_input
did not find open_output demangled to open_output
did not find process_decode demangled to process_decode
did not find process_encode demangled to process_encode
did not find fflush demangled to fflush
did not find ferror demangled to ferror
did not find perror demangled to perror
Add filter function update_times
FunctionInfo. Adding function:update_times
did not find update_mode demangled to update_mode
Add filter function update_own
FunctionInfo. Adding function:update_own
did not find fclose demangled to fclose
did not find free demangled to free
did not find unlink demangled to unlink
did not find __errno_location demangled to __errno_location
did not find fileno demangled to fileno
did not find fchown demangled to fchown
did not find fchmod demangled to fchmod
did not find utime demangled to utime
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fwrite demangled to fwrite
did not find fread demangled to fread
Add filter function plainname
FunctionInfo. Adding function:plainname
Add filter function codename
FunctionInfo. Adding function:codename
did not find length_okay demangled to length_okay
did not find open demangled to open
did not find fdopen demangled to fdopen
did not find ok_to_replace demangled to ok_to_replace
did not find fopen demangled to fopen
did not find close demangled to close
did not find isatty demangled to isatty
did not find getchar demangled to getchar
did not find endname demangled to endname
did not find strlen demangled to strlen
did not find strrchr demangled to strrchr
Add filter function normalname
FunctionInfo. Adding function:normalname
Add filter function emalloc
FunctionInfo. Adding function:emalloc
did not find strcpy demangled to strcpy
did not find suffix demangled to suffix
did not find strcat demangled to strcat
did not find memcmp demangled to memcmp
did not find malloc demangled to malloc
Add filter function okay_as_input
FunctionInfo. Adding function:okay_as_input
Add filter function grok_format
FunctionInfo. Adding function:grok_format
did not find prepare_io demangled to prepare_io
did not find fstat demangled to fstat
did not find __sysv_signal demangled to __sysv_signal
did not find printf demangled to printf
did not find strncmp demangled to strncmp
did not find strcmp demangled to strcmp
did not find linear_input demangled to linear_input
did not find linear_output demangled to linear_output
did not find ulaw_input demangled to ulaw_input
did not find fgetc demangled to fgetc
did not find ulaw_output demangled to ulaw_output
did not find fputc demangled to fputc
Add filter function alaw_input
FunctionInfo. Adding function:alaw_input
Add filter function alaw_output
FunctionInfo. Adding function:alaw_output
did not find audio_init_input demangled to audio_init_input
Add filter function get_u32
FunctionInfo. Adding function:get_u32
did not find fseek demangled to fseek
did not find _IO_getc demangled to _IO_getc
Add filter function audio_init_output
FunctionInfo. Adding function:audio_init_output
did not find fputs demangled to fputs
did not find put_u32 demangled to put_u32
did not find _IO_putc demangled to _IO_putc
Add filter function gsm_add
FunctionInfo. Adding function:gsm_add
Add filter function gsm_sub
FunctionInfo. Adding function:gsm_sub
Add filter function gsm_mult
FunctionInfo. Adding function:gsm_mult
did not find gsm_mult_r demangled to gsm_mult_r
Add filter function gsm_abs
FunctionInfo. Adding function:gsm_abs
did not find gsm_L_mult demangled to gsm_L_mult
did not find __assert_fail demangled to __assert_fail
Add filter function gsm_L_add
FunctionInfo. Adding function:gsm_L_add
did not find gsm_L_sub demangled to gsm_L_sub
Add filter function gsm_norm
FunctionInfo. Adding function:gsm_norm
Add filter function gsm_L_asl
FunctionInfo. Adding function:gsm_L_asl
did not find gsm_L_asr demangled to gsm_L_asr
did not find gsm_asl demangled to gsm_asl
did not find gsm_asr demangled to gsm_asr
did not find gsm_div demangled to gsm_div
did not find Gsm_Coder demangled to Gsm_Coder
did not find Gsm_Preprocess demangled to Gsm_Preprocess
Add filter function Gsm_LPC_Analysis
FunctionInfo. Adding function:Gsm_LPC_Analysis
did not find Gsm_Short_Term_Analysis_Filter demangled to Gsm_Short_Term_Analysis_Filter
Add filter function Gsm_Long_Term_Predictor
FunctionInfo. Adding function:Gsm_Long_Term_Predictor
did not find Gsm_RPE_Encoding demangled to Gsm_RPE_Encoding
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find Weighting_filter demangled to Weighting_filter
Add filter function RPE_grid_selection
FunctionInfo. Adding function:RPE_grid_selection
did not find APCM_quantization demangled to APCM_quantization
Add filter function APCM_inverse_quantization
FunctionInfo. Adding function:APCM_inverse_quantization
Add filter function RPE_grid_positioning
FunctionInfo. Adding function:RPE_grid_positioning
did not find APCM_quantization_xmaxc_to_exp_mant demangled to APCM_quantization_xmaxc_to_exp_mant
Add filter function Calculation_of_the_LTP_parameters
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters
Add filter function Long_term_analysis_filtering
FunctionInfo. Adding function:Long_term_analysis_filtering
did not find Decoding_of_the_coded_Log_Area_Ratios demangled to Decoding_of_the_coded_Log_Area_Ratios
did not find Coefficients_0_12 demangled to Coefficients_0_12
did not find LARp_to_rp demangled to LARp_to_rp
Add filter function Short_term_analysis_filtering
FunctionInfo. Adding function:Short_term_analysis_filtering
Add filter function Coefficients_13_26
FunctionInfo. Adding function:Coefficients_13_26
Add filter function Coefficients_27_39
FunctionInfo. Adding function:Coefficients_27_39
did not find Coefficients_40_159 demangled to Coefficients_40_159
Add filter function Autocorrelation
FunctionInfo. Adding function:Autocorrelation
Add filter function Reflection_coefficients
FunctionInfo. Adding function:Reflection_coefficients
did not find Transformation_to_Log_Area_Ratios demangled to Transformation_to_Log_Area_Ratios
Add filter function Quantization_and_coding
FunctionInfo. Adding function:Quantization_and_coding
did not find gsm_debug_words demangled to gsm_debug_words
Add filter function gsm_debug_longwords
FunctionInfo. Adding function:gsm_debug_longwords
Add filter function gsm_debug_longword
FunctionInfo. Adding function:gsm_debug_longword
Add filter function gsm_debug_word
FunctionInfo. Adding function:gsm_debug_word
did not find Gsm_Decoder demangled to Gsm_Decoder
Add filter function Gsm_RPE_Decoding
FunctionInfo. Adding function:Gsm_RPE_Decoding
Add filter function Gsm_Long_Term_Synthesis_Filtering
FunctionInfo. Adding function:Gsm_Long_Term_Synthesis_Filtering
Add filter function Gsm_Short_Term_Synthesis_Filter
FunctionInfo. Adding function:Gsm_Short_Term_Synthesis_Filter
did not find Postprocessing demangled to Postprocessing
Add filter function Short_term_synthesis_filtering
FunctionInfo. Adding function:Short_term_synthesis_filtering
Add filter function gsm_destroy
FunctionInfo. Adding function:gsm_destroy
Add filter function gsm_decode
FunctionInfo. Adding function:gsm_decode
did not find gsm_encode demangled to gsm_encode
did not find gsm_explode demangled to gsm_explode
did not find gsm_implode demangled to gsm_implode
did not find gsm_create demangled to gsm_create
Add filter function gsm_print
FunctionInfo. Adding function:gsm_print
did not find gsm_option demangled to gsm_option
Add filter function main0
FunctionInfo. Adding function:main0
Add filter function parse_argv00
FunctionInfo. Adding function:parse_argv00
did not find set_format0 demangled to set_format0
Add filter function version0
FunctionInfo. Adding function:version0
did not find help0 demangled to help0
Add filter function onintr0
FunctionInfo. Adding function:onintr0
did not find onintr1 demangled to onintr1
Add filter function catch_signals0
FunctionInfo. Adding function:catch_signals0
did not find process0 demangled to process0
Add filter function process1
FunctionInfo. Adding function:process1
did not find process2 demangled to process2
did not find process3 demangled to process3
did not find process4 demangled to process4
Add filter function process5
FunctionInfo. Adding function:process5
Add filter function process6
FunctionInfo. Adding function:process6
did not find process7 demangled to process7
Add filter function open_input0
FunctionInfo. Adding function:open_input0
did not find open_input1 demangled to open_input1
Add filter function open_input2
FunctionInfo. Adding function:open_input2
did not find open_input3 demangled to open_input3
Add filter function open_input4
FunctionInfo. Adding function:open_input4
did not find open_output0 demangled to open_output0
Add filter function open_output1
FunctionInfo. Adding function:open_output1
Add filter function open_output2
FunctionInfo. Adding function:open_output2
Add filter function open_output3
FunctionInfo. Adding function:open_output3
Add filter function open_output4
FunctionInfo. Adding function:open_output4
did not find process_decode0 demangled to process_decode0
Add filter function process_encode0
FunctionInfo. Adding function:process_encode0
Add filter function update_times0
FunctionInfo. Adding function:update_times0
Add filter function update_mode0
FunctionInfo. Adding function:update_mode0
Add filter function update_own0
FunctionInfo. Adding function:update_own0
Add filter function length_okay0
FunctionInfo. Adding function:length_okay0
did not find ok_to_replace0 demangled to ok_to_replace0
did not find ok_to_replace1 demangled to ok_to_replace1
did not find ok_to_replace2 demangled to ok_to_replace2
did not find endname0 demangled to endname0
did not find normalname0 demangled to normalname0
did not find normalname1 demangled to normalname1
Add filter function normalname2
FunctionInfo. Adding function:normalname2
Add filter function normalname3
FunctionInfo. Adding function:normalname3
Add filter function emalloc0
FunctionInfo. Adding function:emalloc0
did not find okay_as_input0 demangled to okay_as_input0
Add filter function okay_as_input1
FunctionInfo. Adding function:okay_as_input1
did not find grok_format0 demangled to grok_format0
Add filter function ulaw_input0
FunctionInfo. Adding function:ulaw_input0
Add filter function ulaw_input1
FunctionInfo. Adding function:ulaw_input1
did not find ulaw_input2 demangled to ulaw_input2
did not find ulaw_output0 demangled to ulaw_output0
did not find alaw_input0 demangled to alaw_input0
Add filter function alaw_input1
FunctionInfo. Adding function:alaw_input1
did not find alaw_input2 demangled to alaw_input2
Add filter function alaw_output0
FunctionInfo. Adding function:alaw_output0
did not find audio_init_input0 demangled to audio_init_input0
Add filter function get_u320
FunctionInfo. Adding function:get_u320
Add filter function gsm_mult0
FunctionInfo. Adding function:gsm_mult0
did not find gsm_mult_r0 demangled to gsm_mult_r0
did not find gsm_L_add0 demangled to gsm_L_add0
Add filter function gsm_L_add1
FunctionInfo. Adding function:gsm_L_add1
did not find gsm_L_sub0 demangled to gsm_L_sub0
Add filter function gsm_L_sub1
FunctionInfo. Adding function:gsm_L_sub1
did not find gsm_norm0 demangled to gsm_norm0
did not find gsm_L_asl0 demangled to gsm_L_asl0
Add filter function gsm_L_asl1
FunctionInfo. Adding function:gsm_L_asl1
did not find gsm_L_asl2 demangled to gsm_L_asl2
Add filter function gsm_L_asr0
FunctionInfo. Adding function:gsm_L_asr0
Add filter function gsm_L_asr1
FunctionInfo. Adding function:gsm_L_asr1
Add filter function gsm_L_asr2
FunctionInfo. Adding function:gsm_L_asr2
Add filter function gsm_asl0
FunctionInfo. Adding function:gsm_asl0
did not find gsm_asl1 demangled to gsm_asl1
did not find gsm_asl2 demangled to gsm_asl2
did not find gsm_asr0 demangled to gsm_asr0
did not find gsm_asr1 demangled to gsm_asr1
Add filter function gsm_asr2
FunctionInfo. Adding function:gsm_asr2
Add filter function gsm_div0
FunctionInfo. Adding function:gsm_div0
did not find gsm_div1 demangled to gsm_div1
did not find gsm_div2 demangled to gsm_div2
did not find Gsm_Coder0 demangled to Gsm_Coder0
did not find Gsm_Coder1 demangled to Gsm_Coder1
Add filter function Gsm_LPC_Analysis0
FunctionInfo. Adding function:Gsm_LPC_Analysis0
did not find Gsm_Long_Term_Predictor0 demangled to Gsm_Long_Term_Predictor0
Add filter function Gsm_RPE_Encoding0
FunctionInfo. Adding function:Gsm_RPE_Encoding0
Add filter function Weighting_filter0
FunctionInfo. Adding function:Weighting_filter0
did not find RPE_grid_selection0 demangled to RPE_grid_selection0
Add filter function RPE_grid_selection1
FunctionInfo. Adding function:RPE_grid_selection1
Add filter function RPE_grid_selection2
FunctionInfo. Adding function:RPE_grid_selection2
did not find RPE_grid_selection3 demangled to RPE_grid_selection3
Add filter function RPE_grid_selection4
FunctionInfo. Adding function:RPE_grid_selection4
did not find RPE_grid_selection5 demangled to RPE_grid_selection5
Add filter function APCM_quantization0
FunctionInfo. Adding function:APCM_quantization0
did not find APCM_quantization1 demangled to APCM_quantization1
did not find APCM_quantization2 demangled to APCM_quantization2
did not find APCM_quantization3 demangled to APCM_quantization3
did not find APCM_quantization4 demangled to APCM_quantization4
Add filter function APCM_quantization5
FunctionInfo. Adding function:APCM_quantization5
did not find APCM_quantization6 demangled to APCM_quantization6
did not find APCM_quantization7 demangled to APCM_quantization7
Add filter function APCM_inverse_quantization0
FunctionInfo. Adding function:APCM_inverse_quantization0
Add filter function RPE_grid_positioning0
FunctionInfo. Adding function:RPE_grid_positioning0
did not find RPE_grid_positioning1 demangled to RPE_grid_positioning1
Add filter function RPE_grid_positioning2
FunctionInfo. Adding function:RPE_grid_positioning2
Add filter function RPE_grid_positioning3
FunctionInfo. Adding function:RPE_grid_positioning3
Add filter function RPE_grid_positioning4
FunctionInfo. Adding function:RPE_grid_positioning4
did not find APCM_quantization_xmaxc_to_exp_mant0 demangled to APCM_quantization_xmaxc_to_exp_mant0
Add filter function APCM_quantization_xmaxc_to_exp_mant1
FunctionInfo. Adding function:APCM_quantization_xmaxc_to_exp_mant1
did not find APCM_quantization_xmaxc_to_exp_mant2 demangled to APCM_quantization_xmaxc_to_exp_mant2
did not find APCM_quantization_xmaxc_to_exp_mant3 demangled to APCM_quantization_xmaxc_to_exp_mant3
did not find APCM_quantization_xmaxc_to_exp_mant4 demangled to APCM_quantization_xmaxc_to_exp_mant4
did not find Calculation_of_the_LTP_parameters0 demangled to Calculation_of_the_LTP_parameters0
did not find Calculation_of_the_LTP_parameters1 demangled to Calculation_of_the_LTP_parameters1
did not find Calculation_of_the_LTP_parameters2 demangled to Calculation_of_the_LTP_parameters2
did not find Calculation_of_the_LTP_parameters3 demangled to Calculation_of_the_LTP_parameters3
Add filter function Calculation_of_the_LTP_parameters4
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters4
Add filter function Calculation_of_the_LTP_parameters5
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters5
Add filter function Calculation_of_the_LTP_parameters6
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters6
Add filter function Calculation_of_the_LTP_parameters7
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters7
Add filter function Calculation_of_the_LTP_parameters8
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters8
did not find Calculation_of_the_LTP_parameters9 demangled to Calculation_of_the_LTP_parameters9
Add filter function Calculation_of_the_LTP_parameters10
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters10
Add filter function Calculation_of_the_LTP_parameters11
FunctionInfo. Adding function:Calculation_of_the_LTP_parameters11
did not find Long_term_analysis_filtering0 demangled to Long_term_analysis_filtering0
did not find Long_term_analysis_filtering1 demangled to Long_term_analysis_filtering1
Add filter function Long_term_analysis_filtering2
FunctionInfo. Adding function:Long_term_analysis_filtering2
did not find Long_term_analysis_filtering3 demangled to Long_term_analysis_filtering3
Add filter function Coefficients_0_120
FunctionInfo. Adding function:Coefficients_0_120
Add filter function LARp_to_rp0
FunctionInfo. Adding function:LARp_to_rp0
Add filter function Short_term_analysis_filtering0
FunctionInfo. Adding function:Short_term_analysis_filtering0
did not find Short_term_analysis_filtering1 demangled to Short_term_analysis_filtering1
did not find Short_term_analysis_filtering2 demangled to Short_term_analysis_filtering2
did not find Coefficients_13_260 demangled to Coefficients_13_260
did not find Coefficients_27_390 demangled to Coefficients_27_390
Add filter function Coefficients_40_1590
FunctionInfo. Adding function:Coefficients_40_1590
Add filter function Coefficients_40_1591
FunctionInfo. Adding function:Coefficients_40_1591
Add filter function Autocorrelation0
FunctionInfo. Adding function:Autocorrelation0
Add filter function Autocorrelation1
FunctionInfo. Adding function:Autocorrelation1
did not find Autocorrelation2 demangled to Autocorrelation2
Add filter function Autocorrelation3
FunctionInfo. Adding function:Autocorrelation3
Add filter function Autocorrelation4
FunctionInfo. Adding function:Autocorrelation4
Add filter function Autocorrelation5
FunctionInfo. Adding function:Autocorrelation5
did not find Autocorrelation6 demangled to Autocorrelation6
Add filter function Autocorrelation7
FunctionInfo. Adding function:Autocorrelation7
Add filter function Autocorrelation8
FunctionInfo. Adding function:Autocorrelation8
did not find Autocorrelation9 demangled to Autocorrelation9
did not find Autocorrelation10 demangled to Autocorrelation10
Add filter function Autocorrelation11
FunctionInfo. Adding function:Autocorrelation11
Add filter function Autocorrelation12
FunctionInfo. Adding function:Autocorrelation12
Add filter function Autocorrelation13
FunctionInfo. Adding function:Autocorrelation13
Add filter function Autocorrelation14
FunctionInfo. Adding function:Autocorrelation14
Add filter function Autocorrelation15
FunctionInfo. Adding function:Autocorrelation15
did not find Autocorrelation16 demangled to Autocorrelation16
Add filter function Reflection_coefficients0
FunctionInfo. Adding function:Reflection_coefficients0
Add filter function Reflection_coefficients1
FunctionInfo. Adding function:Reflection_coefficients1
Add filter function Reflection_coefficients2
FunctionInfo. Adding function:Reflection_coefficients2
Add filter function Reflection_coefficients3
FunctionInfo. Adding function:Reflection_coefficients3
Add filter function Reflection_coefficients4
FunctionInfo. Adding function:Reflection_coefficients4
did not find Reflection_coefficients5 demangled to Reflection_coefficients5
Add filter function Reflection_coefficients6
FunctionInfo. Adding function:Reflection_coefficients6
did not find Reflection_coefficients7 demangled to Reflection_coefficients7
Add filter function Reflection_coefficients8
FunctionInfo. Adding function:Reflection_coefficients8
did not find Transformation_to_Log_Area_Ratios0 demangled to Transformation_to_Log_Area_Ratios0
did not find Transformation_to_Log_Area_Ratios1 demangled to Transformation_to_Log_Area_Ratios1
did not find Transformation_to_Log_Area_Ratios2 demangled to Transformation_to_Log_Area_Ratios2
did not find Transformation_to_Log_Area_Ratios3 demangled to Transformation_to_Log_Area_Ratios3
did not find gsm_debug_words0 demangled to gsm_debug_words0
Add filter function gsm_debug_words1
FunctionInfo. Adding function:gsm_debug_words1
Add filter function gsm_debug_words2
FunctionInfo. Adding function:gsm_debug_words2
Add filter function gsm_debug_longwords0
FunctionInfo. Adding function:gsm_debug_longwords0
did not find gsm_debug_longwords1 demangled to gsm_debug_longwords1
did not find gsm_debug_longwords2 demangled to gsm_debug_longwords2
Add filter function gsm_debug_longword0
FunctionInfo. Adding function:gsm_debug_longword0
did not find gsm_debug_word0 demangled to gsm_debug_word0
Add filter function Gsm_Decoder0
FunctionInfo. Adding function:Gsm_Decoder0
Add filter function Gsm_RPE_Decoding0
FunctionInfo. Adding function:Gsm_RPE_Decoding0
did not find Gsm_Long_Term_Synthesis_Filtering0 demangled to Gsm_Long_Term_Synthesis_Filtering0
did not find Gsm_Long_Term_Synthesis_Filtering1 demangled to Gsm_Long_Term_Synthesis_Filtering1
did not find Gsm_Long_Term_Synthesis_Filtering2 demangled to Gsm_Long_Term_Synthesis_Filtering2
did not find Postprocessing0 demangled to Postprocessing0
did not find Short_term_synthesis_filtering0 demangled to Short_term_synthesis_filtering0
did not find Short_term_synthesis_filtering1 demangled to Short_term_synthesis_filtering1
did not find gsm_explode0 demangled to gsm_explode0
did not find gsm_implode0 demangled to gsm_implode0
Adding generic_init other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding parse_argv0 other functions, ExtractedOnly mode uses other functions
Adding set_format other functions, ExtractedOnly mode uses other functions
Adding version other functions, ExtractedOnly mode uses other functions
Adding help other functions, ExtractedOnly mode uses other functions
Adding onintr other functions, ExtractedOnly mode uses other functions
Adding catch_signals other functions, ExtractedOnly mode uses other functions
Adding process other functions, ExtractedOnly mode uses other functions
Adding open_input other functions, ExtractedOnly mode uses other functions
Adding open_output other functions, ExtractedOnly mode uses other functions
Adding process_decode other functions, ExtractedOnly mode uses other functions
Adding process_encode other functions, ExtractedOnly mode uses other functions
Adding update_times other functions, ExtractedOnly mode uses other functions
Adding update_mode other functions, ExtractedOnly mode uses other functions
Adding update_own other functions, ExtractedOnly mode uses other functions
Adding plainname other functions, ExtractedOnly mode uses other functions
Adding codename other functions, ExtractedOnly mode uses other functions
Adding length_okay other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace other functions, ExtractedOnly mode uses other functions
Adding endname other functions, ExtractedOnly mode uses other functions
Adding normalname other functions, ExtractedOnly mode uses other functions
Adding emalloc other functions, ExtractedOnly mode uses other functions
Adding suffix other functions, ExtractedOnly mode uses other functions
Adding okay_as_input other functions, ExtractedOnly mode uses other functions
Adding grok_format other functions, ExtractedOnly mode uses other functions
Adding prepare_io other functions, ExtractedOnly mode uses other functions
Adding linear_input other functions, ExtractedOnly mode uses other functions
Adding linear_output other functions, ExtractedOnly mode uses other functions
Adding ulaw_input other functions, ExtractedOnly mode uses other functions
Adding ulaw_output other functions, ExtractedOnly mode uses other functions
Adding alaw_input other functions, ExtractedOnly mode uses other functions
Adding alaw_output other functions, ExtractedOnly mode uses other functions
Adding audio_init_input other functions, ExtractedOnly mode uses other functions
Adding get_u32 other functions, ExtractedOnly mode uses other functions
Adding audio_init_output other functions, ExtractedOnly mode uses other functions
Adding put_u32 other functions, ExtractedOnly mode uses other functions
Adding gsm_add other functions, ExtractedOnly mode uses other functions
Adding gsm_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r other functions, ExtractedOnly mode uses other functions
Adding gsm_abs other functions, ExtractedOnly mode uses other functions
Adding gsm_L_mult other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub other functions, ExtractedOnly mode uses other functions
Adding gsm_norm other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_asl other functions, ExtractedOnly mode uses other functions
Adding gsm_asr other functions, ExtractedOnly mode uses other functions
Adding gsm_div other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder other functions, ExtractedOnly mode uses other functions
Adding Gsm_Preprocess other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Analysis_Filter other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Decoding_of_the_coded_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_12 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_26 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_39 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_159 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios other functions, ExtractedOnly mode uses other functions
Adding Quantization_and_coding other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering other functions, ExtractedOnly mode uses other functions
Adding Gsm_Short_Term_Synthesis_Filter other functions, ExtractedOnly mode uses other functions
Adding Postprocessing other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering other functions, ExtractedOnly mode uses other functions
Adding gsm_destroy other functions, ExtractedOnly mode uses other functions
Adding gsm_decode other functions, ExtractedOnly mode uses other functions
Adding gsm_encode other functions, ExtractedOnly mode uses other functions
Adding gsm_explode other functions, ExtractedOnly mode uses other functions
Adding gsm_implode other functions, ExtractedOnly mode uses other functions
Adding gsm_create other functions, ExtractedOnly mode uses other functions
Adding gsm_print other functions, ExtractedOnly mode uses other functions
Adding gsm_option other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding parse_argv00 other functions, ExtractedOnly mode uses other functions
Adding set_format0 other functions, ExtractedOnly mode uses other functions
Adding version0 other functions, ExtractedOnly mode uses other functions
Adding help0 other functions, ExtractedOnly mode uses other functions
Adding onintr0 other functions, ExtractedOnly mode uses other functions
Adding onintr1 other functions, ExtractedOnly mode uses other functions
Adding catch_signals0 other functions, ExtractedOnly mode uses other functions
Adding process0 other functions, ExtractedOnly mode uses other functions
Adding process1 other functions, ExtractedOnly mode uses other functions
Adding process2 other functions, ExtractedOnly mode uses other functions
Adding process3 other functions, ExtractedOnly mode uses other functions
Adding process4 other functions, ExtractedOnly mode uses other functions
Adding process5 other functions, ExtractedOnly mode uses other functions
Adding process6 other functions, ExtractedOnly mode uses other functions
Adding process7 other functions, ExtractedOnly mode uses other functions
Adding open_input0 other functions, ExtractedOnly mode uses other functions
Adding open_input1 other functions, ExtractedOnly mode uses other functions
Adding open_input2 other functions, ExtractedOnly mode uses other functions
Adding open_input3 other functions, ExtractedOnly mode uses other functions
Adding open_input4 other functions, ExtractedOnly mode uses other functions
Adding open_output0 other functions, ExtractedOnly mode uses other functions
Adding open_output1 other functions, ExtractedOnly mode uses other functions
Adding open_output2 other functions, ExtractedOnly mode uses other functions
Adding open_output3 other functions, ExtractedOnly mode uses other functions
Adding open_output4 other functions, ExtractedOnly mode uses other functions
Adding process_decode0 other functions, ExtractedOnly mode uses other functions
Adding process_encode0 other functions, ExtractedOnly mode uses other functions
Adding update_times0 other functions, ExtractedOnly mode uses other functions
Adding update_mode0 other functions, ExtractedOnly mode uses other functions
Adding update_own0 other functions, ExtractedOnly mode uses other functions
Adding length_okay0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace0 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace1 other functions, ExtractedOnly mode uses other functions
Adding ok_to_replace2 other functions, ExtractedOnly mode uses other functions
Adding endname0 other functions, ExtractedOnly mode uses other functions
Adding normalname0 other functions, ExtractedOnly mode uses other functions
Adding normalname1 other functions, ExtractedOnly mode uses other functions
Adding normalname2 other functions, ExtractedOnly mode uses other functions
Adding normalname3 other functions, ExtractedOnly mode uses other functions
Adding emalloc0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input0 other functions, ExtractedOnly mode uses other functions
Adding okay_as_input1 other functions, ExtractedOnly mode uses other functions
Adding grok_format0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input0 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input1 other functions, ExtractedOnly mode uses other functions
Adding ulaw_input2 other functions, ExtractedOnly mode uses other functions
Adding ulaw_output0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input0 other functions, ExtractedOnly mode uses other functions
Adding alaw_input1 other functions, ExtractedOnly mode uses other functions
Adding alaw_input2 other functions, ExtractedOnly mode uses other functions
Adding alaw_output0 other functions, ExtractedOnly mode uses other functions
Adding audio_init_input0 other functions, ExtractedOnly mode uses other functions
Adding get_u320 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult0 other functions, ExtractedOnly mode uses other functions
Adding gsm_mult_r0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_add1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_sub1 other functions, ExtractedOnly mode uses other functions
Adding gsm_norm0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_L_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asl2 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr0 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr1 other functions, ExtractedOnly mode uses other functions
Adding gsm_asr2 other functions, ExtractedOnly mode uses other functions
Adding gsm_div0 other functions, ExtractedOnly mode uses other functions
Adding gsm_div1 other functions, ExtractedOnly mode uses other functions
Adding gsm_div2 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Coder1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_LPC_Analysis0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Predictor0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Encoding0 other functions, ExtractedOnly mode uses other functions
Adding Weighting_filter0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection4 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_selection5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization5 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization6 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization7 other functions, ExtractedOnly mode uses other functions
Adding APCM_inverse_quantization0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning0 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning1 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning2 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning3 other functions, ExtractedOnly mode uses other functions
Adding RPE_grid_positioning4 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant0 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant1 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant2 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant3 other functions, ExtractedOnly mode uses other functions
Adding APCM_quantization_xmaxc_to_exp_mant4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters0 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters1 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters2 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters3 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters4 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters5 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters6 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters7 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters8 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters9 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters10 other functions, ExtractedOnly mode uses other functions
Adding Calculation_of_the_LTP_parameters11 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Long_term_analysis_filtering3 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_0_120 other functions, ExtractedOnly mode uses other functions
Adding LARp_to_rp0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding Short_term_analysis_filtering2 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_13_260 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_27_390 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1590 other functions, ExtractedOnly mode uses other functions
Adding Coefficients_40_1591 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation0 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation1 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation2 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation3 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation4 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation5 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation6 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation7 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation8 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation9 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation10 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation11 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation12 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation13 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation14 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation15 other functions, ExtractedOnly mode uses other functions
Adding Autocorrelation16 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients0 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients1 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients2 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients3 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients4 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients5 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients6 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients7 other functions, ExtractedOnly mode uses other functions
Adding Reflection_coefficients8 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios0 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios1 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios2 other functions, ExtractedOnly mode uses other functions
Adding Transformation_to_Log_Area_Ratios3 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_words2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords1 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longwords2 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_longword0 other functions, ExtractedOnly mode uses other functions
Adding gsm_debug_word0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Decoder0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_RPE_Decoding0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering0 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering1 other functions, ExtractedOnly mode uses other functions
Adding Gsm_Long_Term_Synthesis_Filtering2 other functions, ExtractedOnly mode uses other functions
Adding Postprocessing0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering0 other functions, ExtractedOnly mode uses other functions
Adding Short_term_synthesis_filtering1 other functions, ExtractedOnly mode uses other functions
Adding gsm_explode0 other functions, ExtractedOnly mode uses other functions
Adding gsm_implode0 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:274
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
Transformation_to_Log_Area_Ratios0
Gsm_Short_Term_Synthesis_Filter
linear_input
length_okay0
Short_term_analysis_filtering1
Coefficients_27_39
Short_term_analysis_filtering
ok_to_replace
audio_init_input
Gsm_RPE_Encoding
Gsm_Long_Term_Synthesis_Filtering
process_encode0
Weighting_filter0
gsm_asr
Coefficients_40_1590
process_decode0
Gsm_Long_Term_Predictor0
open_input
open_output2
gsm_L_sub1
gsm_L_asl2
Postprocessing0
Gsm_Coder1
endname0
gsm_debug_word0
open_output3
onintr0
version
Gsm_RPE_Encoding0
process1
gsm_norm0
APCM_quantization_xmaxc_to_exp_mant
Autocorrelation8
gsm_asr0
endname
gsm_debug_words
Coefficients_40_159
gsm_mult_r0
Reflection_coefficients5
Gsm_Coder
APCM_quantization4
normalname0
gsm_L_mult
gsm_asl
generic_init
Autocorrelation3
help
APCM_quantization7
process0
gsm_L_asl0
grok_format
Autocorrelation11
Reflection_coefficients3
gsm_debug_longwords0
catch_signals0
open_input0
parse_argv00
Gsm_Long_Term_Synthesis_Filtering2
process7
Calculation_of_the_LTP_parameters5
audio_init_input0
process4
Gsm_Decoder
RPE_grid_selection5
RPE_grid_selection0
Decoding_of_the_coded_Log_Area_Ratios
Coefficients_13_26
Gsm_RPE_Decoding
grok_format0
Calculation_of_the_LTP_parameters
Gsm_Coder0
gsm_div0
open_output0
gsm_L_add0
Short_term_synthesis_filtering
Autocorrelation13
suffix
gsm_asl1
APCM_inverse_quantization
gsm_L_asl
alaw_input1
Transformation_to_Log_Area_Ratios3
APCM_quantization0
ulaw_output0
gsm_mult0
open_output4
normalname2
Calculation_of_the_LTP_parameters9
gsm_decode
Reflection_coefficients2
RPE_grid_positioning0
APCM_quantization_xmaxc_to_exp_mant0
Autocorrelation
update_mode
Long_term_analysis_filtering0
RPE_grid_positioning
gsm_abs
RPE_grid_positioning1
gsm_L_asl1
gsm_L_asr1
open_output
gsm_destroy
open_input4
Coefficients_27_390
LARp_to_rp
Short_term_synthesis_filtering0
gsm_implode0
gsm_debug_words0
gsm_debug_longword
Postprocessing
Autocorrelation0
Calculation_of_the_LTP_parameters6
alaw_output
gsm_L_sub
Reflection_coefficients0
Weighting_filter
RPE_grid_positioning2
Coefficients_13_260
Gsm_Preprocess
ulaw_input2
ok_to_replace1
APCM_quantization3
Calculation_of_the_LTP_parameters10
length_okay
Autocorrelation14
APCM_quantization_xmaxc_to_exp_mant2
gsm_L_add
Autocorrelation7
gsm_L_asr
gsm_L_asr2
onintr1
process2
process5
Reflection_coefficients
ulaw_output
RPE_grid_selection
alaw_input0
Transformation_to_Log_Area_Ratios
normalname3
Calculation_of_the_LTP_parameters0
RPE_grid_selection3
help0
Calculation_of_the_LTP_parameters1
alaw_output0
gsm_create
gsm_implode
gsm_debug_word
gsm_L_sub0
RPE_grid_positioning4
catch_signals
gsm_asr2
set_format
Autocorrelation1
Gsm_LPC_Analysis0
Reflection_coefficients7
Long_term_analysis_filtering3
Autocorrelation2
Reflection_coefficients6
gsm_norm
RPE_grid_positioning3
okay_as_input
Coefficients_40_1591
Long_term_analysis_filtering
Short_term_analysis_filtering0
APCM_inverse_quantization0
APCM_quantization_xmaxc_to_exp_mant4
gsm_debug_longwords
ulaw_input
Gsm_Long_Term_Synthesis_Filtering0
version0
gsm_L_add1
APCM_quantization6
APCM_quantization2
process3
Coefficients_0_120
Calculation_of_the_LTP_parameters4
gsm_debug_words2
gsm_sub
gsm_div1
process_encode
ulaw_input1
gsm_asl2
RPE_grid_selection4
open_input2
parse_argv0
gsm_debug_longwords2
Calculation_of_the_LTP_parameters11
Long_term_analysis_filtering2
APCM_quantization_xmaxc_to_exp_mant1
plainname
update_times0
ok_to_replace0
Quantization_and_coding
get_u32
audio_init_output
Calculation_of_the_LTP_parameters3
Transformation_to_Log_Area_Ratios1
Reflection_coefficients1
process6
Gsm_Long_Term_Predictor
Autocorrelation5
Calculation_of_the_LTP_parameters2
put_u32
Gsm_RPE_Decoding0
APCM_quantization1
Gsm_LPC_Analysis
emalloc
Autocorrelation6
open_input1
alaw_input2
APCM_quantization_xmaxc_to_exp_mant3
Autocorrelation4
gsm_asl0
Autocorrelation15
open_output1
Gsm_Short_Term_Analysis_Filter
main
gsm_debug_longword0
gsm_debug_longwords1
open_input3
gsm_asr1
emalloc0
normalname1
gsm_L_asr0
gsm_mult_r
gsm_div2
onintr
ulaw_input0
Long_term_analysis_filtering1
RPE_grid_selection1
Coefficients_0_12
process_decode
APCM_quantization
APCM_quantization5
Autocorrelation10
normalname
gsm_option
update_own0
Autocorrelation9
prepare_io
gsm_mult
codename
Autocorrelation12
main0
gsm_div
gsm_explode
okay_as_input0
Reflection_coefficients4
alaw_input
get_u320
LARp_to_rp0
update_mode0
Reflection_coefficients8
Short_term_analysis_filtering2
update_times
linear_output
Calculation_of_the_LTP_parameters7
gsm_encode
gsm_explode0
okay_as_input1
ok_to_replace2
Transformation_to_Log_Area_Ratios2
gsm_print
RPE_grid_selection2
Calculation_of_the_LTP_parameters8
set_format0
gsm_add
update_own
Gsm_Long_Term_Synthesis_Filtering1
Gsm_Decoder0
process
gsm_debug_words1
Short_term_synthesis_filtering1
Autocorrelation16
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 274 function, while filter count is 137
Functions called in loop
Function call numbers
parse_argv0 -- 1
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 260
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 261
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @optind = external global i32, align 4 in:   store i32 %or, i32* @f_precious, align 4, !control_dep_instr !12, !data_dep_instr !8 off: 0
No reaching definition for: @stdout = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %S = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %S.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %R = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %R.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_common_0_3.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_temp.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %i.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp3 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp3.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp1 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp1.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %temp2 = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %temp2.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i16, align 2, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_denum = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_denum.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %L_num = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %L_num.el = alloca i64, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sp.el = alloca i16*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %sl.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %scalauto = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %scalauto.el = alloca i16, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %c.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %reply = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %reply.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: linear_input
DEF-USE: no information for: linear_output
DEF-USE: no information for: generic_init
DEF-USE: no information for: alaw_input
DEF-USE: no information for: alaw_output
DEF-USE: no information for: audio_init_output
DEF-USE: no information for: ulaw_input
DEF-USE: no information for: ulaw_output
DEF-USE: no information for: audio_init_input
No reaching definition for:   %tmp = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %tmp.el = alloca i8*, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 in:   %retval.el = alloca i32, !input_dep_instr !8, !control_dep_instr !9, !data_dep_instr !10 off: 0
DEF-USE: no information for: onintr
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 137
 Skipping function per FilterFunctionPass:generic_init
Collecting defining blocks for main
Collecting defining blocks for parse_argv0
 Skipping function per FilterFunctionPass:set_format
 Skipping function per FilterFunctionPass:version
Collecting defining blocks for help
 Skipping function per FilterFunctionPass:onintr
 Skipping function per FilterFunctionPass:catch_signals
Collecting defining blocks for process
 Skipping function per FilterFunctionPass:open_input
 Skipping function per FilterFunctionPass:open_output
 Skipping function per FilterFunctionPass:process_decode
 Skipping function per FilterFunctionPass:process_encode
Collecting defining blocks for update_times
 Skipping function per FilterFunctionPass:update_mode
Collecting defining blocks for update_own
Collecting defining blocks for plainname
Collecting defining blocks for codename
 Skipping function per FilterFunctionPass:length_okay
 Skipping function per FilterFunctionPass:ok_to_replace
 Skipping function per FilterFunctionPass:endname
Collecting defining blocks for normalname
Collecting defining blocks for emalloc
 Skipping function per FilterFunctionPass:suffix
Collecting defining blocks for okay_as_input
Collecting defining blocks for grok_format
 Skipping function per FilterFunctionPass:prepare_io
 Skipping function per FilterFunctionPass:linear_input
 Skipping function per FilterFunctionPass:linear_output
 Skipping function per FilterFunctionPass:ulaw_input
 Skipping function per FilterFunctionPass:ulaw_output
Collecting defining blocks for alaw_input
Collecting defining blocks for alaw_output
 Skipping function per FilterFunctionPass:audio_init_input
Collecting defining blocks for get_u32
Collecting defining blocks for audio_init_output
 Skipping function per FilterFunctionPass:put_u32
Collecting defining blocks for gsm_add
Collecting defining blocks for gsm_sub
Collecting defining blocks for gsm_mult
 Skipping function per FilterFunctionPass:gsm_mult_r
Skip. No dependence graph for function gsm_abs
 Skipping function per FilterFunctionPass:gsm_L_mult
Skip. No dependence graph for function gsm_L_add
 Skipping function per FilterFunctionPass:gsm_L_sub
Collecting defining blocks for gsm_norm
Skip. No dependence graph for function gsm_L_asl
 Skipping function per FilterFunctionPass:gsm_L_asr
 Skipping function per FilterFunctionPass:gsm_asl
 Skipping function per FilterFunctionPass:gsm_asr
 Skipping function per FilterFunctionPass:gsm_div
 Skipping function per FilterFunctionPass:Gsm_Coder
 Skipping function per FilterFunctionPass:Gsm_Preprocess
Collecting defining blocks for Gsm_LPC_Analysis
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Analysis_Filter
Collecting defining blocks for Gsm_Long_Term_Predictor
 Skipping function per FilterFunctionPass:Gsm_RPE_Encoding
 Skipping function per FilterFunctionPass:Weighting_filter
Collecting defining blocks for RPE_grid_selection
 Skipping function per FilterFunctionPass:APCM_quantization
Collecting defining blocks for APCM_inverse_quantization
Collecting defining blocks for RPE_grid_positioning
 Skipping function per FilterFunctionPass:APCM_quantization_xmaxc_to_exp_mant
Collecting defining blocks for Calculation_of_the_LTP_parameters
Collecting defining blocks for Long_term_analysis_filtering
 Skipping function per FilterFunctionPass:Decoding_of_the_coded_Log_Area_Ratios
 Skipping function per FilterFunctionPass:Coefficients_0_12
 Skipping function per FilterFunctionPass:LARp_to_rp
Collecting defining blocks for Short_term_analysis_filtering
Collecting defining blocks for Coefficients_13_26
Collecting defining blocks for Coefficients_27_39
 Skipping function per FilterFunctionPass:Coefficients_40_159
Collecting defining blocks for Autocorrelation
Collecting defining blocks for Reflection_coefficients
 Skipping function per FilterFunctionPass:Transformation_to_Log_Area_Ratios
Collecting defining blocks for Quantization_and_coding
 Skipping function per FilterFunctionPass:gsm_debug_words
Skip. No dependence graph for function gsm_debug_longwords
Skip. No dependence graph for function gsm_debug_longword
Skip. No dependence graph for function gsm_debug_word
 Skipping function per FilterFunctionPass:Gsm_Decoder
Collecting defining blocks for Gsm_RPE_Decoding
Collecting defining blocks for Gsm_Long_Term_Synthesis_Filtering
Collecting defining blocks for Gsm_Short_Term_Synthesis_Filter
 Skipping function per FilterFunctionPass:Postprocessing
Collecting defining blocks for Short_term_synthesis_filtering
Collecting defining blocks for gsm_destroy
Collecting defining blocks for gsm_decode
 Skipping function per FilterFunctionPass:gsm_encode
 Skipping function per FilterFunctionPass:gsm_explode
 Skipping function per FilterFunctionPass:gsm_implode
 Skipping function per FilterFunctionPass:gsm_create
Skip. No dependence graph for function gsm_print
 Skipping function per FilterFunctionPass:gsm_option
 Skipping function per FilterFunctionPass:generic_init
 Processing function:main
Short range hashing enabled.
Processing path: entry  while.cond  while.body  sw.default  
After path modifications process path is empty
Processing path: entry  sw.default  
After path modifications process path
entry  sw.default  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle input dependent load operand Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Processing path: entry  while.cond  while.body  sw.bb  
After path modifications process path
sw.bb  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_decode, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.epilog  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb1  
After path modifications process path
sw.bb1  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_force, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb2  
After path modifications process path
sw.bb2  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_cat, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb3  
After path modifications process path
sw.bb3  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_precious, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb4  
After path modifications process path
sw.bb4  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_fast, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb5  
After path modifications process path
sw.bb5  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  store i32 1, i32* @f_verbose, align 4, !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb6  
After path modifications process path
sw.bb6  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_ulaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_ulaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb7  
After path modifications process path
sw.bb7  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_linear = global %struct.fmtdesc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @linear_input, i32 (i16*)* @linear_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_linear), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb8  
After path modifications process path
sw.bb8  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_alaw = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i32 ()* @generic_init, i32 ()* @generic_init, i32 (i16*)* @alaw_input, i32 (i16*)* @alaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_alaw), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb9  
After path modifications process path
sw.bb9  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !13, !data_indep_instr !11
  call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand @f_audio = global %struct.fmtdesc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 ()* @audio_init_input, i32 ()* @audio_init_output, i32 (i16*)* @ulaw_input, i32 (i16*)* @ulaw_output }, align 8 of the call   call void @set_format(%struct.fmtdesc* @f_audio), !control_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb10  
After path modifications process path is empty
Processing path: entry  sw.bb10  
After path modifications process path
entry  sw.bb10  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.body  sw.bb11  
After path modifications process path is empty
Processing path: entry  sw.bb11  
After path modifications process path
entry  sw.bb11  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand void (...)* bitcast (void ()* @onintr to void (...)*) of the call   call void @catch_signals(void (...)* bitcast (void ()* @onintr to void (...)*)), !control_dep_instr !13, !data_indep_instr !11
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.end  if.else  while.cond15  while.body16  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  if.else  
After path modifications process path is empty
Processing path: entry  while.end  if.else  
After path modifications process path
entry  while.end  if.else  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  while.end  if.else  while.cond15  while.end18  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  if.else  while.end18  
After path modifications process path is empty
Processing path: entry  while.end  if.else  while.end18  
After path modifications process path
entry  while.end  if.else  while.end18  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
 Processing function:parse_argv0
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  cond.end  if.end  land.lhs.true  if.then8  
After path modifications process path
entry  cond.end  if.end  land.lhs.true  if.then8  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Processing path: entry  cond.end  if.end  if.end9  
After path modifications process path
entry  cond.end  if.end  if.end9  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion skipped because there was no hash update in between!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  cond.end  if.then  
After path modifications process path
entry  cond.end  if.then  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Insert assertion evaluating function:parse_argv0 callsites detected =1
Insert assertion included function:parse_argv0 because it is not in the skip  assert list!
No oh has been applied in the path
 Skipping function per FilterFunctionPass:set_format
 Skipping function per FilterFunctionPass:version
 Processing function:help
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
No oh has been applied in the path
 Skipping function per FilterFunctionPass:onintr
 Skipping function per FilterFunctionPass:catch_signals
 Processing function:process
Short range hashing enabled.
Processing path: entry  lor.lhs.false  if.end  cond.true  
After path modifications process path
entry  lor.lhs.false  if.end  cond.true  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.true12  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.end14  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.true10  cond.false13  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.end22  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.true18  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.end20  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.then6  cond.false16  cond.false19  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.then30  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.true38  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.true43  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.end45  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.end40  cond.false44  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  if.then36  cond.false39  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.then53  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.then57  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.then50  if.end55  if.end58  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.then73  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  if.end71  if.end74  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.then68  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.then61  land.lhs.true  if.then65  if.end70  
Processing path: entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
After path modifications process path
entry  lor.lhs.false  if.end  cond.end  if.end25  if.end31  lor.lhs.false33  if.end48  if.end59  if.end75  
Processing path: entry  lor.lhs.false  if.end  cond.false  
After path modifications process path
entry  lor.lhs.false  if.end  cond.false  
Processing path: entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
After path modifications process path
entry  err  land.lhs.true77  if.then79  land.lhs.true83  land.lhs.true86  if.then89  
Processing path: entry  err  land.lhs.true77  if.then79  if.end91  
After path modifications process path
entry  err  land.lhs.true77  if.then79  if.end91  
Processing path: entry  err  if.end92  land.lhs.true94  if.then96  
After path modifications process path
entry  err  if.end92  land.lhs.true94  if.then96  
Processing path: entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
After path modifications process path
entry  err  if.end92  if.end98  land.lhs.true100  if.then102  
Processing path: entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  land.lhs.true105  if.then107  
Processing path: entry  err  if.end92  if.end98  if.end103  if.end108  
After path modifications process path
entry  err  if.end92  if.end98  if.end103  if.end108  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Skipping function per FilterFunctionPass:open_input
 Skipping function per FilterFunctionPass:open_output
 Skipping function per FilterFunctionPass:process_decode
 Skipping function per FilterFunctionPass:process_encode
 Processing function:update_times
Short range hashing enabled.
Processing path: entry  if.end  if.then2  
After path modifications process path
entry  if.end  if.then2  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Skipping function per FilterFunctionPass:update_mode
 Processing function:update_own
Short range hashing enabled.
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:plainname
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:codename
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:length_okay
 Skipping function per FilterFunctionPass:ok_to_replace
 Skipping function per FilterFunctionPass:endname
 Processing function:normalname
Short range hashing enabled.
Processing path: entry  if.end  if.then9  
After path modifications process path
entry  if.end  if.then9  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %want.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname1(i8** %want.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname1(i8** %want.addr, i8** %s), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end17  
After path modifications process path
entry  if.end  if.end17  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname3(i8** %retval, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname3(i8** %retval, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.else  land.lhs.true  if.then14  
After path modifications process path
entry  if.end  if.else  land.lhs.true  if.then14  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing call instruction..
Can't handle this operand   %want.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname2(i8** %want.addr, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @normalname2(i8** %want.addr, i8** %p), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.else  if.end16  
After path modifications process path
entry  if.end  if.else  if.end16  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 i8*
 Processing function:emalloc
Short range hashing enabled.
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %len.addr = alloca i64, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @emalloc0(i64* %len.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
 Skipping function per FilterFunctionPass:suffix
 Processing function:okay_as_input
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %name.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @okay_as_input0(i8** %name.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  if.end6  land.lhs.true  land.lhs.true8  if.then10  
After path modifications process path
entry  if.end  if.end6  land.lhs.true  land.lhs.true8  if.then10  
Processing path: entry  if.end  if.end6  if.end15  
After path modifications process path
entry  if.end  if.end6  if.end15  
Processing path: entry  if.end  if.then4  
After path modifications process path
entry  if.end  if.then4  
Processing call instruction..
Can't handle this operand   %name.addr = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @okay_as_input1(i8** %name.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
 Processing function:grok_format
Short range hashing enabled.
Processing path: entry  if.then  for.cond  for.body  land.lhs.true  land.lhs.true5  if.then9  
After path modifications process path
for.body  land.lhs.true  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.then  if.then9  
After path modifications process path
entry  if.then  if.then9  
Processing path: entry  if.then  for.cond  for.body  if.end  for.inc  
After path modifications process path
for.body  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.then  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.then  for.end  
After path modifications process path
entry  if.then  for.end  
Processing call instruction..
Can't handle this operand   %c = alloca i8*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @grok_format0(i8** %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end10  
After path modifications process path
entry  if.end10  
Non numeric pointers (int and float) are skipped:  %retval = alloca %struct.fmtdesc*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 %struct.fmtdesc*
 Skipping function per FilterFunctionPass:prepare_io
 Skipping function per FilterFunctionPass:linear_input
 Skipping function per FilterFunctionPass:linear_output
 Skipping function per FilterFunctionPass:ulaw_input
 Skipping function per FilterFunctionPass:ulaw_output
 Processing function:alaw_input
Short range hashing enabled.
Processing path: entry  for.cond  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !8, !data_indep_instr !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  land.end  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12
  call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %buf.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %c = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input0(i32* %i, i16** %buf.addr, i32* %c), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  land.end  for.end  land.lhs.true  if.then  
After path modifications process path is empty
Processing path: entry  for.end  land.lhs.true  if.then  
After path modifications process path
entry  for.end  land.lhs.true  if.then  
Processing path: entry  for.cond  land.end  for.end  return  
After path modifications process path is empty
Processing path: entry  for.end  return  
After path modifications process path
entry  for.end  return  
Processing path: entry  for.cond  land.end  for.end  if.end  
After path modifications process path is empty
Processing path: entry  for.end  if.end  
After path modifications process path
entry  for.end  if.end  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input2(i32* %retval, i32* %i), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @alaw_input2(i32* %retval, i32* %i), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
 Processing function:alaw_output
Short range hashing enabled.
Processing path: entry  for.cond  for.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  for.cond  for.body  if.end  for.inc  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:audio_init_input
 Processing function:get_u32
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false5  lor.lhs.false11  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false5  lor.lhs.false11  if.end  
Processing call instruction..
Can't handle this operand   %up.addr = alloca i64*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @get_u320(i64** %up.addr, i32* %i, i64* %u), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @get_u320(i64** %up.addr, i32* %i, i64* %u), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Can't handle this operand   %u = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @get_u320(i64** %up.addr, i32* %i, i64* %u), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
 Processing function:audio_init_output
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false5  lor.lhs.false8  lor.lhs.false11  lor.lhs.false14  lor.lhs.false17  if.end  
 Skipping function per FilterFunctionPass:put_u32
 Processing function:gsm_add
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end7  
After path modifications process path
entry  cond.end7  
Processing path: entry  cond.false  cond.true5  
After path modifications process path
entry  cond.false  cond.true5  
Processing path: entry  cond.false  cond.end  
After path modifications process path
entry  cond.false  cond.end  
Processing path: entry  cond.false  cond.false6  
After path modifications process path
entry  cond.false  cond.false6  
 Processing function:gsm_sub
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end7  
After path modifications process path
entry  cond.end7  
Processing path: entry  cond.false  cond.true5  
After path modifications process path
entry  cond.false  cond.true5  
Processing path: entry  cond.false  cond.end  
After path modifications process path
entry  cond.false  cond.end  
Processing path: entry  cond.false  cond.false6  
After path modifications process path
entry  cond.false  cond.false6  
 Processing function:gsm_mult
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Skipping function per FilterFunctionPass:gsm_mult_r
Skip. No dependence graph for function gsm_abs
 Skipping function per FilterFunctionPass:gsm_L_mult
Skip. No dependence graph for function gsm_L_add
 Skipping function per FilterFunctionPass:gsm_L_sub
 Processing function:gsm_norm
Short range hashing enabled.
Processing path: entry  cond.true  cond.end  if.then  if.then3  
After path modifications process path
entry  cond.true  cond.end  if.then  if.then3  
Processing path: entry  cond.true  cond.end  if.then  if.end  
After path modifications process path
entry  cond.true  cond.end  if.then  if.end  
Processing path: entry  cond.true  cond.end  return  
After path modifications process path
entry  cond.true  cond.end  return  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.true8  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.end16  
Processing path: entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.true5  cond.false10  
Processing path: entry  cond.true  cond.end  if.end4  cond.end33  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.end33  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.true20  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.end31  
Processing path: entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
After path modifications process path
entry  cond.true  cond.end  if.end4  cond.false17  cond.false26  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
Skip. No dependence graph for function gsm_L_asl
 Skipping function per FilterFunctionPass:gsm_L_asr
 Skipping function per FilterFunctionPass:gsm_asl
 Skipping function per FilterFunctionPass:gsm_asr
 Skipping function per FilterFunctionPass:gsm_div
 Skipping function per FilterFunctionPass:Gsm_Coder
 Skipping function per FilterFunctionPass:Gsm_Preprocess
 Processing function:Gsm_LPC_Analysis
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %LARc.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_LPC_Analysis0(i16** %LARc.addr, i16** %s.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_LPC_Analysis0(i16** %LARc.addr, i16** %s.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
No oh has been applied in the path
 Skipping function per FilterFunctionPass:Gsm_Short_Term_Analysis_Filter
 Processing function:Gsm_Long_Term_Predictor
Short range hashing enabled.
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.true18  cond.end20  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.true18  cond.end20  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.false19  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.true14  cond.end16  cond.false19  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.false15  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.true10  cond.end12  cond.false15  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.false11  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.true6  cond.end8  cond.false11  
Processing path: entry  cond.true  cond.end  cond.true2  cond.end4  cond.false7  
After path modifications process path
entry  cond.true  cond.end  cond.true2  cond.end4  cond.false7  
Processing path: entry  cond.true  cond.end  cond.false3  
After path modifications process path
entry  cond.true  cond.end  cond.false3  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Skipping function per FilterFunctionPass:Gsm_RPE_Encoding
 Skipping function per FilterFunctionPass:Weighting_filter
 Processing function:RPE_grid_selection
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %x.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_common_0_3 = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_temp = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection0(i16** %x.addr, i64* %L_common_0_3, i64* %L_temp, i64* %EM, i64* %L_result), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  if.end  if.then235  
After path modifications process path
entry  if.end  if.then235  
Processing path: entry  if.end  if.end236  if.then246  
After path modifications process path
entry  if.end  if.end236  if.then246  
Processing call instruction..
Can't handle this operand   %EM = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection3(i64* %EM, i64* %L_result, i16* %Mc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  if.end  if.end236  if.end247  
After path modifications process path
entry  if.end  if.end236  if.end247  
Processing path: entry  if.end  if.end236  if.end247  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  if.end236  if.end247  for.end  
After path modifications process path
entry  if.end  if.end236  if.end247  for.end  
Processing call instruction..
Can't handle this operand   %Mc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @RPE_grid_selection5(i16** %Mc_out.addr, i16* %Mc), !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
 Skipping function per FilterFunctionPass:APCM_quantization
 Processing function:APCM_inverse_quantization
Short range hashing enabled.
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  land.lhs.true23  cond.true27  cond.end29  cond.true42  
After path modifications process path
cond.true15  cond.true27  cond.end29  cond.true42  
Hash path invariants only
Invariants are
  br label %cond.end47, !control_dep_instr !8, !data_indep_instr !12
  br label %cond.end29, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  land.lhs.true23  cond.true27  cond.end29  cond.end47  
After path modifications process path
cond.true15  cond.true27  cond.end29  
Hash path invariants only
Invariants are
  br label %cond.end29, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  land.lhs.true23  cond.true27  cond.end29  cond.false46  
After path modifications process path
cond.true15  cond.true27  cond.end29  cond.false46  
Hash path invariants only
Invariants are
  br label %cond.end47, !control_dep_instr !8, !data_indep_instr !12
  br label %cond.end29, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  land.lhs.true11  cond.true15  cond.end17  cond.false28  
After path modifications process path
cond.true15  
Hash path invariants only
Invariants are
  br label %cond.end17, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !11
Processing path: entry  land.lhs.true  cond.true  cond.end  cond.false28  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  cond.false28  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.body  cond.false16  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  cond.false16  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  cond.false16  
Processing path: entry  land.lhs.true  cond.true  cond.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  for.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  for.end  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Processing function:RPE_grid_positioning
Short range hashing enabled.
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.epilog  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.epilog  while.end  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb6  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb6  
Processing path: entry  land.lhs.true  cond.true  cond.end  do.body  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  do.body  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb8  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb8  
Processing path: entry  land.lhs.true  cond.true  cond.end  sw.bb10  do.cond  do.end  
After path modifications process path
entry  land.lhs.true  cond.true  cond.end  sw.bb10  do.cond  do.end  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Skipping function per FilterFunctionPass:APCM_quantization_xmaxc_to_exp_mant
 Processing function:Calculation_of_the_LTP_parameters
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  cond.true6  
After path modifications process path
for.body  cond.true  cond.true6  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.end  
After path modifications process path
for.body  cond.true  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.false  
After path modifications process path
for.body  cond.true  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  if.then  
After path modifications process path
for.body  cond.end10  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Calculation_of_the_LTP_parameters0(i16* %dmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %dmax = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters0(i16* %dmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters0(i16* %dmax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end10  if.end  for.inc  
After path modifications process path
for.body  cond.end10  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false8  
After path modifications process path
for.body  cond.false8  
Hash path invariants only
Invariants are
  br label %cond.end10, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  if.then20  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.then20  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.then20  
Processing path: entry  for.end  if.then20  
After path modifications process path
entry  for.end  if.then20  
Processing path: entry  for.cond  for.end  if.end28  if.then32  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.then32  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.then32  
Processing path: entry  for.end  if.end28  if.then32  
After path modifications process path
entry  for.end  if.end28  if.then32  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.body47  for.inc55  
After path modifications process path
for.body47  
Hash path invariants only
Invariants are
  br label %for.inc55, !control_dep_instr !8, !data_indep_instr !12
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.body61  if.then421  
After path modifications process path
for.body61  if.then421  
Hash path invariants only
Invariants are
  %arrayidx311 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 28, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx302 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 27, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx293 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 26, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx284 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 25, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx410 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 39, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx275 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 24, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx401 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 38, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx266 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 23, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx392 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 37, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx257 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 22, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx62 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !14
  %arrayidx383 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 36, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx248 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 21, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx69 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx365 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 34, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx230 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 19, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx140 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 9, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx77 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 2, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx374 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 35, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx239 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 20, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx86 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 3, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx149 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 10, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx95 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 4, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx158 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 11, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx104 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 5, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx167 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 12, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx113 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 6, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx176 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 13, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx320 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 29, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx122 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 7, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx185 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 14, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx329 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 30, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx131 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 8, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx194 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 15, !control_dep_instr !8, !data_dep_instr !9
  call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
  %arrayidx338 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 31, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx203 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 16, !control_dep_instr !8, !data_dep_instr !9
  br label %if.end423, !control_dep_instr !8, !data_indep_instr !12
  %arrayidx347 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 32, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx212 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 17, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx356 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 33, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx221 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 18, !control_dep_instr !8, !data_dep_instr !9
Processing call instruction..
Can't handle this operand   %L_max = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %L_result = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %Nc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %lambda = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters4(i64* %L_max, i64* %L_result, i16* %Nc, i32* %lambda), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.body61  if.end423  for.inc424  
After path modifications process path
for.body61  if.end423  
Hash path invariants only
Invariants are
  br label %for.inc424, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
  %arrayidx311 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 28, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx302 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 27, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx293 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 26, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx284 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 25, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx275 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 24, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx167 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 12, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx401 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 38, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx266 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 23, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx158 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 11, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx392 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 37, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx257 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 22, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx131 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 8, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx230 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 19, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx104 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 5, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx149 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 10, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx383 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 36, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx248 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 21, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx122 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 7, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx69 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx194 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 15, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx365 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 34, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx77 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 2, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx203 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 16, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx140 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 9, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx374 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 35, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx239 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 20, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx113 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 6, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx86 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 3, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx212 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 17, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx95 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 4, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx221 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 18, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx410 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 39, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx176 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 13, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx320 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 29, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx62 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !14
  %arrayidx185 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 14, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx329 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 30, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx338 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 31, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx347 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 32, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx356 = getelementptr inbounds [40 x i16], [40 x i16]* %wt, i64 0, i64 33, !control_dep_instr !8, !data_dep_instr !9
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.body453  for.inc463  
After path modifications process path
for.body453  
Hash path invariants only
Invariants are
  br label %for.inc463, !control_dep_instr !8, !data_indep_instr !12
  call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %L_power = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %dp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %Nc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters6(i64* %L_power, i16** %dp.addr, i16* %Nc, i32* %k), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.then469  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
Processing call instruction..
Can't handle this operand   %bc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters8(i16** %bc_out.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.then469  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  return  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  return  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.then473  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.then473  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.cond486  for.body490  if.then498  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.end474  if.then498  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
Processing call instruction..
Can't handle this operand   %S = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %L_power = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %L_max = alloca i64, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %R = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters9(i16* %S, i64* %L_power, i16* %temp, i64* %L_max, i16* %R), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  if.then498  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.cond486  for.body490  if.end499  for.inc500  
After path modifications process path
if.end499  
Hash path invariants only
Invariants are
  br label %for.inc500, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.end474  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.cond486  for.end502  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.cond450  for.end465  if.end470  if.end474  for.end502  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
Processing call instruction..
Can't handle this operand   %bc_out.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters11(i16** %bc_out.addr, i16* %bc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %bc = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters11(i16** %bc_out.addr, i16* %bc), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  land.lhs.true443  cond.true447  cond.end449  for.end465  if.end470  if.end474  for.end502  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  land.lhs.true  cond.true434  cond.end436  cond.false448  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.cond44  for.end57  for.end426  cond.false435  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.cond58  for.end426  cond.false435  
After path modifications process path is empty
Processing path: entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.true41  cond.end43  for.end57  for.end426  cond.false435  
Processing path: entry  for.cond  for.end  if.end28  if.end37  cond.false42  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.false42  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.end37  cond.false42  
Processing path: entry  for.end  if.end28  if.end37  cond.false42  
After path modifications process path
entry  for.end  if.end28  if.end37  cond.false42  
Processing path: entry  for.cond  for.end  if.end28  if.else33  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.else33  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.end28  if.else33  
Processing call instruction..
Can't handle this operand   %scal = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters2(i16* %scal, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Calculation_of_the_LTP_parameters2(i16* %scal, i16* %temp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end28  if.else33  
After path modifications process path
entry  for.end  if.end28  if.else33  
Processing path: entry  for.cond  for.end  if.else  cond.true24  cond.end26  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.true24  cond.end26  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.true24  cond.end26  
Processing path: entry  for.end  if.else  cond.true24  cond.end26  
After path modifications process path
entry  for.end  if.else  cond.true24  cond.end26  
Processing path: entry  for.cond  for.end  if.else  cond.false25  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.false25  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end10  if.end  for.inc  for.end  if.else  cond.false25  
Processing path: entry  for.end  if.else  cond.false25  
After path modifications process path
entry  for.end  if.else  cond.false25  
 Processing function:Long_term_analysis_filtering
Short range hashing enabled.
Processing path: entry  sw.epilog  
After path modifications process path
entry  sw.epilog  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end20, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.end20  for.inc  
After path modifications process path
for.body  cond.end20  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.false  cond.true18  
After path modifications process path
for.body  cond.false  cond.true18  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.false  cond.end  
After path modifications process path
for.body  cond.false  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end20, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.body  cond.false  cond.false19  
After path modifications process path
for.body  cond.false  cond.false19  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb  
After path modifications process path
entry  sw.bb  
No oh has been applied in the path
Processing path: entry  sw.bb  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  sw.bb  for.end  
After path modifications process path
entry  sw.bb  for.end  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.true50  
After path modifications process path
for.body29  cond.true50  
Hash path invariants only
Invariants are
  br label %cond.end58, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.end58  for.inc63  
After path modifications process path
for.body29  cond.end58  
Hash path invariants only
Invariants are
  br label %for.inc63, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.false51  cond.true54  
After path modifications process path
for.body29  cond.false51  cond.true54  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.false51  cond.end56  
After path modifications process path
for.body29  cond.false51  cond.end56  
Hash path invariants only
Invariants are
  br label %cond.end58, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.body29  cond.false51  cond.false55  
After path modifications process path
for.body29  cond.false51  cond.false55  
Hash path invariants only
Invariants are
  br label %cond.end56, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb25  
After path modifications process path
entry  sw.bb25  
No oh has been applied in the path
Processing path: entry  sw.bb25  for.cond26  for.end65  
After path modifications process path is empty
Processing path: entry  sw.bb25  for.end65  
After path modifications process path
entry  sw.bb25  for.end65  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.true91  
After path modifications process path
for.body70  cond.true91  
Hash path invariants only
Invariants are
  br label %cond.end99, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.end99  for.inc104  
After path modifications process path
for.body70  cond.end99  
Hash path invariants only
Invariants are
  br label %for.inc104, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.false92  cond.true95  
After path modifications process path
for.body70  cond.false92  cond.true95  
Hash path invariants only
Invariants are
  br label %cond.end97, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.false92  cond.end97  
After path modifications process path
for.body70  cond.false92  cond.end97  
Hash path invariants only
Invariants are
  br label %cond.end99, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.body70  cond.false92  cond.false96  
After path modifications process path
for.body70  cond.false92  cond.false96  
Hash path invariants only
Invariants are
  br label %cond.end97, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb66  
After path modifications process path
entry  sw.bb66  
No oh has been applied in the path
Processing path: entry  sw.bb66  for.cond67  for.end106  
After path modifications process path is empty
Processing path: entry  sw.bb66  for.end106  
After path modifications process path
entry  sw.bb66  for.end106  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.true132  
After path modifications process path
for.body111  cond.true132  
Hash path invariants only
Invariants are
  br label %cond.end140, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.end140  for.inc145  
After path modifications process path
for.body111  cond.end140  
Hash path invariants only
Invariants are
  br label %for.inc145, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.false133  cond.true136  
After path modifications process path
for.body111  cond.false133  cond.true136  
Hash path invariants only
Invariants are
  br label %cond.end138, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.false133  cond.end138  
After path modifications process path
for.body111  cond.false133  cond.end138  
Hash path invariants only
Invariants are
  br label %cond.end140, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.body111  cond.false133  cond.false137  
After path modifications process path
for.body111  cond.false133  cond.false137  
Hash path invariants only
Invariants are
  br label %cond.end138, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11
Processing path: entry  sw.bb107  
After path modifications process path
entry  sw.bb107  
No oh has been applied in the path
Processing path: entry  sw.bb107  for.cond108  for.end147  
After path modifications process path is empty
Processing path: entry  sw.bb107  for.end147  
After path modifications process path
entry  sw.bb107  for.end147  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:Decoding_of_the_coded_Log_Area_Ratios
 Skipping function per FilterFunctionPass:Coefficients_0_12
 Skipping function per FilterFunctionPass:LARp_to_rp
 Processing function:Short_term_analysis_filtering
Short range hashing enabled.
Processing path: entry  for.cond2  for.body3  cond.true  
After path modifications process path
for.body3  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.end  cond.true32  
After path modifications process path
for.body3  cond.end  cond.true32  
Hash path invariants only
Invariants are
  br label %cond.end38, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.end  cond.end38  for.inc  
After path modifications process path
for.body3  cond.end  cond.end38  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.end  cond.false37  
After path modifications process path
for.body3  cond.end  cond.false37  
Hash path invariants only
Invariants are
  br label %cond.end38, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body3  cond.false  
After path modifications process path
for.body3  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  for.cond  for.body  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  for.body  for.end  for.inc41  
After path modifications process path
for.body  for.end  
Hash path invariants only
Invariants are
  br label %for.inc41, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_analysis_filtering1(i16** %s.addr, i16* %di), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond2, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sav = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering0(i32* %i, i16* %sav, i16* %di, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering1(i16** %s.addr, i16* %di), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %di = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_analysis_filtering1(i16** %s.addr, i16* %di), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.end42  
After path modifications process path is empty
Processing path: entry  for.end42  
After path modifications process path
entry  for.end42  
No oh has been applied in the path
 Processing function:Coefficients_13_26
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  for.inc  
After path modifications process path
for.body  cond.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_13_260(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_13_260(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j_1.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_13_260(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:Coefficients_27_39
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.true20  
After path modifications process path
for.body  cond.end  cond.true20  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.end26  for.inc  
After path modifications process path
for.body  cond.end  cond.end26  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  cond.false25  
After path modifications process path
for.body  cond.end  cond.false25  
Hash path invariants only
Invariants are
  br label %cond.end26, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end26  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %LARp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %LARpp_j_1.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Coefficients_27_390(i16** %LARp.addr, i16** %LARpp_j.addr, i16** %LARpp_j_1.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:Coefficients_40_159
 Processing function:Autocorrelation
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  cond.true8  
After path modifications process path
for.body  cond.true  cond.true8  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.end  
After path modifications process path
for.body  cond.true  cond.end  
Hash path invariants only
Invariants are
  br label %cond.end16, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.true  cond.false  
After path modifications process path
for.body  cond.true  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end16  if.then  
After path modifications process path
for.body  cond.end16  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
  call void @Autocorrelation0(i16* %smax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %smax = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation0(i16* %smax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %temp = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation0(i16* %smax, i16* %temp), !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end16  if.end  for.inc  
After path modifications process path
for.body  cond.end16  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !input_indep_block !6, !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false12  
After path modifications process path
for.body  cond.false12  
Hash path invariants only
Invariants are
  br label %cond.end16, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !12
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  if.then26  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.then26  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.then26  
Processing path: entry  for.end  if.then26  
After path modifications process path
entry  for.end  if.then26  
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.epilog  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.epilog  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.epilog  
Processing path: entry  for.end  if.end37  if.then41  sw.epilog  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.epilog  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  for.cond43  for.body46  for.inc53  
After path modifications process path
for.body46  
Hash path invariants only
Invariants are
  br label %for.inc53, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation2(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation2(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation2(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  for.cond43  for.end55  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb  for.end55  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  for.end55  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb  for.end55  
Processing path: entry  for.end  if.end37  if.then41  sw.bb  for.end55  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb  for.end55  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  for.cond57  for.body60  for.inc70  
After path modifications process path
for.body60  
Hash path invariants only
Invariants are
  br label %for.inc70, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation4(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation4(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation4(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb56  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb56  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  for.cond57  for.end72  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb56  for.end72  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  for.end72  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb56  for.end72  
Processing path: entry  for.end  if.end37  if.then41  sw.bb56  for.end72  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb56  for.end72  
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb73  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  for.cond74  for.body77  for.inc87  
After path modifications process path
for.body77  
Hash path invariants only
Invariants are
  br label %for.inc87, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation6(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation6(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation6(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb73  
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb73  for.end89  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  for.end89  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb73  for.end89  
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  for.cond74  for.end89  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.then41  sw.bb73  for.end89  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb73  for.end89  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  for.cond91  for.body94  for.inc104  
After path modifications process path
for.body94  
Hash path invariants only
Invariants are
  br label %for.inc104, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation8(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation8(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation8(i32* %k, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb90  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb90  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  for.cond91  for.end106  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.then41  sw.bb90  for.end106  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  for.end106  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.then41  sw.bb90  for.end106  
Processing path: entry  for.end  if.end37  if.then41  sw.bb90  for.end106  
After path modifications process path
entry  for.end  if.end37  if.then41  sw.bb90  for.end106  
Processing path: entry  for.cond  for.end  if.end37  if.end107  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  
Processing call instruction..
Can't handle this operand   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation10(i16** %sp, i16* %sl, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation10(i16** %sp, i16* %sl, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %s.addr = alloca i16*, align 8, !input_indep_block !6, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation10(i16** %sp, i16* %sl, i16** %s.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.body109  for.inc110  
After path modifications process path
for.body109  
Hash path invariants only
Invariants are
  br label %for.inc110, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.end107  
After path modifications process path
entry  for.end  if.end37  if.end107  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.body339  for.inc395  
After path modifications process path
for.body339  
Hash path invariants only
Invariants are
  br label %for.inc395, !control_dep_instr !8, !data_indep_instr !12
  call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %L_ACF.addr = alloca i64*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation13(i64** %L_ACF.addr, i16* %sl, i16** %sp), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  
Processing call instruction..
Can't handle this operand   %L_ACF.addr = alloca i64*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation12(i64** %L_ACF.addr, i16** %sp, i16* %sl), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sp = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation12(i64** %L_ACF.addr, i16** %sp, i16* %sl), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Can't handle this operand   %sl = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Autocorrelation12(i64** %L_ACF.addr, i16** %sp, i16* %sl), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.body401  for.inc402  
After path modifications process path
for.body401  
Hash path invariants only
Invariants are
  br label %for.inc402, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.cond417  for.body420  for.inc421  
After path modifications process path
for.body420  
Hash path invariants only
Invariants are
  br label %for.inc421, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.then410  cond.true414  cond.end416  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.cond417  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.then410  cond.true414  cond.end416  for.end427  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.then410  cond.false415  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.then410  cond.false415  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.then410  cond.false415  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.cond398  for.end406  if.end428  
After path modifications process path is empty
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
After path modifications process path
entry  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
Processing path: entry  for.end  if.end37  if.end107  for.cond108  for.end113  for.end397  for.end406  if.end428  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.end37  if.end107  for.end113  for.end397  for.end406  if.end428  
Processing path: entry  for.end  if.end37  if.end107  for.end113  for.cond336  for.end397  for.end406  if.end428  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.else  cond.true30  cond.end32  
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.true30  cond.end32  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.true30  cond.end32  
Processing path: entry  for.end  if.else  cond.true30  cond.end32  
After path modifications process path
entry  for.end  if.else  cond.true30  cond.end32  
Processing path: entry  for.cond  for.end  if.else  cond.false31  
Warning: No exit block for loop. The path may be malformed
Extended path is 
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.false31  
After path modifications process path
entry  for.cond  for.body  cond.end  cond.end16  if.end  for.inc  for.end  if.else  cond.false31  
Processing path: entry  for.end  if.else  cond.false31  
After path modifications process path
entry  for.end  if.else  cond.false31  
 Processing function:Reflection_coefficients
Short range hashing enabled.
Processing path: entry  if.then  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !argument_dep_instr !10, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.then  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.then  for.end  
After path modifications process path
entry  if.then  for.end  
Processing path: entry  for.end197  
After path modifications process path
entry  for.end197  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.body15  for.inc21  
After path modifications process path
for.body15  
Hash path invariants only
Invariants are
  br label %for.inc21, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.body26  for.inc31  
After path modifications process path
for.body26  
Hash path invariants only
Invariants are
  br label %for.inc31, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.body37  for.inc42  
After path modifications process path
for.body37  
Hash path invariants only
Invariants are
  br label %for.inc42, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.true53  cond.true57  
After path modifications process path
for.body48  cond.true53  cond.true57  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.true53  cond.end60  
After path modifications process path
for.body48  cond.true53  cond.end60  
Hash path invariants only
Invariants are
  br label %cond.end63, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.true53  cond.false58  
After path modifications process path
for.body48  cond.true53  cond.false58  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.cond72  for.body75  for.inc77  
After path modifications process path
for.body75  
Hash path invariants only
Invariants are
  br label %for.inc77, !control_dep_instr !8, !data_indep_instr !11
  call void @Reflection_coefficients5(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %r.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients5(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.then71  
After path modifications process path
for.body48  
Hash path invariants only
Invariants are
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients4(i32* %i, i32* %n), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %n = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients4(i32* %i, i32* %n), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  if.then71  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  if.then71  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  if.then71  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.cond72  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.then71  for.end79  
After path modifications process path
for.body48  
Hash path invariants only
Invariants are
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.end79  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then71  for.end79  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  if.then71  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  if.then71  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  if.then71  for.end79  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.then93  
After path modifications process path
for.body48  cond.true86  cond.end88  if.then93  
Hash path invariants only
Invariants are
  br label %if.end97, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  call void @Reflection_coefficients7(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %r.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Reflection_coefficients7(i16** %r.addr), !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.then106  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  
Hash path invariants only
Invariants are
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then106  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  if.then106  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  if.then106  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  if.then106  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  if.then106  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.true120  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.true120  
Hash path invariants only
Invariants are
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end126, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.true152  
After path modifications process path
for.body134  cond.true152  
Hash path invariants only
Invariants are
  br label %cond.end158, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.end158  cond.true180  
After path modifications process path
for.body134  cond.end158  cond.true180  
Hash path invariants only
Invariants are
  br label %cond.end186, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.end158  cond.end186  for.inc191  
After path modifications process path
for.body134  cond.end158  cond.end186  
Hash path invariants only
Invariants are
  br label %for.inc191, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.end158  cond.false185  
After path modifications process path
for.body134  cond.end158  cond.false185  
Hash path invariants only
Invariants are
  br label %cond.end186, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  for.body134  cond.false157  
After path modifications process path
for.body134  cond.false157  
Hash path invariants only
Invariants are
  br label %cond.end158, !control_dep_instr !8, !data_indep_instr !11
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond130  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.end126  for.end193  for.inc194  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.end126  for.end193  
Hash path invariants only
Invariants are
  br label %for.cond130, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  br label %for.inc194, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx129 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  store i32 1, i32* %m, align 4, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.true101  cond.end103  if.end107  cond.false125  
After path modifications process path
for.body48  cond.true86  cond.end88  cond.true101  if.end107  cond.false125  
Hash path invariants only
Invariants are
  br label %cond.end126, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx108 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  %arrayidx113 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 0, !control_dep_instr !8, !data_dep_instr !9
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end103, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.true86  cond.end88  if.end97  cond.false102  
After path modifications process path
for.body48  cond.true86  cond.end88  
Hash path invariants only
Invariants are
  %arrayidx89 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
  br label %cond.end88, !control_dep_instr !8, !data_indep_instr !11, !input_dep_block !12
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false102  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false102  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  cond.false102  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  cond.false102  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  cond.false102  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.end63  if.end80  cond.false87  
After path modifications process path
for.body48  
Hash path invariants only
Invariants are
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false87  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  cond.false87  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  cond.false87  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  cond.false87  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  cond.false87  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  for.cond45  for.body48  cond.false61  
After path modifications process path
for.body48  cond.false61  
Hash path invariants only
Invariants are
  br label %cond.end63, !control_dep_instr !8, !data_indep_instr !11
  %arrayidx49 = getelementptr inbounds [9 x i16], [9 x i16]* %P, i64 0, i64 1, !control_dep_instr !8, !data_dep_instr !9, !input_dep_block !12
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
After path modifications process path
entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.end44  
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.cond12  for.end22  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.cond23  for.end33  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  land.lhs.true  cond.true9  cond.end11  for.end22  for.end33  for.cond34  for.end44  
After path modifications process path is empty
Processing path: entry  if.end  cond.true  cond.end  cond.false10  
After path modifications process path
entry  if.end  cond.true  cond.end  cond.false10  
Processing path: entry  if.end  cond.false  
After path modifications process path
entry  if.end  cond.false  
 Skipping function per FilterFunctionPass:Transformation_to_Log_Area_Ratios
 Processing function:Quantization_and_coding
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  cond.true14  
After path modifications process path
entry  cond.end  cond.true14  
Processing path: entry  cond.end  cond.end20  cond.true29  
After path modifications process path
entry  cond.end  cond.end20  cond.true29  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.true52  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.true52  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.true66  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.true81  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.true105  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.true119  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.true134  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.true158  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.true172  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.true187  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.true211  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.true225  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.true240  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.true264  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.true278  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.true293  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.true317  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.true331  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.true346  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.true370  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.true384  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.true399  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.end410  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.true404  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.end408  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.end390  cond.false400  cond.false405  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.end376  cond.false389  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.end357  cond.false375  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.true351  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.end355  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.end337  cond.false347  cond.false352  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.end323  cond.false336  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.end304  cond.false322  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.true298  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.end302  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.end284  cond.false294  cond.false299  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.end270  cond.false283  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.end251  cond.false269  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.true245  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.end249  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.end231  cond.false241  cond.false246  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.end217  cond.false230  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.end198  cond.false216  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.true192  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.end196  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.end178  cond.false188  cond.false193  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.end164  cond.false177  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.end145  cond.false163  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.true139  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.end143  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.end125  cond.false135  cond.false140  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.end111  cond.false124  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.end92  cond.false110  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.true86  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.end90  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.end72  cond.false82  cond.false87  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.end58  cond.false71  
Processing path: entry  cond.end  cond.end20  cond.end40  cond.false57  
After path modifications process path
entry  cond.end  cond.end20  cond.end40  cond.false57  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.true34  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.true34  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.end38  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.end38  
Processing path: entry  cond.end  cond.end20  cond.false30  cond.false35  
After path modifications process path
entry  cond.end  cond.end20  cond.false30  cond.false35  
Processing path: entry  cond.end  cond.false19  
After path modifications process path
entry  cond.end  cond.false19  
Processing path: entry  cond.false  
After path modifications process path
entry  cond.false  
 Skipping function per FilterFunctionPass:gsm_debug_words
Skip. No dependence graph for function gsm_debug_longwords
Skip. No dependence graph for function gsm_debug_longword
Skip. No dependence graph for function gsm_debug_word
 Skipping function per FilterFunctionPass:Gsm_Decoder
 Processing function:Gsm_RPE_Decoding
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %erp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %Mcr.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xmaxcr.addr = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
Can't handle this operand   %xMcr.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_RPE_Decoding0(i16** %erp.addr, i16* %Mcr.addr, i16* %xmaxcr.addr, i16** %xMcr.addr), !control_dep_instr !8, !input_indep_instr !11, !data_indep_instr !12
No oh has been applied in the path
 Processing function:Gsm_Long_Term_Synthesis_Filtering
Short range hashing enabled.
Processing path: entry  cond.true  
After path modifications process path
entry  cond.true  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.true40  
After path modifications process path
for.body  cond.true40  
Hash path invariants only
Invariants are
  br label %cond.end46, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.end46  for.inc  
After path modifications process path
for.body  cond.end46  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.body  cond.false45  
After path modifications process path
for.body  cond.false45  
Hash path invariants only
Invariants are
  br label %cond.end46, !control_dep_instr !8, !data_indep_instr !13
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.cond51  for.body54  for.inc61  
After path modifications process path
for.body54  
Hash path invariants only
Invariants are
  br label %for.inc61, !control_dep_instr !8, !data_indep_instr !13
  call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Processing call instruction..
Can't handle this operand   %k = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Can't handle this operand   %drp.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Gsm_Long_Term_Synthesis_Filtering1(i32* %k, i16** %drp.addr), !control_dep_instr !8, !data_indep_instr !13, !input_dep_block !11
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.cond51  for.end63  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.cond  for.end  for.end63  
After path modifications process path is empty
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.end63  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.true21  cond.end23  for.end  for.end63  
Processing path: entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.false22  
After path modifications process path
entry  cond.end  land.lhs.true  cond.true15  cond.end17  cond.false22  
Processing path: entry  cond.end  cond.false16  
After path modifications process path
entry  cond.end  cond.false16  
Processing path: entry  lor.lhs.false  cond.false  
After path modifications process path
entry  lor.lhs.false  cond.false  
 Processing function:Gsm_Short_Term_Synthesis_Filter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:Postprocessing
 Processing function:Short_term_synthesis_filtering
Short range hashing enabled.
Processing path: entry  for.cond  for.body  land.lhs.true  cond.true  
After path modifications process path
for.body  land.lhs.true  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.true17  
After path modifications process path
for.body  cond.end  cond.true17  
Hash path invariants only
Invariants are
  br label %cond.end25, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  land.lhs.true31  cond.true35  
After path modifications process path
for.body  cond.end  cond.end25  land.lhs.true31  cond.true35  
Hash path invariants only
Invariants are
  br label %cond.end43, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.end43  cond.true54  
After path modifications process path
for.body  cond.end  cond.end25  cond.end43  cond.true54  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.end43  cond.end60  
After path modifications process path
for.body  cond.end  cond.end25  cond.end43  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.end43  cond.false59  
After path modifications process path
for.body  cond.end  cond.end25  cond.end43  cond.false59  
Hash path invariants only
Invariants are
  br label %cond.end60, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.end25  cond.false36  
After path modifications process path
for.body  cond.end  cond.end25  cond.false36  
Hash path invariants only
Invariants are
  br label %cond.end43, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.false18  cond.true21  
After path modifications process path
for.body  cond.end  cond.false18  cond.true21  
Hash path invariants only
Invariants are
  br label %cond.end23, !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.false18  cond.end23  
After path modifications process path
for.body  cond.end  cond.false18  cond.end23  
Hash path invariants only
Invariants are
  br label %cond.end25, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.end  cond.false18  cond.false22  
After path modifications process path
for.body  cond.end  cond.false18  cond.false22  
Hash path invariants only
Invariants are
  br label %cond.end23, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !8, !data_indep_instr !12
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  for.end  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
  br label %for.cond, !control_dep_instr !8, !data_indep_instr !12
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %sri = alloca i16, align 2, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
Can't handle this operand   %wt.addr = alloca i16*, align 8, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 of the call   call void @Short_term_synthesis_filtering0(i32* %i, i16* %sri, i16** %wt.addr), !control_dep_instr !8, !data_indep_instr !12, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
No oh has been applied in the path
 Processing function:gsm_destroy
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:gsm_decode
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:gsm_encode
 Skipping function per FilterFunctionPass:gsm_explode
 Skipping function per FilterFunctionPass:gsm_implode
 Skipping function per FilterFunctionPass:gsm_create
Skip. No dependence graph for function gsm_print
 Skipping function per FilterFunctionPass:gsm_option
Extract path function for assertion assert_gsm_decode_path_0
Extract path function for assertion assert_gsm_decode_path_1
Extract path function for assertion assert_gsm_decode_path_2
Extract path function for assertion assert_gsm_destroy_path_0
Extract path function for assertion assert_gsm_destroy_path_1
Extract path function for assertion assert_Short_term_synthesis_filtering_path_0
Extract path function for assertion assert_Short_term_synthesis_filtering_path_3
Extract path function for assertion assert_Short_term_synthesis_filtering_path_6
Extract path function for assertion assert_Short_term_synthesis_filtering_path_9
Extract path function for assertion assert_Short_term_synthesis_filtering_path_15
Extract path function for assertion assert_Short_term_synthesis_filtering_path_18
Extract path function for assertion assert_Short_term_synthesis_filtering_path_21
Extract path function for assertion assert_Short_term_synthesis_filtering_path_24
Extract path function for assertion assert_Short_term_synthesis_filtering_path_27
Extract path function for assertion assert_Short_term_synthesis_filtering_path_30
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_0
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_1
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_2
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_3
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_4
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_5
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_6
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_7
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_9
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_12
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_13
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_14
Extract path function for assertion assert_Gsm_Long_Term_Synthesis_Filtering_path_15
Extract path function for assertion assert_Long_term_analysis_filtering_path_1
Extract path function for assertion assert_Long_term_analysis_filtering_path_3
Extract path function for assertion assert_Long_term_analysis_filtering_path_5
Extract path function for assertion assert_Long_term_analysis_filtering_path_7
Extract path function for assertion assert_Long_term_analysis_filtering_path_9
Extract path function for assertion assert_Long_term_analysis_filtering_path_13
Extract path function for assertion assert_Long_term_analysis_filtering_path_15
Extract path function for assertion assert_Long_term_analysis_filtering_path_17
Extract path function for assertion assert_Long_term_analysis_filtering_path_19
Extract path function for assertion assert_Long_term_analysis_filtering_path_21
Extract path function for assertion assert_Long_term_analysis_filtering_path_25
Extract path function for assertion assert_Long_term_analysis_filtering_path_27
Extract path function for assertion assert_Long_term_analysis_filtering_path_29
Extract path function for assertion assert_Long_term_analysis_filtering_path_31
Extract path function for assertion assert_Long_term_analysis_filtering_path_33
Extract path function for assertion assert_Long_term_analysis_filtering_path_37
Extract path function for assertion assert_Long_term_analysis_filtering_path_39
Extract path function for assertion assert_Long_term_analysis_filtering_path_41
Extract path function for assertion assert_Long_term_analysis_filtering_path_43
Extract path function for assertion assert_Long_term_analysis_filtering_path_45
Extract path function for assertion assert_Quantization_and_coding_path_0
Extract path function for assertion assert_Quantization_and_coding_path_1
Extract path function for assertion assert_Quantization_and_coding_path_2
Extract path function for assertion assert_Quantization_and_coding_path_3
Extract path function for assertion assert_Quantization_and_coding_path_4
Extract path function for assertion assert_Quantization_and_coding_path_5
Extract path function for assertion assert_Quantization_and_coding_path_6
Extract path function for assertion assert_Quantization_and_coding_path_7
Extract path function for assertion assert_Quantization_and_coding_path_8
Extract path function for assertion assert_Quantization_and_coding_path_9
Extract path function for assertion assert_Quantization_and_coding_path_10
Extract path function for assertion assert_Quantization_and_coding_path_11
Extract path function for assertion assert_Quantization_and_coding_path_12
Extract path function for assertion assert_Quantization_and_coding_path_13
Extract path function for assertion assert_Quantization_and_coding_path_14
Extract path function for assertion assert_Quantization_and_coding_path_15
Extract path function for assertion assert_Quantization_and_coding_path_16
Extract path function for assertion assert_Quantization_and_coding_path_17
Extract path function for assertion assert_Quantization_and_coding_path_18
Extract path function for assertion assert_Quantization_and_coding_path_19
Extract path function for assertion assert_Quantization_and_coding_path_20
Extract path function for assertion assert_Quantization_and_coding_path_21
Extract path function for assertion assert_Quantization_and_coding_path_22
Extract path function for assertion assert_Quantization_and_coding_path_23
Extract path function for assertion assert_Quantization_and_coding_path_24
Extract path function for assertion assert_Quantization_and_coding_path_25
Extract path function for assertion assert_Quantization_and_coding_path_26
Extract path function for assertion assert_Quantization_and_coding_path_27
Extract path function for assertion assert_Quantization_and_coding_path_28
Extract path function for assertion assert_Quantization_and_coding_path_29
Extract path function for assertion assert_Quantization_and_coding_path_30
Extract path function for assertion assert_Quantization_and_coding_path_31
Extract path function for assertion assert_Quantization_and_coding_path_32
Extract path function for assertion assert_Quantization_and_coding_path_33
Extract path function for assertion assert_Quantization_and_coding_path_34
Extract path function for assertion assert_Quantization_and_coding_path_35
Extract path function for assertion assert_Quantization_and_coding_path_36
Extract path function for assertion assert_Quantization_and_coding_path_37
Extract path function for assertion assert_Quantization_and_coding_path_38
Extract path function for assertion assert_Quantization_and_coding_path_39
Extract path function for assertion assert_Quantization_and_coding_path_40
Extract path function for assertion assert_Quantization_and_coding_path_41
Extract path function for assertion assert_Quantization_and_coding_path_42
Extract path function for assertion assert_Quantization_and_coding_path_43
Extract path function for assertion assert_Quantization_and_coding_path_44
Extract path function for assertion assert_Quantization_and_coding_path_45
Extract path function for assertion assert_Quantization_and_coding_path_46
Extract path function for assertion assert_Quantization_and_coding_path_47
Extract path function for assertion assert_Quantization_and_coding_path_48
Extract path function for assertion assert_Quantization_and_coding_path_49
Extract path function for assertion assert_Quantization_and_coding_path_50
Extract path function for assertion assert_Quantization_and_coding_path_51
Extract path function for assertion assert_Quantization_and_coding_path_52
Extract path function for assertion assert_Quantization_and_coding_path_53
Extract path function for assertion assert_Quantization_and_coding_path_54
Extract path function for assertion assert_Quantization_and_coding_path_55
Extract path function for assertion assert_Quantization_and_coding_path_56
Extract path function for assertion assert_Quantization_and_coding_path_57
Extract path function for assertion assert_Quantization_and_coding_path_58
Extract path function for assertion assert_Quantization_and_coding_path_59
Extract path function for assertion assert_Quantization_and_coding_path_60
Extract path function for assertion assert_Quantization_and_coding_path_61
Extract path function for assertion assert_Quantization_and_coding_path_62
Extract path function for assertion assert_Quantization_and_coding_path_63
Extract path function for assertion assert_Quantization_and_coding_path_64
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_0
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_1
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_2
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_3
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_4
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_5
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_6
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_7
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_8
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_9
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_10
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_11
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_12
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_13
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_14
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_15
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_17
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_18
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_20
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_21
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_22
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_24
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_25
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_26
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_28
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_30
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_33
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_35
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_38
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_40
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_43
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_45
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_49
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_51
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_55
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_57
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_61
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_63
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_66
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_68
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_70
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_72
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_73
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_74
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_75
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_76
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_77
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_78
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_79
Extract path function for assertion assert_Calculation_of_the_LTP_parameters_path_80
Extract path function for assertion assert_APCM_inverse_quantization_path_0
Extract path function for assertion assert_APCM_inverse_quantization_path_1
Extract path function for assertion assert_APCM_inverse_quantization_path_2
Extract path function for assertion assert_APCM_inverse_quantization_path_3
Extract path function for assertion assert_APCM_inverse_quantization_path_4
Extract path function for assertion assert_APCM_inverse_quantization_path_5
Extract path function for assertion assert_APCM_inverse_quantization_path_6
Extract path function for assertion assert_APCM_inverse_quantization_path_7
Extract path function for assertion assert_APCM_inverse_quantization_path_9
Extract path function for assertion assert_APCM_inverse_quantization_path_11
Extract path function for assertion assert_APCM_inverse_quantization_path_12
Extract path function for assertion assert_Autocorrelation_path_0
Extract path function for assertion assert_Autocorrelation_path_1
Extract path function for assertion assert_Autocorrelation_path_2
Extract path function for assertion assert_Autocorrelation_path_3
Extract path function for assertion assert_Autocorrelation_path_4
Extract path function for assertion assert_Autocorrelation_path_5
Extract path function for assertion assert_Autocorrelation_path_6
Extract path function for assertion assert_Autocorrelation_path_7
Extract path function for assertion assert_Autocorrelation_path_8
Extract path function for assertion assert_Autocorrelation_path_9
Extract path function for assertion assert_Autocorrelation_path_10
Extract path function for assertion assert_Autocorrelation_path_11
Extract path function for assertion assert_Autocorrelation_path_12
Extract path function for assertion assert_Autocorrelation_path_13
Extract path function for assertion assert_Autocorrelation_path_14
Extract path function for assertion assert_Autocorrelation_path_15
Extract path function for assertion assert_Autocorrelation_path_17
Extract path function for assertion assert_Autocorrelation_path_18
Extract path function for assertion assert_Autocorrelation_path_20
Extract path function for assertion assert_Autocorrelation_path_21
Extract path function for assertion assert_Autocorrelation_path_23
Extract path function for assertion assert_Autocorrelation_path_24
Extract path function for assertion assert_Autocorrelation_path_26
Extract path function for assertion assert_Autocorrelation_path_27
Extract path function for assertion assert_Autocorrelation_path_28
Extract path function for assertion assert_Autocorrelation_path_30
Extract path function for assertion assert_Autocorrelation_path_31
Extract path function for assertion assert_Autocorrelation_path_33
Extract path function for assertion assert_Autocorrelation_path_35
Extract path function for assertion assert_Autocorrelation_path_36
Extract path function for assertion assert_Autocorrelation_path_38
Extract path function for assertion assert_Autocorrelation_path_39
Extract path function for assertion assert_Autocorrelation_path_40
Extract path function for assertion assert_Autocorrelation_path_42
Extract path function for assertion assert_Autocorrelation_path_44
Extract path function for assertion assert_Autocorrelation_path_46
Extract path function for assertion assert_Autocorrelation_path_48
Extract path function for assertion assert_Autocorrelation_path_50
Extract path function for assertion assert_Autocorrelation_path_54
Extract path function for assertion assert_Autocorrelation_path_56
Extract path function for assertion assert_Autocorrelation_path_60
Extract path function for assertion assert_Autocorrelation_path_62
Extract path function for assertion assert_Autocorrelation_path_65
Extract path function for assertion assert_Autocorrelation_path_67
Extract path function for assertion assert_Autocorrelation_path_70
Extract path function for assertion assert_Autocorrelation_path_72
Extract path function for assertion assert_Autocorrelation_path_74
Extract path function for assertion assert_Autocorrelation_path_75
Extract path function for assertion assert_Autocorrelation_path_76
Extract path function for assertion assert_Autocorrelation_path_77
Extract path function for assertion assert_normalname_path_0
Extract path function for assertion assert_normalname_path_1
Extract path function for assertion assert_normalname_path_2
Extract path function for assertion assert_normalname_path_3
Extract path function for assertion assert_normalname_path_4
Extract path function for assertion assert_normalname_path_5
Extract path function for assertion assert_gsm_add_path_0
Extract path function for assertion assert_gsm_add_path_1
Extract path function for assertion assert_gsm_add_path_2
Extract path function for assertion assert_gsm_add_path_3
Extract path function for assertion assert_gsm_add_path_4
Extract path function for assertion assert_Coefficients_27_39_path_0
Extract path function for assertion assert_Coefficients_27_39_path_1
Extract path function for assertion assert_Coefficients_27_39_path_2
Extract path function for assertion assert_Coefficients_27_39_path_3
Extract path function for assertion assert_Coefficients_27_39_path_4
Extract path function for assertion assert_Coefficients_27_39_path_5
Extract path function for assertion assert_Coefficients_27_39_path_6
Extract path function for assertion assert_Coefficients_27_39_path_7
Extract path function for assertion assert_Coefficients_27_39_path_8
Extract path function for assertion assert_Coefficients_27_39_path_9
Extract path function for assertion assert_Coefficients_27_39_path_10
Extract path function for assertion assert_Coefficients_27_39_path_11
Extract path function for assertion assert_gsm_norm_path_0
Extract path function for assertion assert_gsm_norm_path_1
Extract path function for assertion assert_gsm_norm_path_2
Extract path function for assertion assert_gsm_norm_path_3
Extract path function for assertion assert_gsm_norm_path_4
Extract path function for assertion assert_gsm_norm_path_5
Extract path function for assertion assert_gsm_norm_path_6
Extract path function for assertion assert_gsm_norm_path_7
Extract path function for assertion assert_gsm_norm_path_8
Extract path function for assertion assert_gsm_norm_path_9
Extract path function for assertion assert_gsm_norm_path_10
Extract path function for assertion assert_RPE_grid_selection_path_0
Extract path function for assertion assert_RPE_grid_selection_path_1
Extract path function for assertion assert_RPE_grid_selection_path_2
Extract path function for assertion assert_RPE_grid_selection_path_3
Extract path function for assertion assert_RPE_grid_selection_path_4
Extract path function for assertion assert_RPE_grid_selection_path_6
Extract path function for assertion assert_Reflection_coefficients_path_0
Extract path function for assertion assert_Reflection_coefficients_path_1
Extract path function for assertion assert_Reflection_coefficients_path_3
Extract path function for assertion assert_Reflection_coefficients_path_4
Extract path function for assertion assert_Reflection_coefficients_path_5
Extract path function for assertion assert_Reflection_coefficients_path_6
Extract path function for assertion assert_Reflection_coefficients_path_7
Extract path function for assertion assert_Reflection_coefficients_path_9
Extract path function for assertion assert_Reflection_coefficients_path_10
Extract path function for assertion assert_Reflection_coefficients_path_13
Extract path function for assertion assert_Reflection_coefficients_path_14
Extract path function for assertion assert_Reflection_coefficients_path_15
Extract path function for assertion assert_Reflection_coefficients_path_19
Extract path function for assertion assert_Reflection_coefficients_path_20
Extract path function for assertion assert_Reflection_coefficients_path_24
Extract path function for assertion assert_Reflection_coefficients_path_25
Extract path function for assertion assert_Reflection_coefficients_path_29
Extract path function for assertion assert_Reflection_coefficients_path_30
Extract path function for assertion assert_Reflection_coefficients_path_31
Extract path function for assertion assert_Reflection_coefficients_path_36
Extract path function for assertion assert_Reflection_coefficients_path_37
Extract path function for assertion assert_Reflection_coefficients_path_41
Extract path function for assertion assert_Reflection_coefficients_path_42
Extract path function for assertion assert_Reflection_coefficients_path_46
Extract path function for assertion assert_Reflection_coefficients_path_47
Extract path function for assertion assert_Reflection_coefficients_path_51
Extract path function for assertion assert_Reflection_coefficients_path_52
Extract path function for assertion assert_Reflection_coefficients_path_56
Extract path function for assertion assert_Reflection_coefficients_path_57
Extract path function for assertion assert_Reflection_coefficients_path_58
Extract path function for assertion assert_Reflection_coefficients_path_62
Extract path function for assertion assert_Reflection_coefficients_path_63
Extract path function for assertion assert_Reflection_coefficients_path_64
Extract path function for assertion assert_Reflection_coefficients_path_68
Extract path function for assertion assert_Reflection_coefficients_path_69
Extract path function for assertion assert_Reflection_coefficients_path_70
Extract path function for assertion assert_Reflection_coefficients_path_74
Extract path function for assertion assert_Reflection_coefficients_path_75
Extract path function for assertion assert_Reflection_coefficients_path_76
Extract path function for assertion assert_Reflection_coefficients_path_80
Extract path function for assertion assert_Reflection_coefficients_path_81
Extract path function for assertion assert_Reflection_coefficients_path_82
Extract path function for assertion assert_Reflection_coefficients_path_87
Extract path function for assertion assert_Reflection_coefficients_path_88
Extract path function for assertion assert_Reflection_coefficients_path_92
Extract path function for assertion assert_Reflection_coefficients_path_93
Extract path function for assertion assert_Reflection_coefficients_path_97
Extract path function for assertion assert_Reflection_coefficients_path_98
Extract path function for assertion assert_Reflection_coefficients_path_102
Extract path function for assertion assert_Reflection_coefficients_path_103
Extract path function for assertion assert_Reflection_coefficients_path_107
Extract path function for assertion assert_Reflection_coefficients_path_108
Extract path function for assertion assert_Reflection_coefficients_path_112
Extract path function for assertion assert_Reflection_coefficients_path_113
Extract path function for assertion assert_RPE_grid_positioning_path_1
Extract path function for assertion assert_RPE_grid_positioning_path_3
Extract path function for assertion assert_RPE_grid_positioning_path_4
Extract path function for assertion assert_RPE_grid_positioning_path_5
Extract path function for assertion assert_RPE_grid_positioning_path_6
Extract path function for assertion assert_RPE_grid_positioning_path_7
Extract path function for assertion assert_RPE_grid_positioning_path_8
Extract path function for assertion assert_RPE_grid_positioning_path_9
Extract path function for assertion assert_emalloc_path_0
Extract path function for assertion assert_emalloc_path_1
Extract path function for assertion assert_update_own_path_0
Extract path function for assertion assert_update_own_path_1
Extract path function for assertion assert_update_own_path_2
Extract path function for assertion assert_Short_term_analysis_filtering_path_0
Extract path function for assertion assert_Short_term_analysis_filtering_path_3
Extract path function for assertion assert_Short_term_analysis_filtering_path_6
Extract path function for assertion assert_Short_term_analysis_filtering_path_9
Extract path function for assertion assert_Short_term_analysis_filtering_path_12
Extract path function for assertion assert_update_times_path_0
Extract path function for assertion assert_update_times_path_1
Extract path function for assertion assert_update_times_path_2
Extract path function for assertion assert_main_path_2
Extract path function for assertion assert_main_path_6
Extract path function for assertion assert_main_path_8
Extract path function for assertion assert_main_path_10
Extract path function for assertion assert_main_path_12
Extract path function for assertion assert_main_path_14
Extract path function for assertion assert_main_path_29
Extract path function for assertion assert_main_path_31
Extract path function for assertion assert_main_path_34
Extract path function for assertion assert_main_path_37
Extract path function for assertion assert_parse_argv0_path_1
Extract path function for assertion assert_okay_as_input_path_0
Extract path function for assertion assert_okay_as_input_path_1
Extract path function for assertion assert_okay_as_input_path_2
Extract path function for assertion assert_okay_as_input_path_3
Extract path function for assertion assert_okay_as_input_path_4
Extract path function for assertion assert_Coefficients_13_26_path_0
Extract path function for assertion assert_Coefficients_13_26_path_1
Extract path function for assertion assert_Coefficients_13_26_path_2
Extract path function for assertion assert_Coefficients_13_26_path_3
Extract path function for assertion assert_Coefficients_13_26_path_4
Extract path function for assertion assert_Coefficients_13_26_path_5
Extract path function for assertion assert_Coefficients_13_26_path_6
Extract path function for assertion assert_Coefficients_13_26_path_7
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_0
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_1
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_2
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_3
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_4
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_5
Extract path function for assertion assert_Gsm_Long_Term_Predictor_path_6
Extract path function for assertion assert_process_path_0
Extract path function for assertion assert_process_path_1
Extract path function for assertion assert_process_path_2
Extract path function for assertion assert_process_path_3
Extract path function for assertion assert_process_path_4
Extract path function for assertion assert_process_path_5
Extract path function for assertion assert_process_path_6
Extract path function for assertion assert_process_path_7
Extract path function for assertion assert_process_path_8
Extract path function for assertion assert_process_path_9
Extract path function for assertion assert_process_path_10
Extract path function for assertion assert_process_path_11
Extract path function for assertion assert_process_path_12
Extract path function for assertion assert_process_path_13
Extract path function for assertion assert_process_path_14
Extract path function for assertion assert_process_path_15
Extract path function for assertion assert_process_path_16
Extract path function for assertion assert_process_path_17
Extract path function for assertion assert_process_path_18
Extract path function for assertion assert_process_path_19
Extract path function for assertion assert_process_path_20
Extract path function for assertion assert_process_path_21
Extract path function for assertion assert_process_path_22
Extract path function for assertion assert_process_path_23
Extract path function for assertion assert_process_path_24
Extract path function for assertion assert_process_path_25
Extract path function for assertion assert_process_path_26
Extract path function for assertion assert_process_path_27
Extract path function for assertion assert_process_path_28
Extract path function for assertion assert_process_path_29
Extract path function for assertion assert_process_path_30
Extract path function for assertion assert_grok_format_path_1
Extract path function for assertion assert_grok_format_path_2
Extract path function for assertion assert_grok_format_path_3
Extract path function for assertion assert_grok_format_path_5
Extract path function for assertion assert_grok_format_path_6
Extract path function for assertion assert_grok_format_path_7
Extract path function for assertion assert_alaw_input_path_1
Extract path function for assertion assert_alaw_input_path_3
Extract path function for assertion assert_alaw_input_path_5
Extract path function for assertion assert_alaw_input_path_7
Extract path function for assertion assert_alaw_input_path_9
Extract path function for assertion assert_alaw_output_path_1
Extract path function for assertion assert_alaw_output_path_3
Extract path function for assertion assert_alaw_output_path_5
Extract path function for assertion assert_alaw_output_path_7
Extract path function for assertion assert_gsm_sub_path_0
Extract path function for assertion assert_gsm_sub_path_1
Extract path function for assertion assert_gsm_sub_path_2
Extract path function for assertion assert_gsm_sub_path_3
Extract path function for assertion assert_gsm_sub_path_4
Extract path function for assertion assert_get_u32_path_0
Extract path function for assertion assert_get_u32_path_1
Extract path function for assertion assert_get_u32_path_2
Extract path function for assertion assert_audio_init_output_path_0
Extract path function for assertion assert_audio_init_output_path_1
Extract path function for assertion assert_audio_init_output_path_2
Extract path function for assertion assert_gsm_mult_path_0
Extract path function for assertion assert_gsm_mult_path_1
Extract path function for assertion assert_gsm_mult_path_2
OH stats is requested, dumping stat file...
Processed instructions number 10210
{
    "numberOfAssertCalls": 1,
    "numberOfBlocksInFunctionsWithNoDG": 43,
    "numberOfDataDependentInstructions": 3795,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 3708,
    "numberOfInstructionsInFunctionsWithNoDG": 1342,
    "numberOfNonHashableBlocks": 71,
    "numberOfNonHashableInstructions": 281,
    "numberOfOHProcessedInstr": 5160,
    "numberOfOtherUnprotectedInstructions": 22,
    "numberOfOtherUnprotectedLoopVariantInstructions": 7,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 33,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 1,
    "numberOfSensitiveBlocks": 701,
    "numberOfSensitiveFunctions": 39,
    "numberOfShortRangeAssertCalls": 430,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 541,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 433,
    "numberOfUnprotectedArgumentReachableInstructions": 192,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 88,
    "numberOfUnprotectedGlobalReachableInstructions": 89,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 340
}
ERR. processed 39 function, while filter count is 137
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 44.1626 seconds (44.1684 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  37.4915 ( 85.4%)   0.2160 ( 77.3%)  37.7075 ( 85.4%)  37.7083 ( 85.4%)  Instruments bitcode with hashing and logging functions
   5.7554 ( 13.1%)   0.0381 ( 13.6%)   5.7934 ( 13.1%)   5.7986 ( 13.1%)  runs input dependency analysis
   0.4517 (  1.0%)   0.0096 (  3.4%)   0.4613 (  1.0%)   0.4606 (  1.0%)  Memory SSA
   0.0728 (  0.2%)   0.0040 (  1.4%)   0.0768 (  0.2%)   0.0768 (  0.2%)  Bitcode Writer
   0.0449 (  0.1%)   0.0013 (  0.5%)   0.0462 (  0.1%)   0.0468 (  0.1%)  Dominator Tree Construction
   0.0285 (  0.1%)   0.0007 (  0.3%)   0.0293 (  0.1%)   0.0292 (  0.1%)  Natural Loop Information
   0.0155 (  0.0%)   0.0036 (  1.3%)   0.0191 (  0.0%)   0.0191 (  0.0%)  Module Verifier
   0.0048 (  0.0%)   0.0001 (  0.1%)   0.0050 (  0.0%)   0.0050 (  0.0%)  Post-Dominator Tree Construction
   0.0046 (  0.0%)   0.0001 (  0.1%)   0.0048 (  0.0%)   0.0049 (  0.0%)  Dominator Tree Construction
   0.0007 (  0.0%)   0.0040 (  1.4%)   0.0047 (  0.0%)   0.0047 (  0.0%)  Include functions in a given file in any transformation
   0.0030 (  0.0%)   0.0001 (  0.0%)   0.0031 (  0.0%)   0.0031 (  0.0%)  Natural Loop Information
   0.0031 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)   0.0031 (  0.0%)  Instruments bitcode with guards
   0.0027 (  0.0%)   0.0001 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Function Alias Analysis Results
   0.0026 (  0.0%)   0.0001 (  0.0%)   0.0027 (  0.0%)   0.0026 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Call site information
   0.0001 (  0.0%)   0.0004 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Remove unreachable blocks from the CFG
   0.0000 (  0.0%)   0.0005 (  0.2%)   0.0005 (  0.0%)   0.0005 (  0.0%)  runs indirect and virtual calls analysis
   0.0001 (  0.0%)   0.0004 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0003 (  0.1%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  43.8832 (100.0%)   0.2794 (100.0%)  44.1626 (100.0%)  44.1684 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0298 seconds (0.0298 wall clock)

   ---User Time---   --User+System--   ---Wall Time---  --- Name ---
   0.0298 (100.0%)   0.0298 (100.0%)   0.0298 (100.0%)  Parse IR
   0.0298 (100.0%)   0.0298 (100.0%)   0.0298 (100.0%)  Total

