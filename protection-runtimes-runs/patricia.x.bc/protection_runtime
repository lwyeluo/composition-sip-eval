Running input dependency analysis pass
Processing function bit
Processing function pat_insert0
Processing function pat_insert1
Processing function insertR
Processing function pat_insert
Processing function pat_remove0
Processing function pat_remove1
Processing function pat_remove
Processing function pat_search
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function main4
Processing function main5
Processing function main6
Processing function main
Finalizing main
Finalizing main6
Mark Input dependent function main6
Finalizing main5
Mark Input dependent function main5
Finalizing main4
Mark Input dependent function main4
Finalizing main3
Mark Input dependent function main3
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing pat_search
Mark Input dependent function pat_search
Finalizing pat_remove
Finalizing pat_remove1
Mark Input dependent function pat_remove1
Finalizing pat_remove0
Mark Input dependent function pat_remove0
Finalizing pat_insert
Mark Input dependent function pat_insert
Finalizing insertR
Mark Input dependent function insertR
Finalizing pat_insert1
Mark Input dependent function pat_insert1
Finalizing pat_insert0
Mark Input dependent function pat_insert0
Finalizing bit
Mark Input dependent function bit
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/patricia.x.bc/10/0
here!:insertR
here!:pat_search
here!:pat_search
got filter function names
did not find pat_insert demangled to pat_insert
did not find bit demangled to bit
did not find free demangled to free
did not find malloc demangled to malloc
did not find bcopy demangled to bcopy
Add filter function insertR
FunctionInfo. Adding function:insertR
did not find pat_remove demangled to pat_remove
Add filter function pat_search
FunctionInfo. Adding function:pat_search
did not find main demangled to main
did not find printf demangled to printf
did not find exit demangled to exit
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fgets demangled to fgets
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find htonl demangled to htonl
did not find fprintf demangled to fprintf
did not find pat_insert0 demangled to pat_insert0
did not find pat_insert1 demangled to pat_insert1
did not find pat_remove0 demangled to pat_remove0
did not find pat_remove1 demangled to pat_remove1
did not find main0 demangled to main0
did not find main1 demangled to main1
did not find main2 demangled to main2
did not find main3 demangled to main3
did not find main4 demangled to main4
did not find main5 demangled to main5
did not find main6 demangled to main6
Adding pat_insert other functions, ExtractedOnly mode uses other functions
Adding bit other functions, ExtractedOnly mode uses other functions
Adding insertR other functions, ExtractedOnly mode uses other functions
Adding pat_remove other functions, ExtractedOnly mode uses other functions
Adding pat_search other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding pat_insert0 other functions, ExtractedOnly mode uses other functions
Adding pat_insert1 other functions, ExtractedOnly mode uses other functions
Adding pat_remove0 other functions, ExtractedOnly mode uses other functions
Adding pat_remove1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding main4 other functions, ExtractedOnly mode uses other functions
Adding main5 other functions, ExtractedOnly mode uses other functions
Adding main6 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:17
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
main5
pat_insert0
pat_search
main
main1
pat_remove
main2
insertR
pat_insert
main6
main0
main3
pat_remove1
bit
pat_insert1
main4
pat_remove0
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 17 function, while filter count is 2
Functions called in loop
Function call numbers
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 14
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 15
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %h.addr = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 2
 Skipping function per FilterFunctionPass:pat_insert
 Skipping function per FilterFunctionPass:bit
Collecting defining blocks for insertR
 Skipping function per FilterFunctionPass:pat_remove
Collecting defining blocks for pat_search
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:pat_insert
 Skipping function per FilterFunctionPass:bit
 Processing function:insertR
Short range hashing enabled.
Processing path: entry  if.then  cond.true  
After path modifications process path
entry  if.then  cond.true  
Processing path: entry  if.then  cond.end  cond.true13  
After path modifications process path
entry  if.then  cond.end  cond.true13  
Processing path: entry  if.then  cond.end  cond.end15  
After path modifications process path
entry  if.then  cond.end  cond.end15  
Processing path: entry  if.then  cond.end  cond.false14  
After path modifications process path
entry  if.then  cond.end  cond.false14  
Processing path: entry  if.then  cond.false  
After path modifications process path
entry  if.then  cond.false  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  if.end  if.then22  
After path modifications process path
entry  lor.lhs.false  if.end  if.then22  
Processing path: entry  lor.lhs.false  if.end  if.end29  
After path modifications process path
entry  lor.lhs.false  if.end  if.end29  
Processing path: entry  lor.lhs.false  if.end  if.else  
After path modifications process path
entry  lor.lhs.false  if.end  if.else  
 Skipping function per FilterFunctionPass:pat_remove
 Processing function:pat_search
Short range hashing enabled.
Processing path: entry  if.end  do.body  if.then1  
After path modifications process path
if.then1  
Hash path invariants only
Invariants are
  br label %if.end2, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.true  
After path modifications process path
if.end2  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.true16  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.true16  
After path modifications process path
entry  if.end  do.end  cond.true16  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.end18  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.end18  
After path modifications process path
entry  if.end  do.end  cond.end18  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.false17  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.false17  
After path modifications process path
entry  if.end  do.end  cond.false17  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.false  
After path modifications process path
if.end2  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
 Skipping function per FilterFunctionPass:main
Extract path function for assertion assert_pat_search_path_0
Extract path function for assertion assert_pat_search_path_1
Extract path function for assertion assert_pat_search_path_2
Extract path function for assertion assert_pat_search_path_3
Extract path function for assertion assert_pat_search_path_4
Extract path function for assertion assert_pat_search_path_5
Extract path function for assertion assert_pat_search_path_6
Extract path function for assertion assert_pat_search_path_7
Extract path function for assertion assert_pat_search_path_8
Extract path function for assertion assert_pat_search_path_9
Extract path function for assertion assert_pat_search_path_10
Extract path function for assertion assert_pat_search_path_11
Extract path function for assertion assert_pat_search_path_12
Extract path function for assertion assert_pat_search_path_13
Extract path function for assertion assert_insertR_path_0
Extract path function for assertion assert_insertR_path_1
Extract path function for assertion assert_insertR_path_2
Extract path function for assertion assert_insertR_path_3
Extract path function for assertion assert_insertR_path_4
Extract path function for assertion assert_insertR_path_5
Extract path function for assertion assert_insertR_path_6
Extract path function for assertion assert_insertR_path_7
Extract path function for assertion assert_insertR_path_8
OH stats is requested, dumping stat file...
Processed instructions number 1072
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 0,
    "numberOfDataDependentInstructions": 127,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 887,
    "numberOfInstructionsInFunctionsWithNoDG": 0,
    "numberOfNonHashableBlocks": 2,
    "numberOfNonHashableInstructions": 5,
    "numberOfOHProcessedInstr": 185,
    "numberOfOtherUnprotectedInstructions": 0,
    "numberOfOtherUnprotectedLoopVariantInstructions": 0,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 0,
    "numberOfProtectedFunctions": 2,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveBlocks": 29,
    "numberOfSensitiveFunctions": 2,
    "numberOfShortRangeAssertCalls": 23,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 25,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 16,
    "numberOfUnprotectedArgumentReachableInstructions": 18,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 2,
    "numberOfUnprotectedGlobalReachableInstructions": 0,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 19
}
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.7126 seconds (0.7131 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.4059 ( 57.6%)   0.0040 ( 50.0%)   0.4099 ( 57.5%)   0.4101 ( 57.5%)  runs input dependency analysis
   0.2787 ( 39.6%)   0.0040 ( 49.5%)   0.2827 ( 39.7%)   0.2829 ( 39.7%)  Instruments bitcode with hashing and logging functions
   0.0096 (  1.4%)   0.0000 (  0.1%)   0.0096 (  1.3%)   0.0096 (  1.3%)  Memory SSA
   0.0030 (  0.4%)   0.0000 (  0.0%)   0.0030 (  0.4%)   0.0030 (  0.4%)  Bitcode Writer
   0.0021 (  0.3%)   0.0000 (  0.0%)   0.0021 (  0.3%)   0.0021 (  0.3%)  Include functions in a given file in any transformation
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.1%)   0.0010 (  0.1%)  Instruments bitcode with guards
   0.0010 (  0.1%)   0.0000 (  0.0%)   0.0010 (  0.1%)   0.0010 (  0.1%)  Module Verifier
   0.0007 (  0.1%)   0.0000 (  0.0%)   0.0007 (  0.1%)   0.0007 (  0.1%)  Dominator Tree Construction
   0.0005 (  0.1%)   0.0000 (  0.0%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Natural Loop Information
   0.0004 (  0.1%)   0.0000 (  0.1%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Post-Dominator Tree Construction
   0.0005 (  0.1%)   0.0000 (  0.1%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Call site information
   0.0003 (  0.0%)   0.0000 (  0.1%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  runs indirect and virtual calls analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable blocks from the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.7045 (100.0%)   0.0081 (100.0%)   0.7126 (100.0%)   0.7131 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0022 seconds (0.0022 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0016 (100.0%)   0.0005 (100.0%)   0.0022 (100.0%)   0.0022 (100.0%)  Parse IR
   0.0016 (100.0%)   0.0005 (100.0%)   0.0022 (100.0%)   0.0022 (100.0%)  Total

Running input dependency analysis pass
Processing function bit
Processing function pat_insert0
Processing function pat_insert1
Processing function insertR
Processing function pat_insert
Processing function pat_remove0
Processing function pat_remove1
Processing function pat_remove
Processing function pat_search
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function main4
Processing function main5
Processing function main6
Processing function main
Finalizing main
Finalizing main6
Mark Input dependent function main6
Finalizing main5
Mark Input dependent function main5
Finalizing main4
Mark Input dependent function main4
Finalizing main3
Mark Input dependent function main3
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing pat_search
Mark Input dependent function pat_search
Finalizing pat_remove
Finalizing pat_remove1
Mark Input dependent function pat_remove1
Finalizing pat_remove0
Mark Input dependent function pat_remove0
Finalizing pat_insert
Mark Input dependent function pat_insert
Finalizing insertR
Mark Input dependent function insertR
Finalizing pat_insert1
Mark Input dependent function pat_insert1
Finalizing pat_insert0
Mark Input dependent function pat_insert0
Finalizing bit
Mark Input dependent function bit
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/patricia.x.bc/100/0
here!:pat_insert
here!:bit
here!:insertR
here!:pat_remove
here!:pat_search
here!:main
here!:pat_insert0
here!:pat_insert1
here!:pat_remove0
here!:pat_remove1
here!:main0
here!:main1
here!:main2
here!:main3
here!:main4
here!:main5
here!:main6
here!:main6
got filter function names
Add filter function pat_insert
FunctionInfo. Adding function:pat_insert
Add filter function bit
FunctionInfo. Adding function:bit
did not find free demangled to free
did not find malloc demangled to malloc
did not find bcopy demangled to bcopy
Add filter function insertR
FunctionInfo. Adding function:insertR
Add filter function pat_remove
FunctionInfo. Adding function:pat_remove
Add filter function pat_search
FunctionInfo. Adding function:pat_search
Add filter function main
FunctionInfo. Adding function:main
did not find printf demangled to printf
did not find exit demangled to exit
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fgets demangled to fgets
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find htonl demangled to htonl
did not find fprintf demangled to fprintf
Add filter function pat_insert0
FunctionInfo. Adding function:pat_insert0
Add filter function pat_insert1
FunctionInfo. Adding function:pat_insert1
Add filter function pat_remove0
FunctionInfo. Adding function:pat_remove0
Add filter function pat_remove1
FunctionInfo. Adding function:pat_remove1
Add filter function main0
FunctionInfo. Adding function:main0
Add filter function main1
FunctionInfo. Adding function:main1
Add filter function main2
FunctionInfo. Adding function:main2
Add filter function main3
FunctionInfo. Adding function:main3
Add filter function main4
FunctionInfo. Adding function:main4
Add filter function main5
FunctionInfo. Adding function:main5
Add filter function main6
FunctionInfo. Adding function:main6
Adding pat_insert other functions, ExtractedOnly mode uses other functions
Adding bit other functions, ExtractedOnly mode uses other functions
Adding insertR other functions, ExtractedOnly mode uses other functions
Adding pat_remove other functions, ExtractedOnly mode uses other functions
Adding pat_search other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding pat_insert0 other functions, ExtractedOnly mode uses other functions
Adding pat_insert1 other functions, ExtractedOnly mode uses other functions
Adding pat_remove0 other functions, ExtractedOnly mode uses other functions
Adding pat_remove1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding main4 other functions, ExtractedOnly mode uses other functions
Adding main5 other functions, ExtractedOnly mode uses other functions
Adding main6 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:17
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
main5
pat_insert0
pat_search
main
main1
pat_remove
main2
insertR
pat_insert
main6
main0
main3
pat_remove1
bit
pat_insert1
main4
pat_remove0
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
Functions called in loop
Function call numbers
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 14
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 15
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %h.addr = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 17
Collecting defining blocks for pat_insert
Collecting defining blocks for bit
Collecting defining blocks for insertR
Skip. No dependence graph for function pat_remove
Collecting defining blocks for pat_search
Collecting defining blocks for main
 Processing function:pat_insert
Short range hashing enabled.
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.true  
After path modifications process path
cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.body  if.then26  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  if.then26  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  if.then26  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  if.then26  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.body  if.end33  for.inc  
After path modifications process path
if.end33  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !10
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.cond38  for.body43  if.then52  
After path modifications process path
for.body43  if.then52  
Hash path invariants only
Invariants are
  br label %if.end58, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  for.end  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.cond38  for.body43  if.end58  for.inc59  
After path modifications process path
for.body43  if.end58  
Hash path invariants only
Invariants are
  br label %for.inc59, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  for.end  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.cond38  for.body43  if.else  
After path modifications process path
for.body43  if.else  
Hash path invariants only
Invariants are
  br label %if.end58, !control_dep_instr !7, !data_indep_instr !11
  store i32 1, i32* %copied, align 4, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  for.end  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.cond38  for.end60  if.end64  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.end  for.end60  if.end64  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  for.end  for.end60  if.end64  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.end60  if.end64  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.end60  if.end64  
Non numeric pointers (int and float) are skipped:  %n.addr = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.cond38  for.end60  if.then62  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.cond  for.end  for.end60  if.then62  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.then16  for.end  for.end60  if.then62  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.end60  if.then62  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.then16  for.end  for.end60  if.then62  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.end70  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.cond71  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.end70  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.cond71  land.end  for.body80  for.inc81  
After path modifications process path
for.body80  
Hash path invariants only
Invariants are
  br label %for.inc81, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !10
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.end70  for.end83  if.then89  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.cond71  land.end  for.end83  if.then89  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.end83  if.then89  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.end83  if.then89  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.end70  for.end83  if.end97  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.cond71  land.end  for.end83  if.end97  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.end83  if.end97  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.end83  if.end97  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.end  do.cond  do.end  if.end70  for.end83  if.else93  
After path modifications process path
cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.cond71  land.end  for.end83  if.else93  
After path modifications process path is empty
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.end83  if.else93  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  do.end  if.end70  for.end83  if.else93  
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  do.body  cond.false  
After path modifications process path
cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  lor.lhs.false  lor.lhs.false2  if.end  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  if.end  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:bit
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:insertR
Short range hashing enabled.
Processing path: entry  if.then  cond.true  
After path modifications process path
entry  if.then  cond.true  
Processing path: entry  if.then  cond.end  cond.true13  
After path modifications process path
entry  if.then  cond.end  cond.true13  
Processing path: entry  if.then  cond.end  cond.end15  
After path modifications process path
entry  if.then  cond.end  cond.end15  
Processing path: entry  if.then  cond.end  cond.false14  
After path modifications process path
entry  if.then  cond.end  cond.false14  
Processing path: entry  if.then  cond.false  
After path modifications process path
entry  if.then  cond.false  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  if.end  if.then22  
After path modifications process path
entry  lor.lhs.false  if.end  if.then22  
Processing path: entry  lor.lhs.false  if.end  if.end29  
After path modifications process path
entry  lor.lhs.false  if.end  if.end29  
Processing path: entry  lor.lhs.false  if.end  if.else  
After path modifications process path
entry  lor.lhs.false  if.end  if.else  
Skip. No dependence graph for function pat_remove
 Processing function:pat_search
Short range hashing enabled.
Processing path: entry  if.end  do.body  if.then1  
After path modifications process path
if.then1  
Hash path invariants only
Invariants are
  br label %if.end2, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.true  
After path modifications process path
if.end2  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.true16  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.true16  
After path modifications process path
entry  if.end  do.end  cond.true16  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.end18  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.end18  
After path modifications process path
entry  if.end  do.end  cond.end18  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.false17  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.false17  
After path modifications process path
entry  if.end  do.end  cond.false17  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.false  
After path modifications process path
if.end2  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
 Processing function:main
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.then4  
After path modifications process path
entry  if.end  if.then4  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.end31  if.end37  if.end45  if.then59  
After path modifications process path
if.end45  if.then59  
Hash path invariants only
Invariants are
  br label %if.end65, !control_dep_instr !12, !data_indep_instr !9
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr61 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr51 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.end31  if.end37  if.end45  if.end65  if.end69  
After path modifications process path
if.end45  
Hash path invariants only
Invariants are
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr51 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.end31  if.end37  if.end45  if.end65  if.then67  
After path modifications process path
if.end45  
Hash path invariants only
Invariants are
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr51 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then67  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then67  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.end31  if.end37  if.end45  if.else  
After path modifications process path
if.end45  if.else  
Hash path invariants only
Invariants are
  br label %if.end65, !control_dep_instr !12, !data_indep_instr !9
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
  %s_addr51 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !control_dep_instr !12, !data_dep_instr !7
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.end31  if.end37  if.then44  
After path modifications process path is empty
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then44  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then44  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.end31  if.then36  
After path modifications process path is empty
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then36  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then36  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.body  if.then30  
After path modifications process path is empty
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then30  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  if.then30  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.end22  while.end  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.end22  while.end  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.end10  if.end15  if.then21  
After path modifications process path
entry  if.end  if.end7  if.end10  if.end15  if.then21  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end7  if.end10  if.then14  
After path modifications process path
entry  if.end  if.end7  if.end10  if.then14  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end7  if.then9  
After path modifications process path
entry  if.end  if.end7  if.then9  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Extract path function for assertion assert_pat_insert_path_0
Extract path function for assertion assert_pat_insert_path_1
Extract path function for assertion assert_pat_insert_path_3
Extract path function for assertion assert_pat_insert_path_4
Extract path function for assertion assert_pat_insert_path_5
Extract path function for assertion assert_pat_insert_path_6
Extract path function for assertion assert_pat_insert_path_7
Extract path function for assertion assert_pat_insert_path_8
Extract path function for assertion assert_pat_insert_path_10
Extract path function for assertion assert_pat_insert_path_11
Extract path function for assertion assert_pat_insert_path_12
Extract path function for assertion assert_pat_insert_path_14
Extract path function for assertion assert_pat_insert_path_15
Extract path function for assertion assert_pat_insert_path_16
Extract path function for assertion assert_pat_insert_path_18
Extract path function for assertion assert_pat_insert_path_19
Extract path function for assertion assert_pat_insert_path_22
Extract path function for assertion assert_pat_insert_path_23
Extract path function for assertion assert_pat_insert_path_26
Extract path function for assertion assert_pat_insert_path_27
Extract path function for assertion assert_pat_insert_path_28
Extract path function for assertion assert_pat_insert_path_29
Extract path function for assertion assert_pat_insert_path_30
Extract path function for assertion assert_pat_insert_path_31
Extract path function for assertion assert_pat_insert_path_32
Extract path function for assertion assert_pat_insert_path_33
Extract path function for assertion assert_pat_insert_path_34
Extract path function for assertion assert_pat_insert_path_36
Extract path function for assertion assert_pat_insert_path_37
Extract path function for assertion assert_pat_insert_path_39
Extract path function for assertion assert_pat_insert_path_40
Extract path function for assertion assert_pat_insert_path_42
Extract path function for assertion assert_pat_insert_path_43
Extract path function for assertion assert_pat_insert_path_44
Extract path function for assertion assert_pat_insert_path_45
Extract path function for assertion assert_pat_insert_path_46
Extract path function for assertion assert_main_path_1
Extract path function for assertion assert_main_path_2
Extract path function for assertion assert_main_path_3
Extract path function for assertion assert_main_path_4
Extract path function for assertion assert_main_path_5
Extract path function for assertion assert_main_path_6
Extract path function for assertion assert_main_path_7
Extract path function for assertion assert_main_path_8
Extract path function for assertion assert_main_path_9
Extract path function for assertion assert_main_path_11
Extract path function for assertion assert_main_path_13
Extract path function for assertion assert_main_path_15
Extract path function for assertion assert_main_path_17
Extract path function for assertion assert_main_path_18
Extract path function for assertion assert_main_path_19
Extract path function for assertion assert_main_path_20
Extract path function for assertion assert_insertR_path_0
Extract path function for assertion assert_insertR_path_1
Extract path function for assertion assert_insertR_path_2
Extract path function for assertion assert_insertR_path_3
Extract path function for assertion assert_insertR_path_4
Extract path function for assertion assert_insertR_path_5
Extract path function for assertion assert_insertR_path_6
Extract path function for assertion assert_insertR_path_7
Extract path function for assertion assert_insertR_path_8
Extract path function for assertion assert_pat_search_path_0
Extract path function for assertion assert_pat_search_path_1
Extract path function for assertion assert_pat_search_path_2
Extract path function for assertion assert_pat_search_path_3
Extract path function for assertion assert_pat_search_path_4
Extract path function for assertion assert_pat_search_path_5
Extract path function for assertion assert_pat_search_path_6
Extract path function for assertion assert_pat_search_path_7
Extract path function for assertion assert_pat_search_path_8
Extract path function for assertion assert_pat_search_path_9
Extract path function for assertion assert_pat_search_path_10
Extract path function for assertion assert_pat_search_path_11
Extract path function for assertion assert_pat_search_path_12
Extract path function for assertion assert_pat_search_path_13
OH stats is requested, dumping stat file...
Processed instructions number 1071
{
    "numberOfAssertCalls": 1,
    "numberOfBlocksInFunctionsWithNoDG": 56,
    "numberOfDataDependentInstructions": 438,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 0,
    "numberOfInstructionsInFunctionsWithNoDG": 375,
    "numberOfNonHashableBlocks": 5,
    "numberOfNonHashableInstructions": 36,
    "numberOfOHProcessedInstr": 696,
    "numberOfOtherUnprotectedInstructions": 3,
    "numberOfOtherUnprotectedLoopVariantInstructions": 2,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 4,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 2,
    "numberOfSensitiveBlocks": 93,
    "numberOfSensitiveFunctions": 5,
    "numberOfShortRangeAssertCalls": 75,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 69,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 42,
    "numberOfUnprotectedArgumentReachableInstructions": 39,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 18,
    "numberOfUnprotectedGlobalReachableInstructions": 0,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 134
}
ERR. processed 5 function, while filter count is 17
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.9458 seconds (0.9457 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.4488 ( 48.4%)   0.0040 ( 22.3%)   0.4528 ( 47.9%)   0.4527 ( 47.9%)  Instruments bitcode with hashing and logging functions
   0.3969 ( 42.8%)   0.0121 ( 67.5%)   0.4090 ( 43.2%)   0.4090 ( 43.2%)  runs input dependency analysis
   0.0609 (  6.6%)   0.0016 (  8.8%)   0.0625 (  6.6%)   0.0624 (  6.6%)  Memory SSA
   0.0059 (  0.6%)   0.0000 (  0.0%)   0.0059 (  0.6%)   0.0059 (  0.6%)  Bitcode Writer
   0.0048 (  0.5%)   0.0002 (  0.9%)   0.0049 (  0.5%)   0.0049 (  0.5%)  Dominator Tree Construction
   0.0030 (  0.3%)   0.0001 (  0.4%)   0.0030 (  0.3%)   0.0030 (  0.3%)  Natural Loop Information
   0.0022 (  0.2%)   0.0000 (  0.0%)   0.0022 (  0.2%)   0.0022 (  0.2%)  Include functions in a given file in any transformation
   0.0020 (  0.2%)   0.0000 (  0.0%)   0.0020 (  0.2%)   0.0020 (  0.2%)  Module Verifier
   0.0009 (  0.1%)   0.0000 (  0.0%)   0.0009 (  0.1%)   0.0009 (  0.1%)  Instruments bitcode with guards
   0.0005 (  0.0%)   0.0000 (  0.1%)   0.0005 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.1%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0000 (  0.1%)   0.0003 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Call site information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  runs indirect and virtual calls analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable blocks from the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.9279 (100.0%)   0.0179 (100.0%)   0.9458 (100.0%)   0.9457 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0023 seconds (0.0023 wall clock)

   ---User Time---   --User+System--   ---Wall Time---  --- Name ---
   0.0023 (100.0%)   0.0023 (100.0%)   0.0023 (100.0%)  Parse IR
   0.0023 (100.0%)   0.0023 (100.0%)   0.0023 (100.0%)  Total

Running input dependency analysis pass
Processing function bit
Processing function pat_insert0
Processing function pat_insert1
Processing function insertR
Processing function pat_insert
Processing function pat_remove0
Processing function pat_remove1
Processing function pat_remove
Processing function pat_search
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function main4
Processing function main5
Processing function main6
Processing function main
Finalizing main
Finalizing main6
Mark Input dependent function main6
Finalizing main5
Mark Input dependent function main5
Finalizing main4
Mark Input dependent function main4
Finalizing main3
Mark Input dependent function main3
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing pat_search
Mark Input dependent function pat_search
Finalizing pat_remove
Finalizing pat_remove1
Mark Input dependent function pat_remove1
Finalizing pat_remove0
Mark Input dependent function pat_remove0
Finalizing pat_insert
Mark Input dependent function pat_insert
Finalizing insertR
Mark Input dependent function insertR
Finalizing pat_insert1
Mark Input dependent function pat_insert1
Finalizing pat_insert0
Mark Input dependent function pat_insert0
Finalizing bit
Mark Input dependent function bit
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/patricia.x.bc/25/0
here!:insertR
here!:pat_search
here!:main3
here!:pat_remove
here!:pat_remove
got filter function names
did not find pat_insert demangled to pat_insert
did not find bit demangled to bit
did not find free demangled to free
did not find malloc demangled to malloc
did not find bcopy demangled to bcopy
Add filter function insertR
FunctionInfo. Adding function:insertR
Add filter function pat_remove
FunctionInfo. Adding function:pat_remove
Add filter function pat_search
FunctionInfo. Adding function:pat_search
did not find main demangled to main
did not find printf demangled to printf
did not find exit demangled to exit
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fgets demangled to fgets
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find htonl demangled to htonl
did not find fprintf demangled to fprintf
did not find pat_insert0 demangled to pat_insert0
did not find pat_insert1 demangled to pat_insert1
did not find pat_remove0 demangled to pat_remove0
did not find pat_remove1 demangled to pat_remove1
did not find main0 demangled to main0
did not find main1 demangled to main1
did not find main2 demangled to main2
Add filter function main3
FunctionInfo. Adding function:main3
did not find main4 demangled to main4
did not find main5 demangled to main5
did not find main6 demangled to main6
Adding pat_insert other functions, ExtractedOnly mode uses other functions
Adding bit other functions, ExtractedOnly mode uses other functions
Adding insertR other functions, ExtractedOnly mode uses other functions
Adding pat_remove other functions, ExtractedOnly mode uses other functions
Adding pat_search other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding pat_insert0 other functions, ExtractedOnly mode uses other functions
Adding pat_insert1 other functions, ExtractedOnly mode uses other functions
Adding pat_remove0 other functions, ExtractedOnly mode uses other functions
Adding pat_remove1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding main4 other functions, ExtractedOnly mode uses other functions
Adding main5 other functions, ExtractedOnly mode uses other functions
Adding main6 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:17
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
main5
pat_insert0
pat_search
main
main1
pat_remove
main2
insertR
pat_insert
main6
main0
main3
pat_remove1
bit
pat_insert1
main4
pat_remove0
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 17 function, while filter count is 4
Functions called in loop
Function call numbers
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 14
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 15
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %h.addr = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 4
 Skipping function per FilterFunctionPass:pat_insert
 Skipping function per FilterFunctionPass:bit
Collecting defining blocks for insertR
Skip. No dependence graph for function pat_remove
Collecting defining blocks for pat_search
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:pat_insert
 Skipping function per FilterFunctionPass:bit
 Processing function:insertR
Short range hashing enabled.
Processing path: entry  if.then  cond.true  
After path modifications process path
entry  if.then  cond.true  
Processing path: entry  if.then  cond.end  cond.true13  
After path modifications process path
entry  if.then  cond.end  cond.true13  
Processing path: entry  if.then  cond.end  cond.end15  
After path modifications process path
entry  if.then  cond.end  cond.end15  
Processing path: entry  if.then  cond.end  cond.false14  
After path modifications process path
entry  if.then  cond.end  cond.false14  
Processing path: entry  if.then  cond.false  
After path modifications process path
entry  if.then  cond.false  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  if.end  if.then22  
After path modifications process path
entry  lor.lhs.false  if.end  if.then22  
Processing path: entry  lor.lhs.false  if.end  if.end29  
After path modifications process path
entry  lor.lhs.false  if.end  if.end29  
Processing path: entry  lor.lhs.false  if.end  if.else  
After path modifications process path
entry  lor.lhs.false  if.end  if.else  
Skip. No dependence graph for function pat_remove
 Processing function:pat_search
Short range hashing enabled.
Processing path: entry  if.end  do.body  if.then1  
After path modifications process path
if.then1  
Hash path invariants only
Invariants are
  br label %if.end2, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.true  
After path modifications process path
if.end2  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.true16  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.true16  
After path modifications process path
entry  if.end  do.end  cond.true16  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.end18  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.end18  
After path modifications process path
entry  if.end  do.end  cond.end18  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.false17  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.false17  
After path modifications process path
entry  if.end  do.end  cond.false17  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.false  
After path modifications process path
if.end2  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
 Skipping function per FilterFunctionPass:main
Extract path function for assertion assert_pat_search_path_0
Extract path function for assertion assert_pat_search_path_1
Extract path function for assertion assert_pat_search_path_2
Extract path function for assertion assert_pat_search_path_3
Extract path function for assertion assert_pat_search_path_4
Extract path function for assertion assert_pat_search_path_5
Extract path function for assertion assert_pat_search_path_6
Extract path function for assertion assert_pat_search_path_7
Extract path function for assertion assert_pat_search_path_8
Extract path function for assertion assert_pat_search_path_9
Extract path function for assertion assert_pat_search_path_10
Extract path function for assertion assert_pat_search_path_11
Extract path function for assertion assert_pat_search_path_12
Extract path function for assertion assert_pat_search_path_13
Extract path function for assertion assert_insertR_path_0
Extract path function for assertion assert_insertR_path_1
Extract path function for assertion assert_insertR_path_2
Extract path function for assertion assert_insertR_path_3
Extract path function for assertion assert_insertR_path_4
Extract path function for assertion assert_insertR_path_5
Extract path function for assertion assert_insertR_path_6
Extract path function for assertion assert_insertR_path_7
Extract path function for assertion assert_insertR_path_8
OH stats is requested, dumping stat file...
Processed instructions number 1072
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 56,
    "numberOfDataDependentInstructions": 127,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 512,
    "numberOfInstructionsInFunctionsWithNoDG": 375,
    "numberOfNonHashableBlocks": 2,
    "numberOfNonHashableInstructions": 5,
    "numberOfOHProcessedInstr": 185,
    "numberOfOtherUnprotectedInstructions": 0,
    "numberOfOtherUnprotectedLoopVariantInstructions": 0,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 0,
    "numberOfProtectedFunctions": 2,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveBlocks": 29,
    "numberOfSensitiveFunctions": 2,
    "numberOfShortRangeAssertCalls": 23,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 25,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 16,
    "numberOfUnprotectedArgumentReachableInstructions": 18,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 2,
    "numberOfUnprotectedGlobalReachableInstructions": 0,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 19
}
ERR. processed 2 function, while filter count is 4
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.7147 seconds (0.7147 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.4092 ( 57.6%)   0.0037 ( 98.8%)   0.4129 ( 57.8%)   0.4129 ( 57.8%)  runs input dependency analysis
   0.2829 ( 39.8%)   0.0000 (  0.0%)   0.2829 ( 39.6%)   0.2829 ( 39.6%)  Instruments bitcode with hashing and logging functions
   0.0092 (  1.3%)   0.0000 (  0.0%)   0.0092 (  1.3%)   0.0092 (  1.3%)  Memory SSA
   0.0027 (  0.4%)   0.0000 (  0.0%)   0.0027 (  0.4%)   0.0027 (  0.4%)  Bitcode Writer
   0.0019 (  0.3%)   0.0000 (  0.0%)   0.0019 (  0.3%)   0.0019 (  0.3%)  Include functions in a given file in any transformation
   0.0009 (  0.1%)   0.0000 (  0.0%)   0.0009 (  0.1%)   0.0009 (  0.1%)  Module Verifier
   0.0009 (  0.1%)   0.0000 (  0.0%)   0.0009 (  0.1%)   0.0009 (  0.1%)  Instruments bitcode with guards
   0.0007 (  0.1%)   0.0000 (  0.0%)   0.0007 (  0.1%)   0.0007 (  0.1%)  Dominator Tree Construction
   0.0005 (  0.1%)   0.0000 (  0.0%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Natural Loop Information
   0.0004 (  0.1%)   0.0000 (  0.1%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Dominator Tree Construction
   0.0004 (  0.1%)   0.0000 (  0.0%)   0.0004 (  0.1%)   0.0004 (  0.1%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Call site information
   0.0003 (  0.0%)   0.0000 (  0.1%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  runs indirect and virtual calls analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.5%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable blocks from the CFG
   0.0000 (  0.0%)   0.0000 (  0.4%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.7109 (100.0%)   0.0038 (100.0%)   0.7147 (100.0%)   0.7147 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0021 seconds (0.0021 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0010 (100.0%)   0.0010 (100.0%)   0.0021 (100.0%)   0.0021 (100.0%)  Parse IR
   0.0010 (100.0%)   0.0010 (100.0%)   0.0021 (100.0%)   0.0021 (100.0%)  Total

Running input dependency analysis pass
Processing function bit
Processing function pat_insert0
Processing function pat_insert1
Processing function insertR
Processing function pat_insert
Processing function pat_remove0
Processing function pat_remove1
Processing function pat_remove
Processing function pat_search
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function main4
Processing function main5
Processing function main6
Processing function main
Finalizing main
Finalizing main6
Mark Input dependent function main6
Finalizing main5
Mark Input dependent function main5
Finalizing main4
Mark Input dependent function main4
Finalizing main3
Mark Input dependent function main3
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing pat_search
Mark Input dependent function pat_search
Finalizing pat_remove
Finalizing pat_remove1
Mark Input dependent function pat_remove1
Finalizing pat_remove0
Mark Input dependent function pat_remove0
Finalizing pat_insert
Mark Input dependent function pat_insert
Finalizing insertR
Mark Input dependent function insertR
Finalizing pat_insert1
Mark Input dependent function pat_insert1
Finalizing pat_insert0
Mark Input dependent function pat_insert0
Finalizing bit
Mark Input dependent function bit
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/patricia.x.bc/50/0
here!:insertR
here!:pat_search
here!:main3
here!:pat_remove
here!:pat_remove1
here!:bit
here!:pat_insert1
here!:main5
here!:main4
here!:main4
got filter function names
did not find pat_insert demangled to pat_insert
Add filter function bit
FunctionInfo. Adding function:bit
did not find free demangled to free
did not find malloc demangled to malloc
did not find bcopy demangled to bcopy
Add filter function insertR
FunctionInfo. Adding function:insertR
Add filter function pat_remove
FunctionInfo. Adding function:pat_remove
Add filter function pat_search
FunctionInfo. Adding function:pat_search
did not find main demangled to main
did not find printf demangled to printf
did not find exit demangled to exit
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find fgets demangled to fgets
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find htonl demangled to htonl
did not find fprintf demangled to fprintf
did not find pat_insert0 demangled to pat_insert0
Add filter function pat_insert1
FunctionInfo. Adding function:pat_insert1
did not find pat_remove0 demangled to pat_remove0
Add filter function pat_remove1
FunctionInfo. Adding function:pat_remove1
did not find main0 demangled to main0
did not find main1 demangled to main1
did not find main2 demangled to main2
Add filter function main3
FunctionInfo. Adding function:main3
Add filter function main4
FunctionInfo. Adding function:main4
Add filter function main5
FunctionInfo. Adding function:main5
did not find main6 demangled to main6
Adding pat_insert other functions, ExtractedOnly mode uses other functions
Adding bit other functions, ExtractedOnly mode uses other functions
Adding insertR other functions, ExtractedOnly mode uses other functions
Adding pat_remove other functions, ExtractedOnly mode uses other functions
Adding pat_search other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding pat_insert0 other functions, ExtractedOnly mode uses other functions
Adding pat_insert1 other functions, ExtractedOnly mode uses other functions
Adding pat_remove0 other functions, ExtractedOnly mode uses other functions
Adding pat_remove1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding main4 other functions, ExtractedOnly mode uses other functions
Adding main5 other functions, ExtractedOnly mode uses other functions
Adding main6 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:17
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
main5
pat_insert0
pat_search
main
main1
pat_remove
main2
insertR
pat_insert
main6
main0
main3
pat_remove1
bit
pat_insert1
main4
pat_remove0
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 17 function, while filter count is 9
Functions called in loop
Function call numbers
main -- 0
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 14
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 15
  - operands: []
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %h.addr = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 9
 Skipping function per FilterFunctionPass:pat_insert
Collecting defining blocks for bit
Collecting defining blocks for insertR
Skip. No dependence graph for function pat_remove
Collecting defining blocks for pat_search
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:pat_insert
 Processing function:bit
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:insertR
Short range hashing enabled.
Processing path: entry  if.then  cond.true  
After path modifications process path
entry  if.then  cond.true  
Processing path: entry  if.then  cond.end  cond.true13  
After path modifications process path
entry  if.then  cond.end  cond.true13  
Processing path: entry  if.then  cond.end  cond.end15  
After path modifications process path
entry  if.then  cond.end  cond.end15  
Processing path: entry  if.then  cond.end  cond.false14  
After path modifications process path
entry  if.then  cond.end  cond.false14  
Processing path: entry  if.then  cond.false  
After path modifications process path
entry  if.then  cond.false  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  if.end  if.then22  
After path modifications process path
entry  lor.lhs.false  if.end  if.then22  
Processing path: entry  lor.lhs.false  if.end  if.end29  
After path modifications process path
entry  lor.lhs.false  if.end  if.end29  
Processing path: entry  lor.lhs.false  if.end  if.else  
After path modifications process path
entry  lor.lhs.false  if.end  if.else  
Skip. No dependence graph for function pat_remove
 Processing function:pat_search
Short range hashing enabled.
Processing path: entry  if.end  do.body  if.then1  
After path modifications process path
if.then1  
Hash path invariants only
Invariants are
  br label %if.end2, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.true  
After path modifications process path
if.end2  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.true16  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.true16  
After path modifications process path
entry  if.end  do.end  cond.true16  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.end18  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.end18  
After path modifications process path
entry  if.end  do.end  cond.end18  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.end  do.cond  do.end  cond.false17  
After path modifications process path
if.end2  cond.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  do.end  cond.false17  
After path modifications process path
entry  if.end  do.end  cond.false17  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.end  do.body  if.end2  cond.false  
After path modifications process path
if.end2  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  return  
After path modifications process path
entry  return  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.ptree*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.ptree*
 Skipping function per FilterFunctionPass:main
Extract path function for assertion assert_pat_search_path_0
Extract path function for assertion assert_pat_search_path_1
Extract path function for assertion assert_pat_search_path_2
Extract path function for assertion assert_pat_search_path_3
Extract path function for assertion assert_pat_search_path_4
Extract path function for assertion assert_pat_search_path_5
Extract path function for assertion assert_pat_search_path_6
Extract path function for assertion assert_pat_search_path_7
Extract path function for assertion assert_pat_search_path_8
Extract path function for assertion assert_pat_search_path_9
Extract path function for assertion assert_pat_search_path_10
Extract path function for assertion assert_pat_search_path_11
Extract path function for assertion assert_pat_search_path_12
Extract path function for assertion assert_pat_search_path_13
Extract path function for assertion assert_insertR_path_0
Extract path function for assertion assert_insertR_path_1
Extract path function for assertion assert_insertR_path_2
Extract path function for assertion assert_insertR_path_3
Extract path function for assertion assert_insertR_path_4
Extract path function for assertion assert_insertR_path_5
Extract path function for assertion assert_insertR_path_6
Extract path function for assertion assert_insertR_path_7
Extract path function for assertion assert_insertR_path_8
OH stats is requested, dumping stat file...
Processed instructions number 1072
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 56,
    "numberOfDataDependentInstructions": 138,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 501,
    "numberOfInstructionsInFunctionsWithNoDG": 375,
    "numberOfNonHashableBlocks": 3,
    "numberOfNonHashableInstructions": 5,
    "numberOfOHProcessedInstr": 196,
    "numberOfOtherUnprotectedInstructions": 0,
    "numberOfOtherUnprotectedLoopVariantInstructions": 0,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 0,
    "numberOfProtectedFunctions": 2,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveBlocks": 30,
    "numberOfSensitiveFunctions": 3,
    "numberOfShortRangeAssertCalls": 23,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 25,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 16,
    "numberOfUnprotectedArgumentReachableInstructions": 18,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 2,
    "numberOfUnprotectedGlobalReachableInstructions": 0,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 19
}
ERR. processed 3 function, while filter count is 9
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.7054 seconds (0.7054 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.3950 ( 57.1%)   0.0077 ( 58.2%)   0.4027 ( 57.1%)   0.4027 ( 57.1%)  runs input dependency analysis
   0.2783 ( 40.2%)   0.0040 ( 29.8%)   0.2823 ( 40.0%)   0.2823 ( 40.0%)  Instruments bitcode with hashing and logging functions
   0.0083 (  1.2%)   0.0014 ( 10.2%)   0.0097 (  1.4%)   0.0097 (  1.4%)  Memory SSA
   0.0027 (  0.4%)   0.0000 (  0.0%)   0.0027 (  0.4%)   0.0027 (  0.4%)  Bitcode Writer
   0.0021 (  0.3%)   0.0000 (  0.0%)   0.0021 (  0.3%)   0.0021 (  0.3%)  Include functions in a given file in any transformation
   0.0014 (  0.2%)   0.0000 (  0.0%)   0.0014 (  0.2%)   0.0014 (  0.2%)  Module Verifier
   0.0011 (  0.2%)   0.0000 (  0.0%)   0.0011 (  0.1%)   0.0011 (  0.1%)  Instruments bitcode with guards
   0.0006 (  0.1%)   0.0001 (  0.6%)   0.0007 (  0.1%)   0.0007 (  0.1%)  Dominator Tree Construction
   0.0005 (  0.1%)   0.0001 (  0.5%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Natural Loop Information
   0.0004 (  0.1%)   0.0000 (  0.2%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Dominator Tree Construction
   0.0004 (  0.1%)   0.0000 (  0.2%)   0.0005 (  0.1%)   0.0005 (  0.1%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Call site information
   0.0002 (  0.0%)   0.0000 (  0.1%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  runs indirect and virtual calls analysis
   0.0001 (  0.0%)   0.0000 (  0.1%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.1%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Remove unreachable blocks from the CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.6921 (100.0%)   0.0133 (100.0%)   0.7054 (100.0%)   0.7054 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0021 seconds (0.0021 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0011 (100.0%)   0.0011 (100.0%)   0.0021 (100.0%)   0.0021 (100.0%)  Parse IR
   0.0011 (100.0%)   0.0011 (100.0%)   0.0021 (100.0%)   0.0021 (100.0%)  Total

