Running input dependency analysis pass
Processing function spell_out0
Processing function xlate_string0
Processing function xlate_string1
Processing function xlate_string2
Processing function suspect_word0
Processing function suspect_word1
Processing function suspect_word2
Processing function suspect_word
Processing function dict_find
Processing function xlate_word0
Processing function xlate_word1
Processing function darray_find.4460
Processing function Darray_find0
Processing function Darray_find1
Processing function Darray_find2
Processing function Darray_find3
Processing function Darray_find4
Processing function Darray_find
Processing function darray_find.4461
Processing function darray_find.446
Processing function phone_append
Processing function xlate_word2
Processing function xlate_word3
Processing function xlate_word4
Processing function xlate_word6
Processing function xlate_word8
Processing function NRL0
Processing function NRL1
Processing function NRL2
Processing function NRL3
Processing function guess_word0
Processing function find_rule0
Processing function find_rule1
Processing function find_rule2
Processing function leftmatch0
Processing function leftmatch1
Processing function isvowel
Processing function leftmatch2
Processing function leftmatch3
Processing function isconsonant
Processing function leftmatch4
Processing function leftmatch5
Processing function leftmatch6
Processing function leftmatch7
Processing function leftmatch8
Processing function leftmatch9
Processing function leftmatch
Processing function rightmatch0
Processing function rightmatch1
Processing function rightmatch2
Processing function rightmatch3
Processing function rightmatch4
Processing function rightmatch5
Processing function rightmatch6
Processing function rightmatch7
Processing function rightmatch8
Processing function rightmatch9
Processing function rightmatch10
Processing function rightmatch11
Processing function rightmatch12
Processing function rightmatch13
Processing function rightmatch
Processing function find_rule3
Processing function find_rule
Processing function guess_word1
Processing function guess_word
Processing function NRL
Processing function xlate_word9
Processing function xlate_word10
Processing function xlate_word11
Processing function xlate_word12
Processing function xlate_string4
Processing function xlate_string6
Processing function xlate_string7
Processing function xlate_string8
Processing function xlate_cardinal1
Processing function xlate_cardinal3
Processing function xlate_cardinal5
Processing function xlate_cardinal7
Processing function xlate_cardinal8
Processing function xlate_string10
Processing function xlate_string13
Processing function darray_find0
Processing function darray_find1
Processing function darray_find
Processing function darray_init0
Processing function darray_init
Processing function phone_to_elm0
Processing function find_elm0
Processing function find_elm1
Processing function find_elm
Processing function enter0
Processing function enter1
Processing function trie_insert0
Processing function trie_insert1
Processing function trie_insert2
Processing function trie_insert3
Processing function trie_insert
Processing function enter2
Processing function enter
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function enter_phonemes
Processing function trie_lookup0
Processing function trie_lookup1
Processing function trie_lookup2
Processing function trie_lookup3
Processing function trie_lookup
Processing function phone_to_elm1
Processing function phone_to_elm2
Processing function phone_to_elm
Processing function say_phones0
Processing function holmes0
Processing function holmes1
Processing function setabc0
Processing function setabc
Processing function parwave_init0
Processing function parwave_init
Processing function holmes2
Processing function holmes3
Processing function set_trans0
Processing function set_trans1
Processing function set_trans
Processing function holmes4
Processing function holmes5
Processing function holmes6
Processing function holmes7
Processing function holmes8
Processing function holmes9
Processing function holmes10
Processing function holmes11
Processing function holmes12
Processing function holmes13
Processing function holmes14
Processing function holmes15
Processing function holmes16
Processing function linear0
Processing function linear1
Processing function linear2
Processing function linear
Processing function interpolate0
Processing function interpolate1
Processing function interpolate2
Processing function interpolate3
Processing function interpolate
Processing function filter
Processing function DBtoLIN0
Processing function DBtoLIN
Processing function frame_init0
Processing function frame_init1
Processing function frame_init2
Processing function frame_init3
Processing function setzeroabc0
Processing function setzeroabc
Processing function setabcg0
Processing function setabcg
Processing function frame_init4
Processing function frame_init
Processing function flutter0
Processing function flutter
Processing function parwave0
Processing function parwave1
Processing function parwave2
Processing function impulsive_source0
Processing function resonator
Processing function impulsive_source
Processing function parwave3
Processing function natural_source0
Processing function natural_source1
Processing function natural_source
Processing function parwave4
Processing function pitch_synch_par_reset0
Processing function pitch_synch_par_reset1
Processing function pitch_synch_par_reset2
Processing function pitch_synch_par_reset3
Processing function pitch_synch_par_reset4
Processing function pitch_synch_par_reset5
Processing function pitch_synch_par_reset6
Processing function pitch_synch_par_reset7
Processing function pitch_synch_par_reset8
Processing function pitch_synch_par_reset
Processing function parwave5
Processing function parwave6
Processing function parwave7
Processing function antiresonator
Processing function parwave8
Processing function parwave9
Processing function parwave10
Processing function parwave11
Processing function parwave12
Processing function parwave13
Processing function parwave14
Processing function parwave15
Processing function parwave16
Processing function dBconvert
Processing function overload_warning0
Processing function overload_warning
Processing function clip0
Processing function clip1
Processing function clip
Processing function parwave17
Processing function parwave18
Processing function parwave
Processing function holmes17
Processing function jsru_freq
Processing function jsru_amp
Processing function jsru_save0
Processing function jsru_save
Processing function holmes18
Processing function holmes19
Processing function holmes20
Processing function holmes21
Processing function holmes22
Processing function holmes
Processing function audio_play0
Processing function audio_play1
Processing function audio_play2
Processing function audio_play3
Processing function audio_play
Processing function say_phones1
Processing function say_phones2
Processing function darray_free0
Processing function darray_free1
Processing function darray_free
Processing function say_phones
Processing function xlate_string15
Processing function xlate_string16
Processing function xlate_string17
Processing function xlate_string18
Processing function xlate_string20
Processing function xlate_string22
Processing function xlate_string21
Processing function xlate_string19
Processing function xlate_string14
Processing function xlate_string12
Processing function xlate_string11
Processing function xlate_cardinal9
Processing function xlate_cardinal6
Processing function xlate_cardinal4
Processing function xlate_cardinal2
Processing function xlate_cardinal0
Processing function xlate_cardinal
Processing function xlate_string9
Processing function xlate_string5
Processing function xlate_word7
Processing function xlate_word5
Processing function xlate_word
Processing function xlate_string3
Processing function xlate_string
Processing function spell_out1
Processing function spell_out
Processing function concat_args0
Processing function concat_args1
Processing function concat_args2
Processing function concat_args3
Processing function concat_args4
Processing function concat_args5
Processing function concat_args6
Processing function concat_args
Processing function say_string0
Processing function say_string
Processing function darray_fget
Processing function say_file0
Processing function say_file1
Processing function say_file
Processing function getargs0
Processing function getargs1
Processing function getargs2
Processing function getargs3
Processing function getargs4
Processing function getargs5
Processing function getargs6
Processing function getargs7
Processing function getargs8
Processing function getargs9
Processing function getargs10
Processing function getargs11
Processing function getargs12
Processing function getargs13
Processing function getargs14
Processing function getargs15
Processing function getargs16
Processing function getargs17
Processing function getargs18
Processing function getargs19
Processing function getargs20
Processing function getargs21
Processing function getargs22
Processing function getargs23
Processing function getargs
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function audio_init0
Processing function audio_open0
Processing function audio_open
Processing function audio_init1
Processing function audio_init2
Processing function audio_init3
Processing function audio_init
Processing function init_synth0
Processing function init_synth1
Processing function init_synth
Processing function init_holmes0
Processing function init_holmes1
Processing function init_holmes2
Processing function init_holmes3
Processing function init_holmes
Processing function dict_init
Processing function file_init0
Processing function file_init1
Processing function wblong0
Processing function wblong
Processing function au_header0
Processing function au_header
Processing function file_init2
Processing function file_init3
Processing function file_init4
Processing function file_init5
Processing function file_init
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function audio_term0
Processing function audio_term1
Processing function audio_term
Processing function term_holmes0
Processing function term_holmes1
Processing function term_holmes
Processing function dict_term
Processing function main
Processing function xlate_ordinal0
Processing function xlate_ordinal1
Processing function xlate_ordinal2
Processing function xlate_ordinal3
Processing function xlate_ordinal4
Processing function xlate_ordinal5
Processing function xlate_ordinal6
Processing function xlate_ordinal7
Processing function xlate_ordinal8
Processing function xlate_ordinal9
Processing function xlate_ordinal10
Processing function xlate_ordinal11
Processing function xlate_ordinal
Processing function darray_find.730
Processing function darray_find.731
Processing function darray_find.73
Processing function darray_delete0
Processing function darray_delete1
Processing function darray_delete
Processing function phone_cat0
Processing function phone_cat1
Processing function phone_cat
Processing function show_parms0
Processing function show_parms1
Processing function show_parms
Processing function aufile_write0
Processing function aufile_write1
Processing function aufile_write2
Processing function aufile_write3
Processing function aufile_write4
Processing function aufile_write5
Processing function aufile_write6
Processing function aufile_write
Processing function aufile_term0
Processing function aufile_term1
Processing function aufile_term2
Processing function aufile_term
Finalizing aufile_term
Finalizing aufile_term2
Finalizing aufile_term1
Mark Input dependent function aufile_term1
Finalizing aufile_term0
Mark Input dependent function aufile_term0
Finalizing aufile_write
Finalizing aufile_write6
Mark Input dependent function aufile_write6
Finalizing aufile_write5
Mark Input dependent function aufile_write5
Finalizing aufile_write4
Mark Input dependent function aufile_write4
Finalizing aufile_write3
Mark Input dependent function aufile_write3
Finalizing aufile_write2
Mark Input dependent function aufile_write2
Finalizing aufile_write1
Mark Input dependent function aufile_write1
Finalizing aufile_write0
Mark Input dependent function aufile_write0
Finalizing show_parms
Finalizing show_parms1
Mark Input dependent function show_parms1
Finalizing show_parms0
Mark Input dependent function show_parms0
Finalizing phone_cat
Finalizing phone_cat1
Mark Input dependent function phone_cat1
Finalizing phone_cat0
Finalizing darray_delete
Finalizing darray_delete1
Mark Input dependent function darray_delete1
Finalizing darray_delete0
Mark Input dependent function darray_delete0
Finalizing darray_find.73
Mark Input dependent function darray_find.73
Finalizing darray_find.731
Mark Input dependent function darray_find.731
Finalizing darray_find.730
Mark Input dependent function darray_find.730
Finalizing xlate_ordinal
Finalizing xlate_ordinal11
Mark Input dependent function xlate_ordinal11
Finalizing xlate_ordinal10
Mark Input dependent function xlate_ordinal10
Finalizing xlate_ordinal9
Mark Input dependent function xlate_ordinal9
Finalizing xlate_ordinal8
Mark Input dependent function xlate_ordinal8
Finalizing xlate_ordinal7
Mark Input dependent function xlate_ordinal7
Finalizing xlate_ordinal6
Mark Input dependent function xlate_ordinal6
Finalizing xlate_ordinal5
Mark Input dependent function xlate_ordinal5
Finalizing xlate_ordinal4
Mark Input dependent function xlate_ordinal4
Finalizing xlate_ordinal3
Mark Input dependent function xlate_ordinal3
Finalizing xlate_ordinal2
Mark Input dependent function xlate_ordinal2
Finalizing xlate_ordinal1
Mark Input dependent function xlate_ordinal1
Finalizing xlate_ordinal0
Mark Input dependent function xlate_ordinal0
Finalizing main
Finalizing dict_term
Mark Input dependent function dict_term
Finalizing term_holmes
Mark Input dependent function term_holmes
Finalizing term_holmes1
Mark Input dependent function term_holmes1
Finalizing term_holmes0
Mark Input dependent function term_holmes0
Finalizing audio_term
Mark Input dependent function audio_term
Finalizing audio_term1
Mark Input dependent function audio_term1
Finalizing audio_term0
Mark Input dependent function audio_term0
Finalizing main3
Mark Input dependent function main3
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.10 = private unnamed_addr constant [6 x i8] c"(%s)\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.9 = private unnamed_addr constant [44 x i8] c"or     %s [options as above] < file-to-say\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.8 = private unnamed_addr constant [43 x i8] c"Usage: %s [options as above] words to say\0A\00", align 1
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing file_init
Finalizing file_init5
Mark Input dependent function file_init5
Finalizing file_init4
Mark Input dependent function file_init4
Finalizing file_init3
Mark Input dependent function file_init3
Finalizing file_init2
Mark Input dependent function file_init2
Finalizing au_header
Mark Input dependent function au_header
Finalizing au_header0
Mark Input dependent function au_header0
Finalizing wblong
Mark Input dependent function wblong
Finalizing wblong0
Mark Input dependent function wblong0
Finalizing file_init1
Mark Input dependent function file_init1
Finalizing file_init0
Mark Input dependent function file_init0
Finalizing dict_init
Finalizing init_holmes
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @frac = global double 1.000000e+00, align 8
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @speed = global i32 1, align 4
Finalizing init_holmes3
Mark Input dependent function init_holmes3
Finalizing init_holmes2
Mark Input dependent function init_holmes2
Finalizing init_holmes1
Mark Input dependent function init_holmes1
Finalizing init_holmes0
Mark Input dependent function init_holmes0
Finalizing init_synth
Finalizing init_synth1
Mark Input dependent function init_synth1
Finalizing init_synth0
Mark Input dependent function init_synth0
Finalizing audio_init
Finalizing audio_init3
Mark Input dependent function audio_init3
Finalizing audio_init2
Mark Input dependent function audio_init2
Finalizing audio_init1
Mark Input dependent function audio_init1
Finalizing audio_open
Mark Input dependent function audio_open
Finalizing audio_open0
Mark Input dependent function audio_open0
Finalizing audio_init0
Mark Input dependent function audio_init0
Finalizing getargs
Finalizing getargs23
Mark Input dependent function getargs23
Finalizing getargs22
Mark Input dependent function getargs22
Finalizing getargs21
Mark Input dependent function getargs21
Finalizing getargs20
Mark Input dependent function getargs20
Finalizing getargs19
Mark Input dependent function getargs19
Finalizing getargs18
Mark Input dependent function getargs18
Finalizing getargs17
Mark Input dependent function getargs17
Finalizing getargs16
Mark Input dependent function getargs16
Finalizing getargs15
Mark Input dependent function getargs15
Finalizing getargs14
Mark Input dependent function getargs14
Finalizing getargs13
Mark Input dependent function getargs13
Finalizing getargs12
Mark Input dependent function getargs12
Finalizing getargs11
Mark Input dependent function getargs11
Finalizing getargs10
Mark Input dependent function getargs10
Finalizing getargs9
Mark Input dependent function getargs9
Finalizing getargs8
Mark Input dependent function getargs8
Finalizing getargs7
Mark Input dependent function getargs7
Finalizing getargs6
Mark Input dependent function getargs6
Finalizing getargs5
Mark Input dependent function getargs5
Finalizing getargs4
Mark Input dependent function getargs4
Finalizing getargs3
Mark Input dependent function getargs3
Finalizing getargs2
Mark Input dependent function getargs2
Finalizing getargs1
Mark Input dependent function getargs1
Finalizing getargs0
Mark Input dependent function getargs0
Finalizing say_file
Mark Input dependent function say_file
Finalizing say_file1
Mark Input dependent function say_file1
Finalizing say_file0
Mark Input dependent function say_file0
Finalizing darray_fget
Mark Input dependent function darray_fget
Finalizing say_string
Mark Input dependent function say_string
Finalizing say_string0
Mark Input dependent function say_string0
Finalizing concat_args
Mark Input dependent function concat_args
Finalizing concat_args6
Mark Input dependent function concat_args6
Finalizing concat_args5
Mark Input dependent function concat_args5
Finalizing concat_args4
Mark Input dependent function concat_args4
Finalizing concat_args3
Mark Input dependent function concat_args3
Finalizing concat_args2
Mark Input dependent function concat_args2
Finalizing concat_args1
Mark Input dependent function concat_args1
Finalizing concat_args0
Mark Input dependent function concat_args0
Finalizing spell_out
Mark Input dependent function spell_out
Finalizing spell_out1
Mark Input dependent function spell_out1
Finalizing xlate_string
Mark Input dependent function xlate_string
Finalizing xlate_string3
Mark Input dependent function xlate_string3
Finalizing xlate_word
Mark Input dependent function xlate_word
Finalizing xlate_word5
Mark Input dependent function xlate_word5
Finalizing xlate_word7
Mark Input dependent function xlate_word7
Finalizing xlate_string5
Mark Input dependent function xlate_string5
Finalizing xlate_string9
Mark Input dependent function xlate_string9
Finalizing xlate_cardinal
Mark Input dependent function xlate_cardinal
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.7.21 = private unnamed_addr constant [8 x i8] c"hundred\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.3.17 = private unnamed_addr constant [8 x i8] c"billion\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.5.19 = private unnamed_addr constant [8 x i8] c"million\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.6.20 = private unnamed_addr constant [9 x i8] c"thousand\00", align 1
Finalizing xlate_cardinal0
Mark Input dependent function xlate_cardinal0
Finalizing xlate_cardinal2
Mark Input dependent function xlate_cardinal2
Finalizing xlate_cardinal4
Mark Input dependent function xlate_cardinal4
Finalizing xlate_cardinal6
Mark Input dependent function xlate_cardinal6
Finalizing xlate_cardinal9
Mark Input dependent function xlate_cardinal9
Finalizing xlate_string11
Mark Input dependent function xlate_string11
Finalizing xlate_string12
Mark Input dependent function xlate_string12
Finalizing xlate_string14
Mark Input dependent function xlate_string14
Finalizing xlate_string19
Mark Input dependent function xlate_string19
Finalizing xlate_string21
Mark Input dependent function xlate_string21
Finalizing xlate_string22
Mark Input dependent function xlate_string22
Finalizing xlate_string20
Mark Input dependent function xlate_string20
Finalizing xlate_string18
Mark Input dependent function xlate_string18
Finalizing xlate_string17
Mark Input dependent function xlate_string17
Finalizing xlate_string16
Mark Input dependent function xlate_string16
Finalizing xlate_string15
Mark Input dependent function xlate_string15
Finalizing say_phones
Mark Input dependent function say_phones
Finalizing darray_free
Mark Input dependent function darray_free
Finalizing darray_free1
Mark Input dependent function darray_free1
Finalizing darray_free0
Mark Input dependent function darray_free0
Finalizing say_phones2
Mark Input dependent function say_phones2
Finalizing say_phones1
Mark Input dependent function say_phones1
Finalizing audio_play
Mark Input dependent function audio_play
Finalizing audio_play3
Mark Input dependent function audio_play3
Finalizing audio_play2
Mark Input dependent function audio_play2
Finalizing audio_play1
Mark Input dependent function audio_play1
Finalizing audio_play0
Mark Input dependent function audio_play0
Finalizing holmes
Mark Input dependent function holmes
Finalizing holmes22
Mark Input dependent function holmes22
Finalizing holmes21
Mark Input dependent function holmes21
Finalizing holmes20
Mark Input dependent function holmes20
Finalizing holmes19
Mark Input dependent function holmes19
Finalizing holmes18
Mark Input dependent function holmes18
Finalizing jsru_save
Mark Input dependent function jsru_save
Finalizing jsru_save0
Mark Input dependent function jsru_save0
Finalizing jsru_amp
Mark Input dependent function jsru_amp
Finalizing jsru_freq
Mark Input dependent function jsru_freq
Finalizing holmes17
Mark Input dependent function holmes17
Finalizing parwave
Mark Input dependent function parwave
Finalizing parwave18
Mark Input dependent function parwave18
Finalizing parwave17
Mark Input dependent function parwave17
Finalizing clip
Mark Input dependent function clip
Finalizing clip1
Mark Input dependent function clip1
Finalizing clip0
Mark Input dependent function clip0
Finalizing overload_warning
Mark Input dependent function overload_warning
Finalizing overload_warning0
Mark Input dependent function overload_warning0
Finalizing dBconvert
Mark Input dependent function dBconvert
Finalizing parwave16
Mark Input dependent function parwave16
Finalizing parwave15
Mark Input dependent function parwave15
Finalizing parwave14
Mark Input dependent function parwave14
Finalizing parwave13
Mark Input dependent function parwave13
Finalizing parwave12
Mark Input dependent function parwave12
Finalizing parwave11
Mark Input dependent function parwave11
Finalizing parwave10
Mark Input dependent function parwave10
Finalizing parwave9
Mark Input dependent function parwave9
Finalizing parwave8
Mark Input dependent function parwave8
Finalizing antiresonator
Mark Input dependent function antiresonator
Finalizing parwave7
Mark Input dependent function parwave7
Finalizing parwave6
Mark Input dependent function parwave6
Finalizing parwave5
Mark Input dependent function parwave5
Finalizing pitch_synch_par_reset
Mark Input dependent function pitch_synch_par_reset
Finalizing pitch_synch_par_reset8
Mark Input dependent function pitch_synch_par_reset8
Finalizing pitch_synch_par_reset7
Mark Input dependent function pitch_synch_par_reset7
Finalizing pitch_synch_par_reset6
Mark Input dependent function pitch_synch_par_reset6
Finalizing pitch_synch_par_reset5
Mark Input dependent function pitch_synch_par_reset5
Finalizing pitch_synch_par_reset4
Mark Input dependent function pitch_synch_par_reset4
Finalizing pitch_synch_par_reset3
Mark Input dependent function pitch_synch_par_reset3
Finalizing pitch_synch_par_reset2
Mark Input dependent function pitch_synch_par_reset2
Finalizing pitch_synch_par_reset1
Mark Input dependent function pitch_synch_par_reset1
Finalizing pitch_synch_par_reset0
Mark Input dependent function pitch_synch_par_reset0
Finalizing parwave4
Mark Input dependent function parwave4
Finalizing natural_source
Mark Input dependent function natural_source
Finalizing natural_source1
Mark Input dependent function natural_source1
Finalizing natural_source0
Mark Input dependent function natural_source0
Finalizing parwave3
Mark Input dependent function parwave3
Finalizing impulsive_source
Mark Input dependent function impulsive_source
Finalizing resonator
Mark Input dependent function resonator
Finalizing impulsive_source0
Mark Input dependent function impulsive_source0
Finalizing parwave2
Mark Input dependent function parwave2
Finalizing parwave1
Mark Input dependent function parwave1
Finalizing parwave0
Mark Input dependent function parwave0
Finalizing flutter
Mark Input dependent function flutter
Finalizing flutter0
Mark Input dependent function flutter0
Finalizing frame_init
Mark Input dependent function frame_init
Finalizing frame_init4
Mark Input dependent function frame_init4
Finalizing setabcg
Mark Input dependent function setabcg
Finalizing setabcg0
Mark Input dependent function setabcg0
Finalizing setzeroabc
Mark Input dependent function setzeroabc
Finalizing setzeroabc0
Mark Input dependent function setzeroabc0
Finalizing frame_init3
Mark Input dependent function frame_init3
Finalizing frame_init2
Mark Input dependent function frame_init2
Finalizing frame_init1
Mark Input dependent function frame_init1
Finalizing frame_init0
Mark Input dependent function frame_init0
Finalizing DBtoLIN
Mark Input dependent function DBtoLIN
Finalizing DBtoLIN0
Mark Input dependent function DBtoLIN0
Finalizing filter
Mark Input dependent function filter
Finalizing interpolate
Mark Input dependent function interpolate
Finalizing interpolate3
Mark Input dependent function interpolate3
Finalizing interpolate2
Mark Input dependent function interpolate2
Finalizing interpolate1
Mark Input dependent function interpolate1
Finalizing interpolate0
Mark Input dependent function interpolate0
Finalizing linear
Mark Input dependent function linear
Finalizing linear2
Mark Input dependent function linear2
Finalizing linear1
Mark Input dependent function linear1
Finalizing linear0
Mark Input dependent function linear0
Finalizing holmes16
Mark Input dependent function holmes16
Finalizing holmes15
Mark Input dependent function holmes15
Finalizing holmes14
Mark Input dependent function holmes14
Finalizing holmes13
Mark Input dependent function holmes13
Finalizing holmes12
Mark Input dependent function holmes12
Finalizing holmes11
Mark Input dependent function holmes11
Finalizing holmes10
Mark Input dependent function holmes10
Finalizing holmes9
Mark Input dependent function holmes9
Finalizing holmes8
Mark Input dependent function holmes8
Finalizing holmes7
Mark Input dependent function holmes7
Finalizing holmes6
Mark Input dependent function holmes6
Finalizing holmes5
Mark Input dependent function holmes5
Finalizing holmes4
Mark Input dependent function holmes4
Finalizing set_trans
Mark Input dependent function set_trans
Finalizing set_trans1
Mark Input dependent function set_trans1
Finalizing set_trans0
Mark Input dependent function set_trans0
Finalizing holmes3
Mark Input dependent function holmes3
Finalizing holmes2
Mark Input dependent function holmes2
Finalizing parwave_init
Mark Input dependent function parwave_init
Finalizing parwave_init0
Mark Input dependent function parwave_init0
Finalizing setabc
Mark Input dependent function setabc
Finalizing setabc0
Mark Input dependent function setabc0
Finalizing holmes1
Mark Input dependent function holmes1
Finalizing holmes0
Mark Input dependent function holmes0
Finalizing say_phones0
Mark Input dependent function say_phones0
Finalizing phone_to_elm
Mark Input dependent function phone_to_elm
Finalizing phone_to_elm2
Mark Input dependent function phone_to_elm2
Finalizing phone_to_elm1
Mark Input dependent function phone_to_elm1
Finalizing trie_lookup
Mark Input dependent function trie_lookup
Finalizing trie_lookup3
Mark Input dependent function trie_lookup3
Finalizing trie_lookup2
Mark Input dependent function trie_lookup2
Finalizing trie_lookup1
Mark Input dependent function trie_lookup1
Finalizing trie_lookup0
Mark Input dependent function trie_lookup0
Finalizing enter_phonemes
Mark Input dependent function enter_phonemes
Finalizing enter
Mark Input dependent function enter
Finalizing enter2
Mark Input dependent function enter2
Finalizing trie_insert
Mark Input dependent function trie_insert
Finalizing trie_insert3
Mark Input dependent function trie_insert3
Finalizing trie_insert2
Mark Input dependent function trie_insert2
Finalizing trie_insert1
Mark Input dependent function trie_insert1
Finalizing trie_insert0
Mark Input dependent function trie_insert0
Finalizing enter1
Mark Input dependent function enter1
Finalizing enter0
Mark Input dependent function enter0
Finalizing find_elm
Mark Input dependent function find_elm
Finalizing find_elm1
Mark Input dependent function find_elm1
Finalizing find_elm0
Mark Input dependent function find_elm0
Finalizing phone_to_elm0
Mark Input dependent function phone_to_elm0
Finalizing darray_init
Mark Input dependent function darray_init
Finalizing darray_init0
Mark Input dependent function darray_init0
Finalizing darray_find
Mark Input dependent function darray_find
Finalizing darray_find1
Mark Input dependent function darray_find1
Finalizing darray_find0
Mark Input dependent function darray_find0
Finalizing xlate_string13
Mark Input dependent function xlate_string13
Finalizing xlate_string10
Mark Input dependent function xlate_string10
Finalizing xlate_cardinal8
Mark Input dependent function xlate_cardinal8
Finalizing xlate_cardinal7
Mark Input dependent function xlate_cardinal7
Finalizing xlate_cardinal5
Mark Input dependent function xlate_cardinal5
Finalizing xlate_cardinal3
Mark Input dependent function xlate_cardinal3
Finalizing xlate_cardinal1
Mark Input dependent function xlate_cardinal1
Finalizing xlate_string8
Mark Input dependent function xlate_string8
Finalizing xlate_string7
Mark Input dependent function xlate_string7
Finalizing xlate_string6
Mark Input dependent function xlate_string6
Finalizing xlate_string4
Mark Input dependent function xlate_string4
Finalizing xlate_word12
Mark Input dependent function xlate_word12
Finalizing xlate_word11
Mark Input dependent function xlate_word11
Finalizing xlate_word10
Mark Input dependent function xlate_word10
Finalizing xlate_word9
Mark Input dependent function xlate_word9
Finalizing NRL
Mark Input dependent function NRL
Finalizing guess_word
Mark Input dependent function guess_word
Finalizing guess_word1
Mark Input dependent function guess_word1
Finalizing find_rule
Mark Input dependent function find_rule
Finalizing find_rule3
Mark Input dependent function find_rule3
Finalizing rightmatch
Mark Input dependent function rightmatch
Finalizing rightmatch13
Mark Input dependent function rightmatch13
Finalizing rightmatch12
Mark Input dependent function rightmatch12
Finalizing rightmatch11
Mark Input dependent function rightmatch11
Finalizing rightmatch10
Mark Input dependent function rightmatch10
Finalizing rightmatch9
Mark Input dependent function rightmatch9
Finalizing rightmatch8
Mark Input dependent function rightmatch8
Finalizing rightmatch7
Mark Input dependent function rightmatch7
Finalizing rightmatch6
Mark Input dependent function rightmatch6
Finalizing rightmatch5
Mark Input dependent function rightmatch5
Finalizing rightmatch4
Mark Input dependent function rightmatch4
Finalizing rightmatch3
Mark Input dependent function rightmatch3
Finalizing rightmatch2
Mark Input dependent function rightmatch2
Finalizing rightmatch1
Mark Input dependent function rightmatch1
Finalizing rightmatch0
Mark Input dependent function rightmatch0
Finalizing leftmatch
Mark Input dependent function leftmatch
Finalizing leftmatch9
Mark Input dependent function leftmatch9
Finalizing leftmatch8
Mark Input dependent function leftmatch8
Finalizing leftmatch7
Mark Input dependent function leftmatch7
Finalizing leftmatch6
Mark Input dependent function leftmatch6
Finalizing leftmatch5
Mark Input dependent function leftmatch5
Finalizing leftmatch4
Mark Input dependent function leftmatch4
Finalizing isconsonant
Mark Input dependent function isconsonant
Finalizing leftmatch3
Mark Input dependent function leftmatch3
Finalizing leftmatch2
Mark Input dependent function leftmatch2
Finalizing isvowel
Mark Input dependent function isvowel
Finalizing leftmatch1
Mark Input dependent function leftmatch1
Finalizing leftmatch0
Mark Input dependent function leftmatch0
Finalizing find_rule2
Mark Input dependent function find_rule2
Finalizing find_rule1
Mark Input dependent function find_rule1
Finalizing find_rule0
Mark Input dependent function find_rule0
Finalizing guess_word0
Mark Input dependent function guess_word0
Finalizing NRL3
Mark Input dependent function NRL3
Finalizing NRL2
Mark Input dependent function NRL2
Finalizing NRL1
Mark Input dependent function NRL1
Finalizing NRL0
Mark Input dependent function NRL0
Finalizing xlate_word8
Mark Input dependent function xlate_word8
Finalizing xlate_word6
Mark Input dependent function xlate_word6
Finalizing xlate_word4
Mark Input dependent function xlate_word4
Finalizing xlate_word3
Mark Input dependent function xlate_word3
Finalizing xlate_word2
Mark Input dependent function xlate_word2
Finalizing phone_append
Mark Input dependent function phone_append
Finalizing darray_find.446
Mark Input dependent function darray_find.446
Finalizing darray_find.4461
Mark Input dependent function darray_find.4461
Finalizing Darray_find
Mark Input dependent function Darray_find
Finalizing Darray_find4
Mark Input dependent function Darray_find4
Finalizing Darray_find3
Mark Input dependent function Darray_find3
Finalizing Darray_find2
Mark Input dependent function Darray_find2
Finalizing Darray_find1
Mark Input dependent function Darray_find1
Finalizing Darray_find0
Mark Input dependent function Darray_find0
Finalizing darray_find.4460
Mark Input dependent function darray_find.4460
Finalizing xlate_word1
Mark Input dependent function xlate_word1
Finalizing xlate_word0
Mark Input dependent function xlate_word0
Finalizing dict_find
Mark Input dependent function dict_find
Finalizing suspect_word
Mark Input dependent function suspect_word
Finalizing suspect_word2
Mark Input dependent function suspect_word2
Finalizing suspect_word1
Mark Input dependent function suspect_word1
Finalizing suspect_word0
Mark Input dependent function suspect_word0
Finalizing xlate_string2
Mark Input dependent function xlate_string2
Finalizing xlate_string1
Mark Input dependent function xlate_string1
Finalizing xlate_string0
Mark Input dependent function xlate_string0
Finalizing spell_out0
Mark Input dependent function spell_out0
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/say.x.bc/10/0
here!:xlate_ordinal2
here!:leftmatch6
here!:jsru_save
here!:rightmatch
here!:holmes9
here!:rightmatch12
here!:xlate_string0
here!:overload_warning0
here!:enter0
here!:getargs18
here!:parwave12
here!:rightmatch13
here!:parwave6
here!:xlate_string12
here!:darray_find.4461
here!:antiresonator
here!:darray_find0
here!:Darray_find
here!:main1
here!:parwave1
here!:getargs21
here!:concat_args4
here!:audio_open0
here!:parwave3
here!:natural_source
here!:rightmatch8
here!:init_synth1
here!:isvowel
here!:pitch_synch_par_reset5
here!:holmes15
here!:jsru_freq
here!:audio_init3
here!:pitch_synch_par_reset8
here!:holmes1
here!:getargs22
here!:xlate_ordinal
here!:xlate_ordinal
got filter function names
did not find spell_out demangled to spell_out
did not find fprintf demangled to fprintf
did not find xlate_string demangled to xlate_string
did not find __ctype_b_loc demangled to __ctype_b_loc
did not find suspect_word demangled to suspect_word
did not find xlate_word demangled to xlate_word
did not find strchr demangled to strchr
did not find darray_find demangled to darray_find
did not find say_phones demangled to say_phones
did not find darray_init demangled to darray_init
did not find malloc demangled to malloc
did not find free demangled to free
did not find toupper demangled to toupper
did not find concat_args demangled to concat_args
did not find strlen demangled to strlen
did not find say_string demangled to say_string
did not find darray_fget demangled to darray_fget
did not find fgetc demangled to fgetc
did not find say_file demangled to say_file
did not find main demangled to main
did not find xlate_cardinal demangled to xlate_cardinal
Add filter function xlate_ordinal
FunctionInfo. Adding function:xlate_ordinal
did not find darray_free demangled to darray_free
Add filter function Darray_find
FunctionInfo. Adding function:Darray_find
did not find abort demangled to abort
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find darray_delete demangled to darray_delete
did not find darray_find.73 demangled to darray_find.73
Add filter function isvowel
FunctionInfo. Adding function:isvowel
did not find isconsonant demangled to isconsonant
did not find NRL demangled to NRL
did not find phone_cat demangled to phone_cat
did not find guess_word demangled to guess_word
did not find find_rule demangled to find_rule
did not find leftmatch demangled to leftmatch
Add filter function rightmatch
FunctionInfo. Adding function:rightmatch
did not find trie_insert demangled to trie_insert
did not find trie_lookup demangled to trie_lookup
did not find phone_append demangled to phone_append
did not find darray_find.446 demangled to darray_find.446
did not find phone_to_elm demangled to phone_to_elm
did not find enter_phonemes demangled to enter_phonemes
did not find enter demangled to enter
did not find llvm.va_start demangled to llvm.va_start
did not find find_elm demangled to find_elm
did not find llvm.va_end demangled to llvm.va_end
did not find strcmp demangled to strcmp
did not find holmes demangled to holmes
did not find set_trans demangled to set_trans
did not find interpolate demangled to interpolate
did not find filter demangled to filter
Add filter function jsru_save
FunctionInfo. Adding function:jsru_save
did not find log demangled to log
Add filter function jsru_freq
FunctionInfo. Adding function:jsru_freq
did not find fputc demangled to fputc
did not find jsru_amp demangled to jsru_amp
did not find linear demangled to linear
did not find init_holmes demangled to init_holmes
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find term_holmes demangled to term_holmes
did not find fclose demangled to fclose
did not find show_parms demangled to show_parms
did not find printf demangled to printf
did not find parwave demangled to parwave
did not find frame_init demangled to frame_init
did not find flutter demangled to flutter
did not find impulsive_source demangled to impulsive_source
Add filter function natural_source
FunctionInfo. Adding function:natural_source
did not find pitch_synch_par_reset demangled to pitch_synch_par_reset
did not find resonator demangled to resonator
Add filter function antiresonator
FunctionInfo. Adding function:antiresonator
did not find clip demangled to clip
did not find overload_warning demangled to overload_warning
did not find dBconvert demangled to dBconvert
did not find log10 demangled to log10
did not find DBtoLIN demangled to DBtoLIN
did not find setabc demangled to setabc
did not find exp demangled to exp
did not find cos demangled to cos
did not find sin demangled to sin
did not find setzeroabc demangled to setzeroabc
did not find setabcg demangled to setabcg
did not find parwave_init demangled to parwave_init
did not find init_synth demangled to init_synth
did not find au_header demangled to au_header
did not find wblong demangled to wblong
did not find write demangled to write
did not find file_init demangled to file_init
did not find open demangled to open
did not find aufile_write demangled to aufile_write
did not find aufile_term demangled to aufile_term
did not find lseek demangled to lseek
did not find ftruncate demangled to ftruncate
did not find close demangled to close
did not find dict_find demangled to dict_find
did not find dict_init demangled to dict_init
did not find dict_term demangled to dict_term
did not find getargs demangled to getargs
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find audio_init demangled to audio_init
did not find audio_open demangled to audio_open
did not find ioctl demangled to ioctl
did not find audio_term demangled to audio_term
did not find audio_play demangled to audio_play
did not find exit demangled to exit
did not find spell_out0 demangled to spell_out0
did not find spell_out1 demangled to spell_out1
Add filter function xlate_string0
FunctionInfo. Adding function:xlate_string0
did not find xlate_string1 demangled to xlate_string1
did not find xlate_string2 demangled to xlate_string2
did not find xlate_string3 demangled to xlate_string3
did not find xlate_string4 demangled to xlate_string4
did not find xlate_string5 demangled to xlate_string5
did not find xlate_string6 demangled to xlate_string6
did not find xlate_string7 demangled to xlate_string7
did not find xlate_string8 demangled to xlate_string8
did not find xlate_string9 demangled to xlate_string9
did not find xlate_string10 demangled to xlate_string10
did not find xlate_string11 demangled to xlate_string11
Add filter function xlate_string12
FunctionInfo. Adding function:xlate_string12
did not find xlate_string13 demangled to xlate_string13
did not find xlate_string14 demangled to xlate_string14
did not find xlate_string15 demangled to xlate_string15
did not find xlate_string16 demangled to xlate_string16
did not find xlate_string17 demangled to xlate_string17
did not find xlate_string18 demangled to xlate_string18
did not find xlate_string19 demangled to xlate_string19
did not find xlate_string20 demangled to xlate_string20
did not find xlate_string21 demangled to xlate_string21
did not find xlate_string22 demangled to xlate_string22
did not find suspect_word0 demangled to suspect_word0
did not find suspect_word1 demangled to suspect_word1
did not find suspect_word2 demangled to suspect_word2
did not find xlate_word0 demangled to xlate_word0
did not find xlate_word1 demangled to xlate_word1
did not find xlate_word2 demangled to xlate_word2
did not find xlate_word3 demangled to xlate_word3
did not find xlate_word4 demangled to xlate_word4
did not find xlate_word5 demangled to xlate_word5
did not find xlate_word6 demangled to xlate_word6
did not find xlate_word7 demangled to xlate_word7
did not find xlate_word8 demangled to xlate_word8
did not find xlate_word9 demangled to xlate_word9
did not find xlate_word10 demangled to xlate_word10
did not find xlate_word11 demangled to xlate_word11
did not find xlate_word12 demangled to xlate_word12
Add filter function darray_find0
FunctionInfo. Adding function:darray_find0
did not find darray_find1 demangled to darray_find1
did not find say_phones0 demangled to say_phones0
did not find say_phones1 demangled to say_phones1
did not find say_phones2 demangled to say_phones2
did not find darray_init0 demangled to darray_init0
did not find concat_args0 demangled to concat_args0
did not find concat_args1 demangled to concat_args1
did not find concat_args2 demangled to concat_args2
did not find concat_args3 demangled to concat_args3
Add filter function concat_args4
FunctionInfo. Adding function:concat_args4
did not find concat_args5 demangled to concat_args5
did not find concat_args6 demangled to concat_args6
did not find say_string0 demangled to say_string0
did not find say_file0 demangled to say_file0
did not find say_file1 demangled to say_file1
did not find main0 demangled to main0
Add filter function main1
FunctionInfo. Adding function:main1
did not find main2 demangled to main2
did not find main3 demangled to main3
did not find xlate_cardinal0 demangled to xlate_cardinal0
did not find xlate_cardinal1 demangled to xlate_cardinal1
did not find xlate_cardinal2 demangled to xlate_cardinal2
did not find xlate_cardinal3 demangled to xlate_cardinal3
did not find xlate_cardinal4 demangled to xlate_cardinal4
did not find xlate_cardinal5 demangled to xlate_cardinal5
did not find xlate_cardinal6 demangled to xlate_cardinal6
did not find xlate_cardinal7 demangled to xlate_cardinal7
did not find xlate_cardinal8 demangled to xlate_cardinal8
did not find xlate_cardinal9 demangled to xlate_cardinal9
did not find xlate_ordinal0 demangled to xlate_ordinal0
did not find xlate_ordinal1 demangled to xlate_ordinal1
Add filter function xlate_ordinal2
FunctionInfo. Adding function:xlate_ordinal2
did not find xlate_ordinal3 demangled to xlate_ordinal3
did not find xlate_ordinal4 demangled to xlate_ordinal4
did not find xlate_ordinal5 demangled to xlate_ordinal5
did not find xlate_ordinal6 demangled to xlate_ordinal6
did not find xlate_ordinal7 demangled to xlate_ordinal7
did not find xlate_ordinal8 demangled to xlate_ordinal8
did not find xlate_ordinal9 demangled to xlate_ordinal9
did not find xlate_ordinal10 demangled to xlate_ordinal10
did not find xlate_ordinal11 demangled to xlate_ordinal11
did not find darray_free0 demangled to darray_free0
did not find darray_free1 demangled to darray_free1
did not find Darray_find0 demangled to Darray_find0
did not find Darray_find1 demangled to Darray_find1
did not find Darray_find2 demangled to Darray_find2
did not find Darray_find3 demangled to Darray_find3
did not find Darray_find4 demangled to Darray_find4
did not find darray_delete0 demangled to darray_delete0
did not find darray_delete1 demangled to darray_delete1
did not find darray_find.730 demangled to darray_find.730
did not find darray_find.731 demangled to darray_find.731
did not find NRL0 demangled to NRL0
did not find NRL1 demangled to NRL1
did not find NRL2 demangled to NRL2
did not find NRL3 demangled to NRL3
did not find phone_cat0 demangled to phone_cat0
did not find phone_cat1 demangled to phone_cat1
did not find guess_word0 demangled to guess_word0
did not find guess_word1 demangled to guess_word1
did not find find_rule0 demangled to find_rule0
did not find find_rule1 demangled to find_rule1
did not find find_rule2 demangled to find_rule2
did not find find_rule3 demangled to find_rule3
did not find leftmatch0 demangled to leftmatch0
did not find leftmatch1 demangled to leftmatch1
did not find leftmatch2 demangled to leftmatch2
did not find leftmatch3 demangled to leftmatch3
did not find leftmatch4 demangled to leftmatch4
did not find leftmatch5 demangled to leftmatch5
Add filter function leftmatch6
FunctionInfo. Adding function:leftmatch6
did not find leftmatch7 demangled to leftmatch7
did not find leftmatch8 demangled to leftmatch8
did not find leftmatch9 demangled to leftmatch9
did not find rightmatch0 demangled to rightmatch0
did not find rightmatch1 demangled to rightmatch1
did not find rightmatch2 demangled to rightmatch2
did not find rightmatch3 demangled to rightmatch3
did not find rightmatch4 demangled to rightmatch4
did not find rightmatch5 demangled to rightmatch5
did not find rightmatch6 demangled to rightmatch6
did not find rightmatch7 demangled to rightmatch7
Add filter function rightmatch8
FunctionInfo. Adding function:rightmatch8
did not find rightmatch9 demangled to rightmatch9
did not find rightmatch10 demangled to rightmatch10
did not find rightmatch11 demangled to rightmatch11
Add filter function rightmatch12
FunctionInfo. Adding function:rightmatch12
Add filter function rightmatch13
FunctionInfo. Adding function:rightmatch13
did not find trie_insert0 demangled to trie_insert0
did not find trie_insert1 demangled to trie_insert1
did not find trie_insert2 demangled to trie_insert2
did not find trie_insert3 demangled to trie_insert3
did not find trie_lookup0 demangled to trie_lookup0
did not find trie_lookup1 demangled to trie_lookup1
did not find trie_lookup2 demangled to trie_lookup2
did not find trie_lookup3 demangled to trie_lookup3
did not find darray_find.4460 demangled to darray_find.4460
Add filter function darray_find.4461
FunctionInfo. Adding function:darray_find.4461
did not find phone_to_elm0 demangled to phone_to_elm0
did not find phone_to_elm1 demangled to phone_to_elm1
did not find phone_to_elm2 demangled to phone_to_elm2
Add filter function enter0
FunctionInfo. Adding function:enter0
did not find enter1 demangled to enter1
did not find enter2 demangled to enter2
did not find find_elm0 demangled to find_elm0
did not find find_elm1 demangled to find_elm1
did not find holmes0 demangled to holmes0
Add filter function holmes1
FunctionInfo. Adding function:holmes1
did not find holmes2 demangled to holmes2
did not find holmes3 demangled to holmes3
did not find holmes4 demangled to holmes4
did not find holmes5 demangled to holmes5
did not find holmes6 demangled to holmes6
did not find holmes7 demangled to holmes7
did not find holmes8 demangled to holmes8
Add filter function holmes9
FunctionInfo. Adding function:holmes9
did not find holmes10 demangled to holmes10
did not find holmes11 demangled to holmes11
did not find holmes12 demangled to holmes12
did not find holmes13 demangled to holmes13
did not find holmes14 demangled to holmes14
Add filter function holmes15
FunctionInfo. Adding function:holmes15
did not find holmes16 demangled to holmes16
did not find holmes17 demangled to holmes17
did not find holmes18 demangled to holmes18
did not find holmes19 demangled to holmes19
did not find holmes20 demangled to holmes20
did not find holmes21 demangled to holmes21
did not find holmes22 demangled to holmes22
did not find set_trans0 demangled to set_trans0
did not find set_trans1 demangled to set_trans1
did not find interpolate0 demangled to interpolate0
did not find interpolate1 demangled to interpolate1
did not find interpolate2 demangled to interpolate2
did not find interpolate3 demangled to interpolate3
did not find jsru_save0 demangled to jsru_save0
did not find linear0 demangled to linear0
did not find linear1 demangled to linear1
did not find linear2 demangled to linear2
did not find init_holmes0 demangled to init_holmes0
did not find init_holmes1 demangled to init_holmes1
did not find init_holmes2 demangled to init_holmes2
did not find init_holmes3 demangled to init_holmes3
did not find term_holmes0 demangled to term_holmes0
did not find term_holmes1 demangled to term_holmes1
did not find show_parms0 demangled to show_parms0
did not find show_parms1 demangled to show_parms1
did not find parwave0 demangled to parwave0
Add filter function parwave1
FunctionInfo. Adding function:parwave1
did not find parwave2 demangled to parwave2
Add filter function parwave3
FunctionInfo. Adding function:parwave3
did not find parwave4 demangled to parwave4
did not find parwave5 demangled to parwave5
Add filter function parwave6
FunctionInfo. Adding function:parwave6
did not find parwave7 demangled to parwave7
did not find parwave8 demangled to parwave8
did not find parwave9 demangled to parwave9
did not find parwave10 demangled to parwave10
did not find parwave11 demangled to parwave11
Add filter function parwave12
FunctionInfo. Adding function:parwave12
did not find parwave13 demangled to parwave13
did not find parwave14 demangled to parwave14
did not find parwave15 demangled to parwave15
did not find parwave16 demangled to parwave16
did not find parwave17 demangled to parwave17
did not find parwave18 demangled to parwave18
did not find frame_init0 demangled to frame_init0
did not find frame_init1 demangled to frame_init1
did not find frame_init2 demangled to frame_init2
did not find frame_init3 demangled to frame_init3
did not find frame_init4 demangled to frame_init4
did not find flutter0 demangled to flutter0
did not find impulsive_source0 demangled to impulsive_source0
did not find natural_source0 demangled to natural_source0
did not find natural_source1 demangled to natural_source1
did not find pitch_synch_par_reset0 demangled to pitch_synch_par_reset0
did not find pitch_synch_par_reset1 demangled to pitch_synch_par_reset1
did not find pitch_synch_par_reset2 demangled to pitch_synch_par_reset2
did not find pitch_synch_par_reset3 demangled to pitch_synch_par_reset3
did not find pitch_synch_par_reset4 demangled to pitch_synch_par_reset4
Add filter function pitch_synch_par_reset5
FunctionInfo. Adding function:pitch_synch_par_reset5
did not find pitch_synch_par_reset6 demangled to pitch_synch_par_reset6
did not find pitch_synch_par_reset7 demangled to pitch_synch_par_reset7
Add filter function pitch_synch_par_reset8
FunctionInfo. Adding function:pitch_synch_par_reset8
did not find clip0 demangled to clip0
did not find clip1 demangled to clip1
Add filter function overload_warning0
FunctionInfo. Adding function:overload_warning0
did not find DBtoLIN0 demangled to DBtoLIN0
did not find setabc0 demangled to setabc0
did not find setzeroabc0 demangled to setzeroabc0
did not find setabcg0 demangled to setabcg0
did not find parwave_init0 demangled to parwave_init0
did not find init_synth0 demangled to init_synth0
Add filter function init_synth1
FunctionInfo. Adding function:init_synth1
did not find au_header0 demangled to au_header0
did not find wblong0 demangled to wblong0
did not find file_init0 demangled to file_init0
did not find file_init1 demangled to file_init1
did not find file_init2 demangled to file_init2
did not find file_init3 demangled to file_init3
did not find file_init4 demangled to file_init4
did not find file_init5 demangled to file_init5
did not find aufile_write0 demangled to aufile_write0
did not find aufile_write1 demangled to aufile_write1
did not find aufile_write2 demangled to aufile_write2
did not find aufile_write3 demangled to aufile_write3
did not find aufile_write4 demangled to aufile_write4
did not find aufile_write5 demangled to aufile_write5
did not find aufile_write6 demangled to aufile_write6
did not find aufile_term0 demangled to aufile_term0
did not find aufile_term1 demangled to aufile_term1
did not find aufile_term2 demangled to aufile_term2
did not find getargs0 demangled to getargs0
did not find getargs1 demangled to getargs1
did not find getargs2 demangled to getargs2
did not find getargs3 demangled to getargs3
did not find getargs4 demangled to getargs4
did not find getargs5 demangled to getargs5
did not find getargs6 demangled to getargs6
did not find getargs7 demangled to getargs7
did not find getargs8 demangled to getargs8
did not find getargs9 demangled to getargs9
did not find getargs10 demangled to getargs10
did not find getargs11 demangled to getargs11
did not find getargs12 demangled to getargs12
did not find getargs13 demangled to getargs13
did not find getargs14 demangled to getargs14
did not find getargs15 demangled to getargs15
did not find getargs16 demangled to getargs16
did not find getargs17 demangled to getargs17
Add filter function getargs18
FunctionInfo. Adding function:getargs18
did not find getargs19 demangled to getargs19
did not find getargs20 demangled to getargs20
Add filter function getargs21
FunctionInfo. Adding function:getargs21
Add filter function getargs22
FunctionInfo. Adding function:getargs22
did not find getargs23 demangled to getargs23
did not find audio_init0 demangled to audio_init0
did not find audio_init1 demangled to audio_init1
did not find audio_init2 demangled to audio_init2
Add filter function audio_init3
FunctionInfo. Adding function:audio_init3
Add filter function audio_open0
FunctionInfo. Adding function:audio_open0
did not find audio_term0 demangled to audio_term0
did not find audio_term1 demangled to audio_term1
did not find audio_play0 demangled to audio_play0
did not find audio_play1 demangled to audio_play1
did not find audio_play2 demangled to audio_play2
did not find audio_play3 demangled to audio_play3
Adding spell_out other functions, ExtractedOnly mode uses other functions
Adding xlate_string other functions, ExtractedOnly mode uses other functions
Adding suspect_word other functions, ExtractedOnly mode uses other functions
Adding xlate_word other functions, ExtractedOnly mode uses other functions
Adding darray_find other functions, ExtractedOnly mode uses other functions
Adding say_phones other functions, ExtractedOnly mode uses other functions
Adding darray_init other functions, ExtractedOnly mode uses other functions
Adding concat_args other functions, ExtractedOnly mode uses other functions
Adding say_string other functions, ExtractedOnly mode uses other functions
Adding darray_fget other functions, ExtractedOnly mode uses other functions
Adding say_file other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal other functions, ExtractedOnly mode uses other functions
Adding darray_free other functions, ExtractedOnly mode uses other functions
Adding Darray_find other functions, ExtractedOnly mode uses other functions
Adding darray_delete other functions, ExtractedOnly mode uses other functions
Adding darray_find.73 other functions, ExtractedOnly mode uses other functions
Adding isvowel other functions, ExtractedOnly mode uses other functions
Adding isconsonant other functions, ExtractedOnly mode uses other functions
Adding NRL other functions, ExtractedOnly mode uses other functions
Adding phone_cat other functions, ExtractedOnly mode uses other functions
Adding guess_word other functions, ExtractedOnly mode uses other functions
Adding find_rule other functions, ExtractedOnly mode uses other functions
Adding leftmatch other functions, ExtractedOnly mode uses other functions
Adding rightmatch other functions, ExtractedOnly mode uses other functions
Adding trie_insert other functions, ExtractedOnly mode uses other functions
Adding trie_lookup other functions, ExtractedOnly mode uses other functions
Adding phone_append other functions, ExtractedOnly mode uses other functions
Adding darray_find.446 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm other functions, ExtractedOnly mode uses other functions
Adding enter_phonemes other functions, ExtractedOnly mode uses other functions
Adding enter other functions, ExtractedOnly mode uses other functions
Adding find_elm other functions, ExtractedOnly mode uses other functions
Adding holmes other functions, ExtractedOnly mode uses other functions
Adding set_trans other functions, ExtractedOnly mode uses other functions
Adding interpolate other functions, ExtractedOnly mode uses other functions
Adding filter other functions, ExtractedOnly mode uses other functions
Adding jsru_save other functions, ExtractedOnly mode uses other functions
Adding jsru_freq other functions, ExtractedOnly mode uses other functions
Adding jsru_amp other functions, ExtractedOnly mode uses other functions
Adding linear other functions, ExtractedOnly mode uses other functions
Adding init_holmes other functions, ExtractedOnly mode uses other functions
Adding term_holmes other functions, ExtractedOnly mode uses other functions
Adding show_parms other functions, ExtractedOnly mode uses other functions
Adding parwave other functions, ExtractedOnly mode uses other functions
Adding frame_init other functions, ExtractedOnly mode uses other functions
Adding flutter other functions, ExtractedOnly mode uses other functions
Adding impulsive_source other functions, ExtractedOnly mode uses other functions
Adding natural_source other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset other functions, ExtractedOnly mode uses other functions
Adding resonator other functions, ExtractedOnly mode uses other functions
Adding antiresonator other functions, ExtractedOnly mode uses other functions
Adding clip other functions, ExtractedOnly mode uses other functions
Adding overload_warning other functions, ExtractedOnly mode uses other functions
Adding dBconvert other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN other functions, ExtractedOnly mode uses other functions
Adding setabc other functions, ExtractedOnly mode uses other functions
Adding setzeroabc other functions, ExtractedOnly mode uses other functions
Adding setabcg other functions, ExtractedOnly mode uses other functions
Adding parwave_init other functions, ExtractedOnly mode uses other functions
Adding init_synth other functions, ExtractedOnly mode uses other functions
Adding au_header other functions, ExtractedOnly mode uses other functions
Adding wblong other functions, ExtractedOnly mode uses other functions
Adding file_init other functions, ExtractedOnly mode uses other functions
Adding aufile_write other functions, ExtractedOnly mode uses other functions
Adding aufile_term other functions, ExtractedOnly mode uses other functions
Adding dict_find other functions, ExtractedOnly mode uses other functions
Adding dict_init other functions, ExtractedOnly mode uses other functions
Adding dict_term other functions, ExtractedOnly mode uses other functions
Adding getargs other functions, ExtractedOnly mode uses other functions
Adding audio_init other functions, ExtractedOnly mode uses other functions
Adding audio_open other functions, ExtractedOnly mode uses other functions
Adding audio_term other functions, ExtractedOnly mode uses other functions
Adding audio_play other functions, ExtractedOnly mode uses other functions
Adding spell_out0 other functions, ExtractedOnly mode uses other functions
Adding spell_out1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string0 other functions, ExtractedOnly mode uses other functions
Adding xlate_string1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string2 other functions, ExtractedOnly mode uses other functions
Adding xlate_string3 other functions, ExtractedOnly mode uses other functions
Adding xlate_string4 other functions, ExtractedOnly mode uses other functions
Adding xlate_string5 other functions, ExtractedOnly mode uses other functions
Adding xlate_string6 other functions, ExtractedOnly mode uses other functions
Adding xlate_string7 other functions, ExtractedOnly mode uses other functions
Adding xlate_string8 other functions, ExtractedOnly mode uses other functions
Adding xlate_string9 other functions, ExtractedOnly mode uses other functions
Adding xlate_string10 other functions, ExtractedOnly mode uses other functions
Adding xlate_string11 other functions, ExtractedOnly mode uses other functions
Adding xlate_string12 other functions, ExtractedOnly mode uses other functions
Adding xlate_string13 other functions, ExtractedOnly mode uses other functions
Adding xlate_string14 other functions, ExtractedOnly mode uses other functions
Adding xlate_string15 other functions, ExtractedOnly mode uses other functions
Adding xlate_string16 other functions, ExtractedOnly mode uses other functions
Adding xlate_string17 other functions, ExtractedOnly mode uses other functions
Adding xlate_string18 other functions, ExtractedOnly mode uses other functions
Adding xlate_string19 other functions, ExtractedOnly mode uses other functions
Adding xlate_string20 other functions, ExtractedOnly mode uses other functions
Adding xlate_string21 other functions, ExtractedOnly mode uses other functions
Adding xlate_string22 other functions, ExtractedOnly mode uses other functions
Adding suspect_word0 other functions, ExtractedOnly mode uses other functions
Adding suspect_word1 other functions, ExtractedOnly mode uses other functions
Adding suspect_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word0 other functions, ExtractedOnly mode uses other functions
Adding xlate_word1 other functions, ExtractedOnly mode uses other functions
Adding xlate_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word3 other functions, ExtractedOnly mode uses other functions
Adding xlate_word4 other functions, ExtractedOnly mode uses other functions
Adding xlate_word5 other functions, ExtractedOnly mode uses other functions
Adding xlate_word6 other functions, ExtractedOnly mode uses other functions
Adding xlate_word7 other functions, ExtractedOnly mode uses other functions
Adding xlate_word8 other functions, ExtractedOnly mode uses other functions
Adding xlate_word9 other functions, ExtractedOnly mode uses other functions
Adding xlate_word10 other functions, ExtractedOnly mode uses other functions
Adding xlate_word11 other functions, ExtractedOnly mode uses other functions
Adding xlate_word12 other functions, ExtractedOnly mode uses other functions
Adding darray_find0 other functions, ExtractedOnly mode uses other functions
Adding darray_find1 other functions, ExtractedOnly mode uses other functions
Adding say_phones0 other functions, ExtractedOnly mode uses other functions
Adding say_phones1 other functions, ExtractedOnly mode uses other functions
Adding say_phones2 other functions, ExtractedOnly mode uses other functions
Adding darray_init0 other functions, ExtractedOnly mode uses other functions
Adding concat_args0 other functions, ExtractedOnly mode uses other functions
Adding concat_args1 other functions, ExtractedOnly mode uses other functions
Adding concat_args2 other functions, ExtractedOnly mode uses other functions
Adding concat_args3 other functions, ExtractedOnly mode uses other functions
Adding concat_args4 other functions, ExtractedOnly mode uses other functions
Adding concat_args5 other functions, ExtractedOnly mode uses other functions
Adding concat_args6 other functions, ExtractedOnly mode uses other functions
Adding say_string0 other functions, ExtractedOnly mode uses other functions
Adding say_file0 other functions, ExtractedOnly mode uses other functions
Adding say_file1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal10 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal11 other functions, ExtractedOnly mode uses other functions
Adding darray_free0 other functions, ExtractedOnly mode uses other functions
Adding darray_free1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find0 other functions, ExtractedOnly mode uses other functions
Adding Darray_find1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find2 other functions, ExtractedOnly mode uses other functions
Adding Darray_find3 other functions, ExtractedOnly mode uses other functions
Adding Darray_find4 other functions, ExtractedOnly mode uses other functions
Adding darray_delete0 other functions, ExtractedOnly mode uses other functions
Adding darray_delete1 other functions, ExtractedOnly mode uses other functions
Adding darray_find.730 other functions, ExtractedOnly mode uses other functions
Adding darray_find.731 other functions, ExtractedOnly mode uses other functions
Adding NRL0 other functions, ExtractedOnly mode uses other functions
Adding NRL1 other functions, ExtractedOnly mode uses other functions
Adding NRL2 other functions, ExtractedOnly mode uses other functions
Adding NRL3 other functions, ExtractedOnly mode uses other functions
Adding phone_cat0 other functions, ExtractedOnly mode uses other functions
Adding phone_cat1 other functions, ExtractedOnly mode uses other functions
Adding guess_word0 other functions, ExtractedOnly mode uses other functions
Adding guess_word1 other functions, ExtractedOnly mode uses other functions
Adding find_rule0 other functions, ExtractedOnly mode uses other functions
Adding find_rule1 other functions, ExtractedOnly mode uses other functions
Adding find_rule2 other functions, ExtractedOnly mode uses other functions
Adding find_rule3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch0 other functions, ExtractedOnly mode uses other functions
Adding leftmatch1 other functions, ExtractedOnly mode uses other functions
Adding leftmatch2 other functions, ExtractedOnly mode uses other functions
Adding leftmatch3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch4 other functions, ExtractedOnly mode uses other functions
Adding leftmatch5 other functions, ExtractedOnly mode uses other functions
Adding leftmatch6 other functions, ExtractedOnly mode uses other functions
Adding leftmatch7 other functions, ExtractedOnly mode uses other functions
Adding leftmatch8 other functions, ExtractedOnly mode uses other functions
Adding leftmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch0 other functions, ExtractedOnly mode uses other functions
Adding rightmatch1 other functions, ExtractedOnly mode uses other functions
Adding rightmatch2 other functions, ExtractedOnly mode uses other functions
Adding rightmatch3 other functions, ExtractedOnly mode uses other functions
Adding rightmatch4 other functions, ExtractedOnly mode uses other functions
Adding rightmatch5 other functions, ExtractedOnly mode uses other functions
Adding rightmatch6 other functions, ExtractedOnly mode uses other functions
Adding rightmatch7 other functions, ExtractedOnly mode uses other functions
Adding rightmatch8 other functions, ExtractedOnly mode uses other functions
Adding rightmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch10 other functions, ExtractedOnly mode uses other functions
Adding rightmatch11 other functions, ExtractedOnly mode uses other functions
Adding rightmatch12 other functions, ExtractedOnly mode uses other functions
Adding rightmatch13 other functions, ExtractedOnly mode uses other functions
Adding trie_insert0 other functions, ExtractedOnly mode uses other functions
Adding trie_insert1 other functions, ExtractedOnly mode uses other functions
Adding trie_insert2 other functions, ExtractedOnly mode uses other functions
Adding trie_insert3 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup0 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup1 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup2 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup3 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4460 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4461 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm0 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm1 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm2 other functions, ExtractedOnly mode uses other functions
Adding enter0 other functions, ExtractedOnly mode uses other functions
Adding enter1 other functions, ExtractedOnly mode uses other functions
Adding enter2 other functions, ExtractedOnly mode uses other functions
Adding find_elm0 other functions, ExtractedOnly mode uses other functions
Adding find_elm1 other functions, ExtractedOnly mode uses other functions
Adding holmes0 other functions, ExtractedOnly mode uses other functions
Adding holmes1 other functions, ExtractedOnly mode uses other functions
Adding holmes2 other functions, ExtractedOnly mode uses other functions
Adding holmes3 other functions, ExtractedOnly mode uses other functions
Adding holmes4 other functions, ExtractedOnly mode uses other functions
Adding holmes5 other functions, ExtractedOnly mode uses other functions
Adding holmes6 other functions, ExtractedOnly mode uses other functions
Adding holmes7 other functions, ExtractedOnly mode uses other functions
Adding holmes8 other functions, ExtractedOnly mode uses other functions
Adding holmes9 other functions, ExtractedOnly mode uses other functions
Adding holmes10 other functions, ExtractedOnly mode uses other functions
Adding holmes11 other functions, ExtractedOnly mode uses other functions
Adding holmes12 other functions, ExtractedOnly mode uses other functions
Adding holmes13 other functions, ExtractedOnly mode uses other functions
Adding holmes14 other functions, ExtractedOnly mode uses other functions
Adding holmes15 other functions, ExtractedOnly mode uses other functions
Adding holmes16 other functions, ExtractedOnly mode uses other functions
Adding holmes17 other functions, ExtractedOnly mode uses other functions
Adding holmes18 other functions, ExtractedOnly mode uses other functions
Adding holmes19 other functions, ExtractedOnly mode uses other functions
Adding holmes20 other functions, ExtractedOnly mode uses other functions
Adding holmes21 other functions, ExtractedOnly mode uses other functions
Adding holmes22 other functions, ExtractedOnly mode uses other functions
Adding set_trans0 other functions, ExtractedOnly mode uses other functions
Adding set_trans1 other functions, ExtractedOnly mode uses other functions
Adding interpolate0 other functions, ExtractedOnly mode uses other functions
Adding interpolate1 other functions, ExtractedOnly mode uses other functions
Adding interpolate2 other functions, ExtractedOnly mode uses other functions
Adding interpolate3 other functions, ExtractedOnly mode uses other functions
Adding jsru_save0 other functions, ExtractedOnly mode uses other functions
Adding linear0 other functions, ExtractedOnly mode uses other functions
Adding linear1 other functions, ExtractedOnly mode uses other functions
Adding linear2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes0 other functions, ExtractedOnly mode uses other functions
Adding init_holmes1 other functions, ExtractedOnly mode uses other functions
Adding init_holmes2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes3 other functions, ExtractedOnly mode uses other functions
Adding term_holmes0 other functions, ExtractedOnly mode uses other functions
Adding term_holmes1 other functions, ExtractedOnly mode uses other functions
Adding show_parms0 other functions, ExtractedOnly mode uses other functions
Adding show_parms1 other functions, ExtractedOnly mode uses other functions
Adding parwave0 other functions, ExtractedOnly mode uses other functions
Adding parwave1 other functions, ExtractedOnly mode uses other functions
Adding parwave2 other functions, ExtractedOnly mode uses other functions
Adding parwave3 other functions, ExtractedOnly mode uses other functions
Adding parwave4 other functions, ExtractedOnly mode uses other functions
Adding parwave5 other functions, ExtractedOnly mode uses other functions
Adding parwave6 other functions, ExtractedOnly mode uses other functions
Adding parwave7 other functions, ExtractedOnly mode uses other functions
Adding parwave8 other functions, ExtractedOnly mode uses other functions
Adding parwave9 other functions, ExtractedOnly mode uses other functions
Adding parwave10 other functions, ExtractedOnly mode uses other functions
Adding parwave11 other functions, ExtractedOnly mode uses other functions
Adding parwave12 other functions, ExtractedOnly mode uses other functions
Adding parwave13 other functions, ExtractedOnly mode uses other functions
Adding parwave14 other functions, ExtractedOnly mode uses other functions
Adding parwave15 other functions, ExtractedOnly mode uses other functions
Adding parwave16 other functions, ExtractedOnly mode uses other functions
Adding parwave17 other functions, ExtractedOnly mode uses other functions
Adding parwave18 other functions, ExtractedOnly mode uses other functions
Adding frame_init0 other functions, ExtractedOnly mode uses other functions
Adding frame_init1 other functions, ExtractedOnly mode uses other functions
Adding frame_init2 other functions, ExtractedOnly mode uses other functions
Adding frame_init3 other functions, ExtractedOnly mode uses other functions
Adding frame_init4 other functions, ExtractedOnly mode uses other functions
Adding flutter0 other functions, ExtractedOnly mode uses other functions
Adding impulsive_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset0 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset2 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset3 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset4 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset5 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset6 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset7 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset8 other functions, ExtractedOnly mode uses other functions
Adding clip0 other functions, ExtractedOnly mode uses other functions
Adding clip1 other functions, ExtractedOnly mode uses other functions
Adding overload_warning0 other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN0 other functions, ExtractedOnly mode uses other functions
Adding setabc0 other functions, ExtractedOnly mode uses other functions
Adding setzeroabc0 other functions, ExtractedOnly mode uses other functions
Adding setabcg0 other functions, ExtractedOnly mode uses other functions
Adding parwave_init0 other functions, ExtractedOnly mode uses other functions
Adding init_synth0 other functions, ExtractedOnly mode uses other functions
Adding init_synth1 other functions, ExtractedOnly mode uses other functions
Adding au_header0 other functions, ExtractedOnly mode uses other functions
Adding wblong0 other functions, ExtractedOnly mode uses other functions
Adding file_init0 other functions, ExtractedOnly mode uses other functions
Adding file_init1 other functions, ExtractedOnly mode uses other functions
Adding file_init2 other functions, ExtractedOnly mode uses other functions
Adding file_init3 other functions, ExtractedOnly mode uses other functions
Adding file_init4 other functions, ExtractedOnly mode uses other functions
Adding file_init5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write0 other functions, ExtractedOnly mode uses other functions
Adding aufile_write1 other functions, ExtractedOnly mode uses other functions
Adding aufile_write2 other functions, ExtractedOnly mode uses other functions
Adding aufile_write3 other functions, ExtractedOnly mode uses other functions
Adding aufile_write4 other functions, ExtractedOnly mode uses other functions
Adding aufile_write5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write6 other functions, ExtractedOnly mode uses other functions
Adding aufile_term0 other functions, ExtractedOnly mode uses other functions
Adding aufile_term1 other functions, ExtractedOnly mode uses other functions
Adding aufile_term2 other functions, ExtractedOnly mode uses other functions
Adding getargs0 other functions, ExtractedOnly mode uses other functions
Adding getargs1 other functions, ExtractedOnly mode uses other functions
Adding getargs2 other functions, ExtractedOnly mode uses other functions
Adding getargs3 other functions, ExtractedOnly mode uses other functions
Adding getargs4 other functions, ExtractedOnly mode uses other functions
Adding getargs5 other functions, ExtractedOnly mode uses other functions
Adding getargs6 other functions, ExtractedOnly mode uses other functions
Adding getargs7 other functions, ExtractedOnly mode uses other functions
Adding getargs8 other functions, ExtractedOnly mode uses other functions
Adding getargs9 other functions, ExtractedOnly mode uses other functions
Adding getargs10 other functions, ExtractedOnly mode uses other functions
Adding getargs11 other functions, ExtractedOnly mode uses other functions
Adding getargs12 other functions, ExtractedOnly mode uses other functions
Adding getargs13 other functions, ExtractedOnly mode uses other functions
Adding getargs14 other functions, ExtractedOnly mode uses other functions
Adding getargs15 other functions, ExtractedOnly mode uses other functions
Adding getargs16 other functions, ExtractedOnly mode uses other functions
Adding getargs17 other functions, ExtractedOnly mode uses other functions
Adding getargs18 other functions, ExtractedOnly mode uses other functions
Adding getargs19 other functions, ExtractedOnly mode uses other functions
Adding getargs20 other functions, ExtractedOnly mode uses other functions
Adding getargs21 other functions, ExtractedOnly mode uses other functions
Adding getargs22 other functions, ExtractedOnly mode uses other functions
Adding getargs23 other functions, ExtractedOnly mode uses other functions
Adding audio_init0 other functions, ExtractedOnly mode uses other functions
Adding audio_init1 other functions, ExtractedOnly mode uses other functions
Adding audio_init2 other functions, ExtractedOnly mode uses other functions
Adding audio_init3 other functions, ExtractedOnly mode uses other functions
Adding audio_open0 other functions, ExtractedOnly mode uses other functions
Adding audio_term0 other functions, ExtractedOnly mode uses other functions
Adding audio_term1 other functions, ExtractedOnly mode uses other functions
Adding audio_play0 other functions, ExtractedOnly mode uses other functions
Adding audio_play1 other functions, ExtractedOnly mode uses other functions
Adding audio_play2 other functions, ExtractedOnly mode uses other functions
Adding audio_play3 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:364
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
jsru_save0
xlate_string6
trie_lookup
parwave18
enter2
audio_play2
dict_init
isconsonant
find_elm
DBtoLIN
xlate_string5
darray_init0
guess_word0
natural_source
holmes1
say_phones2
phone_cat0
setabc0
darray_find1
xlate_ordinal7
xlate_ordinal11
parwave5
NRL2
say_string0
show_parms1
say_phones0
getargs9
darray_find
phone_cat1
xlate_word0
pitch_synch_par_reset4
au_header
holmes11
Darray_find4
NRL
spell_out1
init_synth1
xlate_ordinal3
interpolate0
frame_init4
leftmatch5
say_file0
init_holmes
impulsive_source
aufile_write6
file_init4
pitch_synch_par_reset0
leftmatch8
suspect_word2
xlate_ordinal9
rightmatch
file_init5
set_trans0
audio_init3
frame_init0
xlate_word7
xlate_string18
parwave4
xlate_word6
trie_insert1
xlate_ordinal0
xlate_word3
xlate_string3
leftmatch0
guess_word1
pitch_synch_par_reset5
dict_term
xlate_string4
xlate_cardinal1
setabcg0
NRL1
darray_find.730
xlate_word12
xlate_ordinal4
parwave10
pitch_synch_par_reset2
find_rule
Darray_find2
parwave12
parwave16
xlate_cardinal7
linear2
leftmatch1
xlate_cardinal5
xlate_ordinal2
getargs2
getargs11
trie_lookup1
xlate_string10
holmes22
rightmatch0
rightmatch5
audio_open
darray_free
getargs8
init_synth
linear
rightmatch1
parwave_init0
audio_play3
say_file
aufile_term1
aufile_write5
holmes0
file_init2
parwave6
parwave9
init_holmes0
xlate_string1
xlate_string7
holmes3
trie_insert2
getargs20
show_parms
holmes20
flutter0
rightmatch2
find_elm1
parwave15
xlate_cardinal4
concat_args5
leftmatch4
trie_lookup2
audio_term0
holmes17
getargs10
term_holmes
holmes10
flutter
Darray_find0
getargs7
getargs4
xlate_word4
audio_term
phone_to_elm
setzeroabc
xlate_cardinal6
audio_play
main1
rightmatch10
find_rule2
xlate_string21
audio_init0
xlate_cardinal9
xlate_string14
xlate_string13
xlate_string2
xlate_ordinal6
rightmatch4
getargs5
darray_delete1
xlate_word
holmes4
NRL3
interpolate2
aufile_write0
holmes5
interpolate1
parwave
getargs6
getargs18
getargs21
file_init
enter1
wblong0
rightmatch9
xlate_string0
darray_find.446
parwave2
xlate_string20
getargs0
leftmatch7
aufile_term0
file_init0
impulsive_source0
trie_insert0
getargs14
jsru_save
darray_find.731
aufile_write3
xlate_cardinal3
Darray_find3
getargs22
setzeroabc0
suspect_word
file_init1
trie_lookup3
phone_to_elm0
audio_play0
pitch_synch_par_reset6
concat_args0
parwave11
spell_out0
aufile_term2
set_trans
audio_term1
linear0
holmes21
xlate_word5
dBconvert
holmes8
rightmatch12
interpolate
overload_warning0
leftmatch2
clip
guess_word
holmes9
pitch_synch_par_reset7
xlate_cardinal8
clip0
holmes7
Darray_find1
holmes18
darray_find0
audio_init1
init_synth0
show_parms0
parwave14
xlate_word10
darray_delete0
main2
file_init3
darray_free0
jsru_amp
NRL0
darray_init
xlate_cardinal2
clip1
getargs12
aufile_term
getargs13
setabcg
getargs23
holmes13
frame_init3
xlate_string16
au_header0
holmes12
audio_open0
jsru_freq
natural_source1
holmes15
xlate_string17
pitch_synch_par_reset
xlate_string12
main3
set_trans1
enter_phonemes
getargs16
enter0
getargs15
interpolate3
find_elm0
xlate_ordinal
phone_append
trie_insert3
xlate_string11
parwave8
xlate_cardinal0
concat_args6
aufile_write2
xlate_string15
find_rule1
trie_lookup0
xlate_string19
filter
Darray_find
parwave3
parwave0
say_string
init_holmes1
parwave7
holmes19
xlate_string8
concat_args4
aufile_write1
overload_warning
term_holmes0
antiresonator
frame_init1
suspect_word1
concat_args3
parwave17
frame_init
wblong
phone_cat
resonator
setabc
phone_to_elm2
pitch_synch_par_reset1
darray_find.73
say_phones
holmes14
holmes16
frame_init2
xlate_ordinal8
aufile_write
darray_delete
xlate_word8
audio_play1
rightmatch8
darray_find.4461
parwave1
holmes
darray_fget
xlate_word9
pitch_synch_par_reset3
xlate_ordinal10
xlate_string
audio_init
concat_args2
leftmatch9
xlate_word2
term_holmes1
dict_find
say_file1
holmes6
natural_source0
phone_to_elm1
parwave_init
linear1
xlate_cardinal
pitch_synch_par_reset8
xlate_word11
spell_out
leftmatch3
getargs17
getargs19
xlate_ordinal5
rightmatch11
say_phones1
isvowel
xlate_word1
concat_args
rightmatch3
suspect_word0
darray_find.4460
xlate_string22
rightmatch7
main0
find_rule0
main
init_holmes2
concat_args1
xlate_ordinal1
xlate_string9
leftmatch
DBtoLIN0
enter
holmes2
audio_init2
leftmatch6
getargs1
parwave13
find_rule3
init_holmes3
aufile_write4
getargs3
rightmatch13
rightmatch6
trie_insert
getargs
darray_free1
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 364 function, while filter count is 36
Functions called in loop
Function call numbers
dict_init -- 1
getargs -- 5
main -- 0
file_init -- 1
audio_init -- 1
init_synth -- 1
init_holmes -- 1
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 6822
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6823
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6824
  - operands: []
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 9537
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14784
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14876
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17387
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17405
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17644
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %e.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %p = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %p.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %samp.el = alloca i16*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nsize = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %nsize.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %s.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %ap = alloca [1 x %struct.__va_list_tag], align 16, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   call void @llvm.va_start(i8* %arraydecay12), !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 18446744073709551615
No reaching definition for:   %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca %struct.Elm_s*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   store i32 %add44, i32* %nph, align 4, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %d.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 36
 Skipping function per FilterFunctionPass:spell_out
 Skipping function per FilterFunctionPass:xlate_string
 Skipping function per FilterFunctionPass:suspect_word
 Skipping function per FilterFunctionPass:xlate_word
 Skipping function per FilterFunctionPass:darray_find
 Skipping function per FilterFunctionPass:say_phones
 Skipping function per FilterFunctionPass:darray_init
 Skipping function per FilterFunctionPass:concat_args
 Skipping function per FilterFunctionPass:say_string
 Skipping function per FilterFunctionPass:darray_fget
 Skipping function per FilterFunctionPass:say_file
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
 Skipping function per FilterFunctionPass:darray_free
Collecting defining blocks for Darray_find
 Skipping function per FilterFunctionPass:darray_delete
 Skipping function per FilterFunctionPass:darray_find.73
Collecting defining blocks for isvowel
 Skipping function per FilterFunctionPass:isconsonant
 Skipping function per FilterFunctionPass:NRL
 Skipping function per FilterFunctionPass:phone_cat
 Skipping function per FilterFunctionPass:guess_word
 Skipping function per FilterFunctionPass:find_rule
 Skipping function per FilterFunctionPass:leftmatch
Collecting defining blocks for rightmatch
 Skipping function per FilterFunctionPass:trie_insert
 Skipping function per FilterFunctionPass:trie_lookup
 Skipping function per FilterFunctionPass:phone_append
 Skipping function per FilterFunctionPass:darray_find.446
 Skipping function per FilterFunctionPass:phone_to_elm
 Skipping function per FilterFunctionPass:enter_phonemes
 Skipping function per FilterFunctionPass:enter
 Skipping function per FilterFunctionPass:find_elm
 Skipping function per FilterFunctionPass:holmes
 Skipping function per FilterFunctionPass:set_trans
 Skipping function per FilterFunctionPass:interpolate
 Skipping function per FilterFunctionPass:filter
Collecting defining blocks for jsru_save
Collecting defining blocks for jsru_freq
 Skipping function per FilterFunctionPass:jsru_amp
 Skipping function per FilterFunctionPass:linear
 Skipping function per FilterFunctionPass:init_holmes
 Skipping function per FilterFunctionPass:term_holmes
 Skipping function per FilterFunctionPass:show_parms
 Skipping function per FilterFunctionPass:parwave
 Skipping function per FilterFunctionPass:frame_init
 Skipping function per FilterFunctionPass:flutter
 Skipping function per FilterFunctionPass:impulsive_source
Collecting defining blocks for natural_source
 Skipping function per FilterFunctionPass:pitch_synch_par_reset
 Skipping function per FilterFunctionPass:resonator
Collecting defining blocks for antiresonator
 Skipping function per FilterFunctionPass:clip
 Skipping function per FilterFunctionPass:overload_warning
 Skipping function per FilterFunctionPass:dBconvert
 Skipping function per FilterFunctionPass:DBtoLIN
 Skipping function per FilterFunctionPass:setabc
 Skipping function per FilterFunctionPass:setzeroabc
 Skipping function per FilterFunctionPass:setabcg
 Skipping function per FilterFunctionPass:parwave_init
 Skipping function per FilterFunctionPass:init_synth
 Skipping function per FilterFunctionPass:au_header
 Skipping function per FilterFunctionPass:wblong
 Skipping function per FilterFunctionPass:file_init
 Skipping function per FilterFunctionPass:aufile_write
 Skipping function per FilterFunctionPass:aufile_term
 Skipping function per FilterFunctionPass:dict_find
 Skipping function per FilterFunctionPass:dict_init
 Skipping function per FilterFunctionPass:dict_term
 Skipping function per FilterFunctionPass:getargs
 Skipping function per FilterFunctionPass:audio_init
 Skipping function per FilterFunctionPass:audio_open
 Skipping function per FilterFunctionPass:audio_term
 Skipping function per FilterFunctionPass:audio_play
 Skipping function per FilterFunctionPass:spell_out
 Skipping function per FilterFunctionPass:xlate_string
 Skipping function per FilterFunctionPass:suspect_word
 Skipping function per FilterFunctionPass:xlate_word
 Skipping function per FilterFunctionPass:darray_find
 Skipping function per FilterFunctionPass:say_phones
 Skipping function per FilterFunctionPass:darray_init
 Skipping function per FilterFunctionPass:concat_args
 Skipping function per FilterFunctionPass:say_string
 Skipping function per FilterFunctionPass:darray_fget
 Skipping function per FilterFunctionPass:say_file
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
 Skipping function per FilterFunctionPass:darray_free
 Processing function:Darray_find
Short range hashing enabled.
Processing path: entry  if.then  if.end  if.then8  cond.true  
After path modifications process path
entry  if.then  if.end  if.then8  cond.true  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find0(%struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
Processing call instruction..
Can't handle this operand   %add = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %ndata = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.else  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.else  
Non numeric pointers (int and float) are skipped:  %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
Processing path: entry  if.then  if.end  if.then8  cond.false  
After path modifications process path
entry  if.then  if.end  if.then8  cond.false  
Processing path: entry  if.then  if.end  if.end38  if.then42  
After path modifications process path
entry  if.then  if.end  if.end38  if.then42  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.then  if.end  if.end38  if.end47  
After path modifications process path
entry  if.then  if.end  if.end38  if.end47  
Processing path: entry  if.then  if.end  if.else33  
After path modifications process path
entry  if.then  if.end  if.else33  
Processing path: entry  if.then  if.then4  
After path modifications process path
entry  if.then  if.then4  
Processing path: entry  if.end48  
After path modifications process path
entry  if.end48  
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  
After path modifications process path
entry  lor.lhs.false  
 Skipping function per FilterFunctionPass:darray_delete
 Skipping function per FilterFunctionPass:darray_find.73
 Processing function:isvowel
Short range hashing enabled.
Processing path: entry  lor.end  
After path modifications process path
entry  lor.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
 Skipping function per FilterFunctionPass:isconsonant
 Skipping function per FilterFunctionPass:NRL
 Skipping function per FilterFunctionPass:phone_cat
 Skipping function per FilterFunctionPass:guess_word
 Skipping function per FilterFunctionPass:find_rule
 Skipping function per FilterFunctionPass:leftmatch
 Processing function:rightmatch
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.then19  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %10 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then19  
After path modifications process path
entry  if.end  if.then19  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.else  
After path modifications process path
for.body  if.else  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %12 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %16 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.default  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %20 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  sw.default  
After path modifications process path
entry  if.end  sw.default  
Processing call instruction..
Can't handle this operand   %pat = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch12(i8** %pat), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  
Hash path invariants only
Invariants are
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %22 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  while.end  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  while.end  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %26 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.then25  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %30 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then25  
After path modifications process path
entry  if.end  if.then25  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.epilog  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.epilog  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %32 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  while.body37  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  
Hash path invariants only
Invariants are
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %36 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  while.end39  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  while.end39  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %40 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.end45  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end45  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %44 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.then44  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %48 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then44  
After path modifications process path
entry  if.end  if.then44  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  land.lhs.true86  if.then90  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %50 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then90  
After path modifications process path
entry  if.end  if.then90  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  if.end91  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  if.end91  
Hash path invariants only
Invariants are
  call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  %52 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  land.lhs.true97  land.lhs.true101  if.then105  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  land.lhs.true97  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %56 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then105  
After path modifications process path
entry  if.end  if.then105  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  if.end106  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  if.end106  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %58 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.then122  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.then122  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %62 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.else124  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.else124  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %66 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.then138  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.then138  
Hash path invariants only
Invariants are
  call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end140, !control_dep_instr !7, !data_indep_instr !10
  %70 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.end140  if.end141  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.end140  if.end141  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end141, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %74 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %78 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.then156  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then156  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %82 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.end158  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %86 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end158  
After path modifications process path
entry  if.end  if.end158  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.end159  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %88 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end159  
After path modifications process path
entry  if.end  if.end159  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.else160  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %90 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.else160  
After path modifications process path
entry  if.end  if.else160  
Processing path: entry  if.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  for.end  
After path modifications process path
entry  if.end  for.end  
 Skipping function per FilterFunctionPass:trie_insert
 Skipping function per FilterFunctionPass:trie_lookup
 Skipping function per FilterFunctionPass:phone_append
 Skipping function per FilterFunctionPass:darray_find.446
 Skipping function per FilterFunctionPass:phone_to_elm
 Skipping function per FilterFunctionPass:enter_phonemes
 Skipping function per FilterFunctionPass:enter
 Skipping function per FilterFunctionPass:find_elm
 Skipping function per FilterFunctionPass:holmes
 Skipping function per FilterFunctionPass:set_trans
 Skipping function per FilterFunctionPass:interpolate
 Skipping function per FilterFunctionPass:filter
 Processing function:jsru_save
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %tp.addr = alloca float*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %f0.addr = alloca double, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:jsru_freq
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:jsru_amp
 Skipping function per FilterFunctionPass:linear
 Skipping function per FilterFunctionPass:init_holmes
 Skipping function per FilterFunctionPass:term_holmes
 Skipping function per FilterFunctionPass:show_parms
 Skipping function per FilterFunctionPass:parwave
 Skipping function per FilterFunctionPass:frame_init
 Skipping function per FilterFunctionPass:flutter
 Skipping function per FilterFunctionPass:impulsive_source
 Processing function:natural_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Skipping function per FilterFunctionPass:pitch_synch_par_reset
 Skipping function per FilterFunctionPass:resonator
 Processing function:antiresonator
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:clip
 Skipping function per FilterFunctionPass:overload_warning
 Skipping function per FilterFunctionPass:dBconvert
 Skipping function per FilterFunctionPass:DBtoLIN
 Skipping function per FilterFunctionPass:setabc
 Skipping function per FilterFunctionPass:setzeroabc
 Skipping function per FilterFunctionPass:setabcg
 Skipping function per FilterFunctionPass:parwave_init
 Skipping function per FilterFunctionPass:init_synth
 Skipping function per FilterFunctionPass:au_header
 Skipping function per FilterFunctionPass:wblong
 Skipping function per FilterFunctionPass:file_init
 Skipping function per FilterFunctionPass:aufile_write
 Skipping function per FilterFunctionPass:aufile_term
 Skipping function per FilterFunctionPass:dict_find
 Skipping function per FilterFunctionPass:dict_init
 Skipping function per FilterFunctionPass:dict_term
 Skipping function per FilterFunctionPass:getargs
 Skipping function per FilterFunctionPass:audio_init
 Skipping function per FilterFunctionPass:audio_open
 Skipping function per FilterFunctionPass:audio_term
 Skipping function per FilterFunctionPass:audio_play
Extract path function for assertion assert_natural_source_path_0
Extract path function for assertion assert_natural_source_path_1
Extract path function for assertion assert_natural_source_path_2
Extract path function for assertion assert_jsru_freq_path_0
Extract path function for assertion assert_jsru_freq_path_1
Extract path function for assertion assert_Darray_find_path_0
Extract path function for assertion assert_Darray_find_path_1
Extract path function for assertion assert_Darray_find_path_2
Extract path function for assertion assert_Darray_find_path_3
Extract path function for assertion assert_Darray_find_path_4
Extract path function for assertion assert_Darray_find_path_5
Extract path function for assertion assert_Darray_find_path_6
Extract path function for assertion assert_Darray_find_path_7
Extract path function for assertion assert_Darray_find_path_8
Extract path function for assertion assert_Darray_find_path_9
Extract path function for assertion assert_Darray_find_path_10
Extract path function for assertion assert_Darray_find_path_11
Extract path function for assertion assert_Darray_find_path_12
Extract path function for assertion assert_isvowel_path_0
Extract path function for assertion assert_isvowel_path_1
Extract path function for assertion assert_rightmatch_path_0
Extract path function for assertion assert_rightmatch_path_1
Extract path function for assertion assert_rightmatch_path_2
Extract path function for assertion assert_rightmatch_path_3
Extract path function for assertion assert_rightmatch_path_4
Extract path function for assertion assert_rightmatch_path_5
Extract path function for assertion assert_rightmatch_path_6
Extract path function for assertion assert_rightmatch_path_7
Extract path function for assertion assert_rightmatch_path_8
Extract path function for assertion assert_rightmatch_path_9
Extract path function for assertion assert_rightmatch_path_11
Extract path function for assertion assert_rightmatch_path_12
Extract path function for assertion assert_rightmatch_path_14
Extract path function for assertion assert_rightmatch_path_15
Extract path function for assertion assert_rightmatch_path_16
Extract path function for assertion assert_rightmatch_path_17
Extract path function for assertion assert_rightmatch_path_18
Extract path function for assertion assert_rightmatch_path_19
Extract path function for assertion assert_rightmatch_path_21
Extract path function for assertion assert_rightmatch_path_22
Extract path function for assertion assert_rightmatch_path_24
Extract path function for assertion assert_rightmatch_path_25
Extract path function for assertion assert_rightmatch_path_26
Extract path function for assertion assert_rightmatch_path_27
Extract path function for assertion assert_rightmatch_path_28
Extract path function for assertion assert_rightmatch_path_29
Extract path function for assertion assert_rightmatch_path_30
Extract path function for assertion assert_rightmatch_path_31
Extract path function for assertion assert_rightmatch_path_32
Extract path function for assertion assert_rightmatch_path_33
Extract path function for assertion assert_rightmatch_path_34
Extract path function for assertion assert_rightmatch_path_35
Extract path function for assertion assert_rightmatch_path_36
Extract path function for assertion assert_rightmatch_path_37
Extract path function for assertion assert_rightmatch_path_38
Extract path function for assertion assert_rightmatch_path_39
Extract path function for assertion assert_rightmatch_path_40
Extract path function for assertion assert_rightmatch_path_41
Extract path function for assertion assert_rightmatch_path_42
Extract path function for assertion assert_rightmatch_path_43
Extract path function for assertion assert_rightmatch_path_44
Extract path function for assertion assert_rightmatch_path_45
Extract path function for assertion assert_rightmatch_path_46
Extract path function for assertion assert_rightmatch_path_47
Extract path function for assertion assert_rightmatch_path_48
Extract path function for assertion assert_rightmatch_path_49
Extract path function for assertion assert_rightmatch_path_50
Extract path function for assertion assert_rightmatch_path_51
Extract path function for assertion assert_rightmatch_path_52
Extract path function for assertion assert_rightmatch_path_53
Extract path function for assertion assert_rightmatch_path_54
Extract path function for assertion assert_rightmatch_path_55
Extract path function for assertion assert_rightmatch_path_57
OH stats is requested, dumping stat file...
Processed instructions number 5223
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 34,
    "numberOfDataDependentInstructions": 255,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 4589,
    "numberOfInstructionsInFunctionsWithNoDG": 154,
    "numberOfNonHashableBlocks": 7,
    "numberOfNonHashableInstructions": 50,
    "numberOfOHProcessedInstr": 480,
    "numberOfOtherUnprotectedInstructions": 2,
    "numberOfOtherUnprotectedLoopVariantInstructions": 0,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 0,
    "numberOfProtectedFunctions": 5,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveBlocks": 102,
    "numberOfSensitiveFunctions": 7,
    "numberOfShortRangeAssertCalls": 73,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 0,
    "numberOfShortRangeProtectedBlocks": 80,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 73,
    "numberOfUnprotectedArgumentReachableInstructions": 18,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 15,
    "numberOfUnprotectedGlobalReachableInstructions": 4,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 78
}
ERR. processed 7 function, while filter count is 36
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 199.3171 seconds (199.3200 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  190.4609 ( 96.0%)   0.8000 ( 93.6%)  191.2609 ( 96.0%)  191.2639 ( 96.0%)  Instruments bitcode with hashing and logging functions
   7.8896 (  4.0%)   0.0456 (  5.3%)   7.9352 (  4.0%)   7.9354 (  4.0%)  runs input dependency analysis
   0.0399 (  0.0%)   0.0014 (  0.2%)   0.0413 (  0.0%)   0.0413 (  0.0%)  Memory SSA
   0.0283 (  0.0%)   0.0040 (  0.5%)   0.0323 (  0.0%)   0.0323 (  0.0%)  Bitcode Writer
   0.0081 (  0.0%)   0.0000 (  0.0%)   0.0081 (  0.0%)   0.0081 (  0.0%)  Module Verifier
   0.0072 (  0.0%)   0.0002 (  0.0%)   0.0074 (  0.0%)   0.0075 (  0.0%)  Dominator Tree Construction
   0.0052 (  0.0%)   0.0001 (  0.0%)   0.0053 (  0.0%)   0.0055 (  0.0%)  Dominator Tree Construction
   0.0052 (  0.0%)   0.0002 (  0.0%)   0.0054 (  0.0%)   0.0053 (  0.0%)  Post-Dominator Tree Construction
   0.0044 (  0.0%)   0.0002 (  0.0%)   0.0046 (  0.0%)   0.0046 (  0.0%)  Natural Loop Information
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Instruments bitcode with guards
   0.0036 (  0.0%)   0.0001 (  0.0%)   0.0037 (  0.0%)   0.0036 (  0.0%)  Natural Loop Information
   0.0029 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)   0.0029 (  0.0%)  Include functions in a given file in any transformation
   0.0015 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Call site information
   0.0000 (  0.0%)   0.0012 (  0.1%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0007 (  0.1%)   0.0007 (  0.0%)   0.0007 (  0.0%)  runs indirect and virtual calls analysis
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0006 (  0.0%)  Remove unreachable blocks from the CFG
   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  198.4628 (100.0%)   0.8542 (100.0%)  199.3171 (100.0%)  199.3200 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0256 seconds (0.0256 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0207 (100.0%)   0.0049 (100.0%)   0.0256 (100.0%)   0.0256 (100.0%)  Parse IR
   0.0207 (100.0%)   0.0049 (100.0%)   0.0256 (100.0%)   0.0256 (100.0%)  Total

Running input dependency analysis pass
Processing function spell_out0
Processing function xlate_string0
Processing function xlate_string1
Processing function xlate_string2
Processing function suspect_word0
Processing function suspect_word1
Processing function suspect_word2
Processing function suspect_word
Processing function dict_find
Processing function xlate_word0
Processing function xlate_word1
Processing function darray_find.4460
Processing function Darray_find0
Processing function Darray_find1
Processing function Darray_find2
Processing function Darray_find3
Processing function Darray_find4
Processing function Darray_find
Processing function darray_find.4461
Processing function darray_find.446
Processing function phone_append
Processing function xlate_word2
Processing function xlate_word3
Processing function xlate_word4
Processing function xlate_word6
Processing function xlate_word8
Processing function NRL0
Processing function NRL1
Processing function NRL2
Processing function NRL3
Processing function guess_word0
Processing function find_rule0
Processing function find_rule1
Processing function find_rule2
Processing function leftmatch0
Processing function leftmatch1
Processing function isvowel
Processing function leftmatch2
Processing function leftmatch3
Processing function isconsonant
Processing function leftmatch4
Processing function leftmatch5
Processing function leftmatch6
Processing function leftmatch7
Processing function leftmatch8
Processing function leftmatch9
Processing function leftmatch
Processing function rightmatch0
Processing function rightmatch1
Processing function rightmatch2
Processing function rightmatch3
Processing function rightmatch4
Processing function rightmatch5
Processing function rightmatch6
Processing function rightmatch7
Processing function rightmatch8
Processing function rightmatch9
Processing function rightmatch10
Processing function rightmatch11
Processing function rightmatch12
Processing function rightmatch13
Processing function rightmatch
Processing function find_rule3
Processing function find_rule
Processing function guess_word1
Processing function guess_word
Processing function NRL
Processing function xlate_word9
Processing function xlate_word10
Processing function xlate_word11
Processing function xlate_word12
Processing function xlate_string4
Processing function xlate_string6
Processing function xlate_string7
Processing function xlate_string8
Processing function xlate_cardinal1
Processing function xlate_cardinal3
Processing function xlate_cardinal5
Processing function xlate_cardinal7
Processing function xlate_cardinal8
Processing function xlate_string10
Processing function xlate_string13
Processing function darray_find0
Processing function darray_find1
Processing function darray_find
Processing function darray_init0
Processing function darray_init
Processing function phone_to_elm0
Processing function find_elm0
Processing function find_elm1
Processing function find_elm
Processing function enter0
Processing function enter1
Processing function trie_insert0
Processing function trie_insert1
Processing function trie_insert2
Processing function trie_insert3
Processing function trie_insert
Processing function enter2
Processing function enter
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function enter_phonemes
Processing function trie_lookup0
Processing function trie_lookup1
Processing function trie_lookup2
Processing function trie_lookup3
Processing function trie_lookup
Processing function phone_to_elm1
Processing function phone_to_elm2
Processing function phone_to_elm
Processing function say_phones0
Processing function holmes0
Processing function holmes1
Processing function setabc0
Processing function setabc
Processing function parwave_init0
Processing function parwave_init
Processing function holmes2
Processing function holmes3
Processing function set_trans0
Processing function set_trans1
Processing function set_trans
Processing function holmes4
Processing function holmes5
Processing function holmes6
Processing function holmes7
Processing function holmes8
Processing function holmes9
Processing function holmes10
Processing function holmes11
Processing function holmes12
Processing function holmes13
Processing function holmes14
Processing function holmes15
Processing function holmes16
Processing function linear0
Processing function linear1
Processing function linear2
Processing function linear
Processing function interpolate0
Processing function interpolate1
Processing function interpolate2
Processing function interpolate3
Processing function interpolate
Processing function filter
Processing function DBtoLIN0
Processing function DBtoLIN
Processing function frame_init0
Processing function frame_init1
Processing function frame_init2
Processing function frame_init3
Processing function setzeroabc0
Processing function setzeroabc
Processing function setabcg0
Processing function setabcg
Processing function frame_init4
Processing function frame_init
Processing function flutter0
Processing function flutter
Processing function parwave0
Processing function parwave1
Processing function parwave2
Processing function impulsive_source0
Processing function resonator
Processing function impulsive_source
Processing function parwave3
Processing function natural_source0
Processing function natural_source1
Processing function natural_source
Processing function parwave4
Processing function pitch_synch_par_reset0
Processing function pitch_synch_par_reset1
Processing function pitch_synch_par_reset2
Processing function pitch_synch_par_reset3
Processing function pitch_synch_par_reset4
Processing function pitch_synch_par_reset5
Processing function pitch_synch_par_reset6
Processing function pitch_synch_par_reset7
Processing function pitch_synch_par_reset8
Processing function pitch_synch_par_reset
Processing function parwave5
Processing function parwave6
Processing function parwave7
Processing function antiresonator
Processing function parwave8
Processing function parwave9
Processing function parwave10
Processing function parwave11
Processing function parwave12
Processing function parwave13
Processing function parwave14
Processing function parwave15
Processing function parwave16
Processing function dBconvert
Processing function overload_warning0
Processing function overload_warning
Processing function clip0
Processing function clip1
Processing function clip
Processing function parwave17
Processing function parwave18
Processing function parwave
Processing function holmes17
Processing function jsru_freq
Processing function jsru_amp
Processing function jsru_save0
Processing function jsru_save
Processing function holmes18
Processing function holmes19
Processing function holmes20
Processing function holmes21
Processing function holmes22
Processing function holmes
Processing function audio_play0
Processing function audio_play1
Processing function audio_play2
Processing function audio_play3
Processing function audio_play
Processing function say_phones1
Processing function say_phones2
Processing function darray_free0
Processing function darray_free1
Processing function darray_free
Processing function say_phones
Processing function xlate_string15
Processing function xlate_string16
Processing function xlate_string17
Processing function xlate_string18
Processing function xlate_string20
Processing function xlate_string22
Processing function xlate_string21
Processing function xlate_string19
Processing function xlate_string14
Processing function xlate_string12
Processing function xlate_string11
Processing function xlate_cardinal9
Processing function xlate_cardinal6
Processing function xlate_cardinal4
Processing function xlate_cardinal2
Processing function xlate_cardinal0
Processing function xlate_cardinal
Processing function xlate_string9
Processing function xlate_string5
Processing function xlate_word7
Processing function xlate_word5
Processing function xlate_word
Processing function xlate_string3
Processing function xlate_string
Processing function spell_out1
Processing function spell_out
Processing function concat_args0
Processing function concat_args1
Processing function concat_args2
Processing function concat_args3
Processing function concat_args4
Processing function concat_args5
Processing function concat_args6
Processing function concat_args
Processing function say_string0
Processing function say_string
Processing function darray_fget
Processing function say_file0
Processing function say_file1
Processing function say_file
Processing function getargs0
Processing function getargs1
Processing function getargs2
Processing function getargs3
Processing function getargs4
Processing function getargs5
Processing function getargs6
Processing function getargs7
Processing function getargs8
Processing function getargs9
Processing function getargs10
Processing function getargs11
Processing function getargs12
Processing function getargs13
Processing function getargs14
Processing function getargs15
Processing function getargs16
Processing function getargs17
Processing function getargs18
Processing function getargs19
Processing function getargs20
Processing function getargs21
Processing function getargs22
Processing function getargs23
Processing function getargs
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function audio_init0
Processing function audio_open0
Processing function audio_open
Processing function audio_init1
Processing function audio_init2
Processing function audio_init3
Processing function audio_init
Processing function init_synth0
Processing function init_synth1
Processing function init_synth
Processing function init_holmes0
Processing function init_holmes1
Processing function init_holmes2
Processing function init_holmes3
Processing function init_holmes
Processing function dict_init
Processing function file_init0
Processing function file_init1
Processing function wblong0
Processing function wblong
Processing function au_header0
Processing function au_header
Processing function file_init2
Processing function file_init3
Processing function file_init4
Processing function file_init5
Processing function file_init
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function audio_term0
Processing function audio_term1
Processing function audio_term
Processing function term_holmes0
Processing function term_holmes1
Processing function term_holmes
Processing function dict_term
Processing function main
Processing function xlate_ordinal0
Processing function xlate_ordinal1
Processing function xlate_ordinal2
Processing function xlate_ordinal3
Processing function xlate_ordinal4
Processing function xlate_ordinal5
Processing function xlate_ordinal6
Processing function xlate_ordinal7
Processing function xlate_ordinal8
Processing function xlate_ordinal9
Processing function xlate_ordinal10
Processing function xlate_ordinal11
Processing function xlate_ordinal
Processing function darray_find.730
Processing function darray_find.731
Processing function darray_find.73
Processing function darray_delete0
Processing function darray_delete1
Processing function darray_delete
Processing function phone_cat0
Processing function phone_cat1
Processing function phone_cat
Processing function show_parms0
Processing function show_parms1
Processing function show_parms
Processing function aufile_write0
Processing function aufile_write1
Processing function aufile_write2
Processing function aufile_write3
Processing function aufile_write4
Processing function aufile_write5
Processing function aufile_write6
Processing function aufile_write
Processing function aufile_term0
Processing function aufile_term1
Processing function aufile_term2
Processing function aufile_term
Finalizing aufile_term
Finalizing aufile_term2
Finalizing aufile_term1
Mark Input dependent function aufile_term1
Finalizing aufile_term0
Mark Input dependent function aufile_term0
Finalizing aufile_write
Finalizing aufile_write6
Mark Input dependent function aufile_write6
Finalizing aufile_write5
Mark Input dependent function aufile_write5
Finalizing aufile_write4
Mark Input dependent function aufile_write4
Finalizing aufile_write3
Mark Input dependent function aufile_write3
Finalizing aufile_write2
Mark Input dependent function aufile_write2
Finalizing aufile_write1
Mark Input dependent function aufile_write1
Finalizing aufile_write0
Mark Input dependent function aufile_write0
Finalizing show_parms
Finalizing show_parms1
Mark Input dependent function show_parms1
Finalizing show_parms0
Mark Input dependent function show_parms0
Finalizing phone_cat
Finalizing phone_cat1
Mark Input dependent function phone_cat1
Finalizing phone_cat0
Finalizing darray_delete
Finalizing darray_delete1
Mark Input dependent function darray_delete1
Finalizing darray_delete0
Mark Input dependent function darray_delete0
Finalizing darray_find.73
Mark Input dependent function darray_find.73
Finalizing darray_find.731
Mark Input dependent function darray_find.731
Finalizing darray_find.730
Mark Input dependent function darray_find.730
Finalizing xlate_ordinal
Finalizing xlate_ordinal11
Mark Input dependent function xlate_ordinal11
Finalizing xlate_ordinal10
Mark Input dependent function xlate_ordinal10
Finalizing xlate_ordinal9
Mark Input dependent function xlate_ordinal9
Finalizing xlate_ordinal8
Mark Input dependent function xlate_ordinal8
Finalizing xlate_ordinal7
Mark Input dependent function xlate_ordinal7
Finalizing xlate_ordinal6
Mark Input dependent function xlate_ordinal6
Finalizing xlate_ordinal5
Mark Input dependent function xlate_ordinal5
Finalizing xlate_ordinal4
Mark Input dependent function xlate_ordinal4
Finalizing xlate_ordinal3
Mark Input dependent function xlate_ordinal3
Finalizing xlate_ordinal2
Mark Input dependent function xlate_ordinal2
Finalizing xlate_ordinal1
Mark Input dependent function xlate_ordinal1
Finalizing xlate_ordinal0
Mark Input dependent function xlate_ordinal0
Finalizing main
Finalizing dict_term
Mark Input dependent function dict_term
Finalizing term_holmes
Mark Input dependent function term_holmes
Finalizing term_holmes1
Mark Input dependent function term_holmes1
Finalizing term_holmes0
Mark Input dependent function term_holmes0
Finalizing audio_term
Mark Input dependent function audio_term
Finalizing audio_term1
Mark Input dependent function audio_term1
Finalizing audio_term0
Mark Input dependent function audio_term0
Finalizing main3
Mark Input dependent function main3
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.10 = private unnamed_addr constant [6 x i8] c"(%s)\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.9 = private unnamed_addr constant [44 x i8] c"or     %s [options as above] < file-to-say\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.8 = private unnamed_addr constant [43 x i8] c"Usage: %s [options as above] words to say\0A\00", align 1
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing file_init
Finalizing file_init5
Mark Input dependent function file_init5
Finalizing file_init4
Mark Input dependent function file_init4
Finalizing file_init3
Mark Input dependent function file_init3
Finalizing file_init2
Mark Input dependent function file_init2
Finalizing au_header
Mark Input dependent function au_header
Finalizing au_header0
Mark Input dependent function au_header0
Finalizing wblong
Mark Input dependent function wblong
Finalizing wblong0
Mark Input dependent function wblong0
Finalizing file_init1
Mark Input dependent function file_init1
Finalizing file_init0
Mark Input dependent function file_init0
Finalizing dict_init
Finalizing init_holmes
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @frac = global double 1.000000e+00, align 8
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @speed = global i32 1, align 4
Finalizing init_holmes3
Mark Input dependent function init_holmes3
Finalizing init_holmes2
Mark Input dependent function init_holmes2
Finalizing init_holmes1
Mark Input dependent function init_holmes1
Finalizing init_holmes0
Mark Input dependent function init_holmes0
Finalizing init_synth
Finalizing init_synth1
Mark Input dependent function init_synth1
Finalizing init_synth0
Mark Input dependent function init_synth0
Finalizing audio_init
Finalizing audio_init3
Mark Input dependent function audio_init3
Finalizing audio_init2
Mark Input dependent function audio_init2
Finalizing audio_init1
Mark Input dependent function audio_init1
Finalizing audio_open
Mark Input dependent function audio_open
Finalizing audio_open0
Mark Input dependent function audio_open0
Finalizing audio_init0
Mark Input dependent function audio_init0
Finalizing getargs
Finalizing getargs23
Mark Input dependent function getargs23
Finalizing getargs22
Mark Input dependent function getargs22
Finalizing getargs21
Mark Input dependent function getargs21
Finalizing getargs20
Mark Input dependent function getargs20
Finalizing getargs19
Mark Input dependent function getargs19
Finalizing getargs18
Mark Input dependent function getargs18
Finalizing getargs17
Mark Input dependent function getargs17
Finalizing getargs16
Mark Input dependent function getargs16
Finalizing getargs15
Mark Input dependent function getargs15
Finalizing getargs14
Mark Input dependent function getargs14
Finalizing getargs13
Mark Input dependent function getargs13
Finalizing getargs12
Mark Input dependent function getargs12
Finalizing getargs11
Mark Input dependent function getargs11
Finalizing getargs10
Mark Input dependent function getargs10
Finalizing getargs9
Mark Input dependent function getargs9
Finalizing getargs8
Mark Input dependent function getargs8
Finalizing getargs7
Mark Input dependent function getargs7
Finalizing getargs6
Mark Input dependent function getargs6
Finalizing getargs5
Mark Input dependent function getargs5
Finalizing getargs4
Mark Input dependent function getargs4
Finalizing getargs3
Mark Input dependent function getargs3
Finalizing getargs2
Mark Input dependent function getargs2
Finalizing getargs1
Mark Input dependent function getargs1
Finalizing getargs0
Mark Input dependent function getargs0
Finalizing say_file
Mark Input dependent function say_file
Finalizing say_file1
Mark Input dependent function say_file1
Finalizing say_file0
Mark Input dependent function say_file0
Finalizing darray_fget
Mark Input dependent function darray_fget
Finalizing say_string
Mark Input dependent function say_string
Finalizing say_string0
Mark Input dependent function say_string0
Finalizing concat_args
Mark Input dependent function concat_args
Finalizing concat_args6
Mark Input dependent function concat_args6
Finalizing concat_args5
Mark Input dependent function concat_args5
Finalizing concat_args4
Mark Input dependent function concat_args4
Finalizing concat_args3
Mark Input dependent function concat_args3
Finalizing concat_args2
Mark Input dependent function concat_args2
Finalizing concat_args1
Mark Input dependent function concat_args1
Finalizing concat_args0
Mark Input dependent function concat_args0
Finalizing spell_out
Mark Input dependent function spell_out
Finalizing spell_out1
Mark Input dependent function spell_out1
Finalizing xlate_string
Mark Input dependent function xlate_string
Finalizing xlate_string3
Mark Input dependent function xlate_string3
Finalizing xlate_word
Mark Input dependent function xlate_word
Finalizing xlate_word5
Mark Input dependent function xlate_word5
Finalizing xlate_word7
Mark Input dependent function xlate_word7
Finalizing xlate_string5
Mark Input dependent function xlate_string5
Finalizing xlate_string9
Mark Input dependent function xlate_string9
Finalizing xlate_cardinal
Mark Input dependent function xlate_cardinal
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.7.21 = private unnamed_addr constant [8 x i8] c"hundred\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.3.17 = private unnamed_addr constant [8 x i8] c"billion\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.5.19 = private unnamed_addr constant [8 x i8] c"million\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.6.20 = private unnamed_addr constant [9 x i8] c"thousand\00", align 1
Finalizing xlate_cardinal0
Mark Input dependent function xlate_cardinal0
Finalizing xlate_cardinal2
Mark Input dependent function xlate_cardinal2
Finalizing xlate_cardinal4
Mark Input dependent function xlate_cardinal4
Finalizing xlate_cardinal6
Mark Input dependent function xlate_cardinal6
Finalizing xlate_cardinal9
Mark Input dependent function xlate_cardinal9
Finalizing xlate_string11
Mark Input dependent function xlate_string11
Finalizing xlate_string12
Mark Input dependent function xlate_string12
Finalizing xlate_string14
Mark Input dependent function xlate_string14
Finalizing xlate_string19
Mark Input dependent function xlate_string19
Finalizing xlate_string21
Mark Input dependent function xlate_string21
Finalizing xlate_string22
Mark Input dependent function xlate_string22
Finalizing xlate_string20
Mark Input dependent function xlate_string20
Finalizing xlate_string18
Mark Input dependent function xlate_string18
Finalizing xlate_string17
Mark Input dependent function xlate_string17
Finalizing xlate_string16
Mark Input dependent function xlate_string16
Finalizing xlate_string15
Mark Input dependent function xlate_string15
Finalizing say_phones
Mark Input dependent function say_phones
Finalizing darray_free
Mark Input dependent function darray_free
Finalizing darray_free1
Mark Input dependent function darray_free1
Finalizing darray_free0
Mark Input dependent function darray_free0
Finalizing say_phones2
Mark Input dependent function say_phones2
Finalizing say_phones1
Mark Input dependent function say_phones1
Finalizing audio_play
Mark Input dependent function audio_play
Finalizing audio_play3
Mark Input dependent function audio_play3
Finalizing audio_play2
Mark Input dependent function audio_play2
Finalizing audio_play1
Mark Input dependent function audio_play1
Finalizing audio_play0
Mark Input dependent function audio_play0
Finalizing holmes
Mark Input dependent function holmes
Finalizing holmes22
Mark Input dependent function holmes22
Finalizing holmes21
Mark Input dependent function holmes21
Finalizing holmes20
Mark Input dependent function holmes20
Finalizing holmes19
Mark Input dependent function holmes19
Finalizing holmes18
Mark Input dependent function holmes18
Finalizing jsru_save
Mark Input dependent function jsru_save
Finalizing jsru_save0
Mark Input dependent function jsru_save0
Finalizing jsru_amp
Mark Input dependent function jsru_amp
Finalizing jsru_freq
Mark Input dependent function jsru_freq
Finalizing holmes17
Mark Input dependent function holmes17
Finalizing parwave
Mark Input dependent function parwave
Finalizing parwave18
Mark Input dependent function parwave18
Finalizing parwave17
Mark Input dependent function parwave17
Finalizing clip
Mark Input dependent function clip
Finalizing clip1
Mark Input dependent function clip1
Finalizing clip0
Mark Input dependent function clip0
Finalizing overload_warning
Mark Input dependent function overload_warning
Finalizing overload_warning0
Mark Input dependent function overload_warning0
Finalizing dBconvert
Mark Input dependent function dBconvert
Finalizing parwave16
Mark Input dependent function parwave16
Finalizing parwave15
Mark Input dependent function parwave15
Finalizing parwave14
Mark Input dependent function parwave14
Finalizing parwave13
Mark Input dependent function parwave13
Finalizing parwave12
Mark Input dependent function parwave12
Finalizing parwave11
Mark Input dependent function parwave11
Finalizing parwave10
Mark Input dependent function parwave10
Finalizing parwave9
Mark Input dependent function parwave9
Finalizing parwave8
Mark Input dependent function parwave8
Finalizing antiresonator
Mark Input dependent function antiresonator
Finalizing parwave7
Mark Input dependent function parwave7
Finalizing parwave6
Mark Input dependent function parwave6
Finalizing parwave5
Mark Input dependent function parwave5
Finalizing pitch_synch_par_reset
Mark Input dependent function pitch_synch_par_reset
Finalizing pitch_synch_par_reset8
Mark Input dependent function pitch_synch_par_reset8
Finalizing pitch_synch_par_reset7
Mark Input dependent function pitch_synch_par_reset7
Finalizing pitch_synch_par_reset6
Mark Input dependent function pitch_synch_par_reset6
Finalizing pitch_synch_par_reset5
Mark Input dependent function pitch_synch_par_reset5
Finalizing pitch_synch_par_reset4
Mark Input dependent function pitch_synch_par_reset4
Finalizing pitch_synch_par_reset3
Mark Input dependent function pitch_synch_par_reset3
Finalizing pitch_synch_par_reset2
Mark Input dependent function pitch_synch_par_reset2
Finalizing pitch_synch_par_reset1
Mark Input dependent function pitch_synch_par_reset1
Finalizing pitch_synch_par_reset0
Mark Input dependent function pitch_synch_par_reset0
Finalizing parwave4
Mark Input dependent function parwave4
Finalizing natural_source
Mark Input dependent function natural_source
Finalizing natural_source1
Mark Input dependent function natural_source1
Finalizing natural_source0
Mark Input dependent function natural_source0
Finalizing parwave3
Mark Input dependent function parwave3
Finalizing impulsive_source
Mark Input dependent function impulsive_source
Finalizing resonator
Mark Input dependent function resonator
Finalizing impulsive_source0
Mark Input dependent function impulsive_source0
Finalizing parwave2
Mark Input dependent function parwave2
Finalizing parwave1
Mark Input dependent function parwave1
Finalizing parwave0
Mark Input dependent function parwave0
Finalizing flutter
Mark Input dependent function flutter
Finalizing flutter0
Mark Input dependent function flutter0
Finalizing frame_init
Mark Input dependent function frame_init
Finalizing frame_init4
Mark Input dependent function frame_init4
Finalizing setabcg
Mark Input dependent function setabcg
Finalizing setabcg0
Mark Input dependent function setabcg0
Finalizing setzeroabc
Mark Input dependent function setzeroabc
Finalizing setzeroabc0
Mark Input dependent function setzeroabc0
Finalizing frame_init3
Mark Input dependent function frame_init3
Finalizing frame_init2
Mark Input dependent function frame_init2
Finalizing frame_init1
Mark Input dependent function frame_init1
Finalizing frame_init0
Mark Input dependent function frame_init0
Finalizing DBtoLIN
Mark Input dependent function DBtoLIN
Finalizing DBtoLIN0
Mark Input dependent function DBtoLIN0
Finalizing filter
Mark Input dependent function filter
Finalizing interpolate
Mark Input dependent function interpolate
Finalizing interpolate3
Mark Input dependent function interpolate3
Finalizing interpolate2
Mark Input dependent function interpolate2
Finalizing interpolate1
Mark Input dependent function interpolate1
Finalizing interpolate0
Mark Input dependent function interpolate0
Finalizing linear
Mark Input dependent function linear
Finalizing linear2
Mark Input dependent function linear2
Finalizing linear1
Mark Input dependent function linear1
Finalizing linear0
Mark Input dependent function linear0
Finalizing holmes16
Mark Input dependent function holmes16
Finalizing holmes15
Mark Input dependent function holmes15
Finalizing holmes14
Mark Input dependent function holmes14
Finalizing holmes13
Mark Input dependent function holmes13
Finalizing holmes12
Mark Input dependent function holmes12
Finalizing holmes11
Mark Input dependent function holmes11
Finalizing holmes10
Mark Input dependent function holmes10
Finalizing holmes9
Mark Input dependent function holmes9
Finalizing holmes8
Mark Input dependent function holmes8
Finalizing holmes7
Mark Input dependent function holmes7
Finalizing holmes6
Mark Input dependent function holmes6
Finalizing holmes5
Mark Input dependent function holmes5
Finalizing holmes4
Mark Input dependent function holmes4
Finalizing set_trans
Mark Input dependent function set_trans
Finalizing set_trans1
Mark Input dependent function set_trans1
Finalizing set_trans0
Mark Input dependent function set_trans0
Finalizing holmes3
Mark Input dependent function holmes3
Finalizing holmes2
Mark Input dependent function holmes2
Finalizing parwave_init
Mark Input dependent function parwave_init
Finalizing parwave_init0
Mark Input dependent function parwave_init0
Finalizing setabc
Mark Input dependent function setabc
Finalizing setabc0
Mark Input dependent function setabc0
Finalizing holmes1
Mark Input dependent function holmes1
Finalizing holmes0
Mark Input dependent function holmes0
Finalizing say_phones0
Mark Input dependent function say_phones0
Finalizing phone_to_elm
Mark Input dependent function phone_to_elm
Finalizing phone_to_elm2
Mark Input dependent function phone_to_elm2
Finalizing phone_to_elm1
Mark Input dependent function phone_to_elm1
Finalizing trie_lookup
Mark Input dependent function trie_lookup
Finalizing trie_lookup3
Mark Input dependent function trie_lookup3
Finalizing trie_lookup2
Mark Input dependent function trie_lookup2
Finalizing trie_lookup1
Mark Input dependent function trie_lookup1
Finalizing trie_lookup0
Mark Input dependent function trie_lookup0
Finalizing enter_phonemes
Mark Input dependent function enter_phonemes
Finalizing enter
Mark Input dependent function enter
Finalizing enter2
Mark Input dependent function enter2
Finalizing trie_insert
Mark Input dependent function trie_insert
Finalizing trie_insert3
Mark Input dependent function trie_insert3
Finalizing trie_insert2
Mark Input dependent function trie_insert2
Finalizing trie_insert1
Mark Input dependent function trie_insert1
Finalizing trie_insert0
Mark Input dependent function trie_insert0
Finalizing enter1
Mark Input dependent function enter1
Finalizing enter0
Mark Input dependent function enter0
Finalizing find_elm
Mark Input dependent function find_elm
Finalizing find_elm1
Mark Input dependent function find_elm1
Finalizing find_elm0
Mark Input dependent function find_elm0
Finalizing phone_to_elm0
Mark Input dependent function phone_to_elm0
Finalizing darray_init
Mark Input dependent function darray_init
Finalizing darray_init0
Mark Input dependent function darray_init0
Finalizing darray_find
Mark Input dependent function darray_find
Finalizing darray_find1
Mark Input dependent function darray_find1
Finalizing darray_find0
Mark Input dependent function darray_find0
Finalizing xlate_string13
Mark Input dependent function xlate_string13
Finalizing xlate_string10
Mark Input dependent function xlate_string10
Finalizing xlate_cardinal8
Mark Input dependent function xlate_cardinal8
Finalizing xlate_cardinal7
Mark Input dependent function xlate_cardinal7
Finalizing xlate_cardinal5
Mark Input dependent function xlate_cardinal5
Finalizing xlate_cardinal3
Mark Input dependent function xlate_cardinal3
Finalizing xlate_cardinal1
Mark Input dependent function xlate_cardinal1
Finalizing xlate_string8
Mark Input dependent function xlate_string8
Finalizing xlate_string7
Mark Input dependent function xlate_string7
Finalizing xlate_string6
Mark Input dependent function xlate_string6
Finalizing xlate_string4
Mark Input dependent function xlate_string4
Finalizing xlate_word12
Mark Input dependent function xlate_word12
Finalizing xlate_word11
Mark Input dependent function xlate_word11
Finalizing xlate_word10
Mark Input dependent function xlate_word10
Finalizing xlate_word9
Mark Input dependent function xlate_word9
Finalizing NRL
Mark Input dependent function NRL
Finalizing guess_word
Mark Input dependent function guess_word
Finalizing guess_word1
Mark Input dependent function guess_word1
Finalizing find_rule
Mark Input dependent function find_rule
Finalizing find_rule3
Mark Input dependent function find_rule3
Finalizing rightmatch
Mark Input dependent function rightmatch
Finalizing rightmatch13
Mark Input dependent function rightmatch13
Finalizing rightmatch12
Mark Input dependent function rightmatch12
Finalizing rightmatch11
Mark Input dependent function rightmatch11
Finalizing rightmatch10
Mark Input dependent function rightmatch10
Finalizing rightmatch9
Mark Input dependent function rightmatch9
Finalizing rightmatch8
Mark Input dependent function rightmatch8
Finalizing rightmatch7
Mark Input dependent function rightmatch7
Finalizing rightmatch6
Mark Input dependent function rightmatch6
Finalizing rightmatch5
Mark Input dependent function rightmatch5
Finalizing rightmatch4
Mark Input dependent function rightmatch4
Finalizing rightmatch3
Mark Input dependent function rightmatch3
Finalizing rightmatch2
Mark Input dependent function rightmatch2
Finalizing rightmatch1
Mark Input dependent function rightmatch1
Finalizing rightmatch0
Mark Input dependent function rightmatch0
Finalizing leftmatch
Mark Input dependent function leftmatch
Finalizing leftmatch9
Mark Input dependent function leftmatch9
Finalizing leftmatch8
Mark Input dependent function leftmatch8
Finalizing leftmatch7
Mark Input dependent function leftmatch7
Finalizing leftmatch6
Mark Input dependent function leftmatch6
Finalizing leftmatch5
Mark Input dependent function leftmatch5
Finalizing leftmatch4
Mark Input dependent function leftmatch4
Finalizing isconsonant
Mark Input dependent function isconsonant
Finalizing leftmatch3
Mark Input dependent function leftmatch3
Finalizing leftmatch2
Mark Input dependent function leftmatch2
Finalizing isvowel
Mark Input dependent function isvowel
Finalizing leftmatch1
Mark Input dependent function leftmatch1
Finalizing leftmatch0
Mark Input dependent function leftmatch0
Finalizing find_rule2
Mark Input dependent function find_rule2
Finalizing find_rule1
Mark Input dependent function find_rule1
Finalizing find_rule0
Mark Input dependent function find_rule0
Finalizing guess_word0
Mark Input dependent function guess_word0
Finalizing NRL3
Mark Input dependent function NRL3
Finalizing NRL2
Mark Input dependent function NRL2
Finalizing NRL1
Mark Input dependent function NRL1
Finalizing NRL0
Mark Input dependent function NRL0
Finalizing xlate_word8
Mark Input dependent function xlate_word8
Finalizing xlate_word6
Mark Input dependent function xlate_word6
Finalizing xlate_word4
Mark Input dependent function xlate_word4
Finalizing xlate_word3
Mark Input dependent function xlate_word3
Finalizing xlate_word2
Mark Input dependent function xlate_word2
Finalizing phone_append
Mark Input dependent function phone_append
Finalizing darray_find.446
Mark Input dependent function darray_find.446
Finalizing darray_find.4461
Mark Input dependent function darray_find.4461
Finalizing Darray_find
Mark Input dependent function Darray_find
Finalizing Darray_find4
Mark Input dependent function Darray_find4
Finalizing Darray_find3
Mark Input dependent function Darray_find3
Finalizing Darray_find2
Mark Input dependent function Darray_find2
Finalizing Darray_find1
Mark Input dependent function Darray_find1
Finalizing Darray_find0
Mark Input dependent function Darray_find0
Finalizing darray_find.4460
Mark Input dependent function darray_find.4460
Finalizing xlate_word1
Mark Input dependent function xlate_word1
Finalizing xlate_word0
Mark Input dependent function xlate_word0
Finalizing dict_find
Mark Input dependent function dict_find
Finalizing suspect_word
Mark Input dependent function suspect_word
Finalizing suspect_word2
Mark Input dependent function suspect_word2
Finalizing suspect_word1
Mark Input dependent function suspect_word1
Finalizing suspect_word0
Mark Input dependent function suspect_word0
Finalizing xlate_string2
Mark Input dependent function xlate_string2
Finalizing xlate_string1
Mark Input dependent function xlate_string1
Finalizing xlate_string0
Mark Input dependent function xlate_string0
Finalizing spell_out0
Mark Input dependent function spell_out0
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/say.x.bc/100/0
here!:spell_out
here!:xlate_string
here!:suspect_word
here!:xlate_word
here!:darray_find
here!:say_phones
here!:darray_init
here!:concat_args
here!:say_string
here!:darray_fget
here!:say_file
here!:main
here!:xlate_cardinal
here!:xlate_ordinal
here!:darray_free
here!:Darray_find
here!:darray_delete
here!:darray_find.73
here!:isvowel
here!:isconsonant
here!:NRL
here!:phone_cat
here!:guess_word
here!:find_rule
here!:leftmatch
here!:rightmatch
here!:trie_insert
here!:trie_lookup
here!:phone_append
here!:darray_find.446
here!:phone_to_elm
here!:enter_phonemes
here!:enter
here!:find_elm
here!:holmes
here!:set_trans
here!:interpolate
here!:filter
here!:jsru_save
here!:jsru_freq
here!:jsru_amp
here!:linear
here!:init_holmes
here!:term_holmes
here!:show_parms
here!:parwave
here!:frame_init
here!:flutter
here!:impulsive_source
here!:natural_source
here!:pitch_synch_par_reset
here!:resonator
here!:antiresonator
here!:clip
here!:overload_warning
here!:dBconvert
here!:DBtoLIN
here!:setabc
here!:setzeroabc
here!:setabcg
here!:parwave_init
here!:init_synth
here!:au_header
here!:wblong
here!:file_init
here!:aufile_write
here!:aufile_term
here!:dict_find
here!:dict_init
here!:dict_term
here!:getargs
here!:audio_init
here!:audio_open
here!:audio_term
here!:audio_play
here!:spell_out0
here!:spell_out1
here!:xlate_string0
here!:xlate_string1
here!:xlate_string2
here!:xlate_string3
here!:xlate_string4
here!:xlate_string5
here!:xlate_string6
here!:xlate_string7
here!:xlate_string8
here!:xlate_string9
here!:xlate_string10
here!:xlate_string11
here!:xlate_string12
here!:xlate_string13
here!:xlate_string14
here!:xlate_string15
here!:xlate_string16
here!:xlate_string17
here!:xlate_string18
here!:xlate_string19
here!:xlate_string20
here!:xlate_string21
here!:xlate_string22
here!:suspect_word0
here!:suspect_word1
here!:suspect_word2
here!:xlate_word0
here!:xlate_word1
here!:xlate_word2
here!:xlate_word3
here!:xlate_word4
here!:xlate_word5
here!:xlate_word6
here!:xlate_word7
here!:xlate_word8
here!:xlate_word9
here!:xlate_word10
here!:xlate_word11
here!:xlate_word12
here!:darray_find0
here!:darray_find1
here!:say_phones0
here!:say_phones1
here!:say_phones2
here!:darray_init0
here!:concat_args0
here!:concat_args1
here!:concat_args2
here!:concat_args3
here!:concat_args4
here!:concat_args5
here!:concat_args6
here!:say_string0
here!:say_file0
here!:say_file1
here!:main0
here!:main1
here!:main2
here!:main3
here!:xlate_cardinal0
here!:xlate_cardinal1
here!:xlate_cardinal2
here!:xlate_cardinal3
here!:xlate_cardinal4
here!:xlate_cardinal5
here!:xlate_cardinal6
here!:xlate_cardinal7
here!:xlate_cardinal8
here!:xlate_cardinal9
here!:xlate_ordinal0
here!:xlate_ordinal1
here!:xlate_ordinal2
here!:xlate_ordinal3
here!:xlate_ordinal4
here!:xlate_ordinal5
here!:xlate_ordinal6
here!:xlate_ordinal7
here!:xlate_ordinal8
here!:xlate_ordinal9
here!:xlate_ordinal10
here!:xlate_ordinal11
here!:darray_free0
here!:darray_free1
here!:Darray_find0
here!:Darray_find1
here!:Darray_find2
here!:Darray_find3
here!:Darray_find4
here!:darray_delete0
here!:darray_delete1
here!:darray_find.730
here!:darray_find.731
here!:NRL0
here!:NRL1
here!:NRL2
here!:NRL3
here!:phone_cat0
here!:phone_cat1
here!:guess_word0
here!:guess_word1
here!:find_rule0
here!:find_rule1
here!:find_rule2
here!:find_rule3
here!:leftmatch0
here!:leftmatch1
here!:leftmatch2
here!:leftmatch3
here!:leftmatch4
here!:leftmatch5
here!:leftmatch6
here!:leftmatch7
here!:leftmatch8
here!:leftmatch9
here!:rightmatch0
here!:rightmatch1
here!:rightmatch2
here!:rightmatch3
here!:rightmatch4
here!:rightmatch5
here!:rightmatch6
here!:rightmatch7
here!:rightmatch8
here!:rightmatch9
here!:rightmatch10
here!:rightmatch11
here!:rightmatch12
here!:rightmatch13
here!:trie_insert0
here!:trie_insert1
here!:trie_insert2
here!:trie_insert3
here!:trie_lookup0
here!:trie_lookup1
here!:trie_lookup2
here!:trie_lookup3
here!:darray_find.4460
here!:darray_find.4461
here!:phone_to_elm0
here!:phone_to_elm1
here!:phone_to_elm2
here!:enter0
here!:enter1
here!:enter2
here!:find_elm0
here!:find_elm1
here!:holmes0
here!:holmes1
here!:holmes2
here!:holmes3
here!:holmes4
here!:holmes5
here!:holmes6
here!:holmes7
here!:holmes8
here!:holmes9
here!:holmes10
here!:holmes11
here!:holmes12
here!:holmes13
here!:holmes14
here!:holmes15
here!:holmes16
here!:holmes17
here!:holmes18
here!:holmes19
here!:holmes20
here!:holmes21
here!:holmes22
here!:set_trans0
here!:set_trans1
here!:interpolate0
here!:interpolate1
here!:interpolate2
here!:interpolate3
here!:jsru_save0
here!:linear0
here!:linear1
here!:linear2
here!:init_holmes0
here!:init_holmes1
here!:init_holmes2
here!:init_holmes3
here!:term_holmes0
here!:term_holmes1
here!:show_parms0
here!:show_parms1
here!:parwave0
here!:parwave1
here!:parwave2
here!:parwave3
here!:parwave4
here!:parwave5
here!:parwave6
here!:parwave7
here!:parwave8
here!:parwave9
here!:parwave10
here!:parwave11
here!:parwave12
here!:parwave13
here!:parwave14
here!:parwave15
here!:parwave16
here!:parwave17
here!:parwave18
here!:frame_init0
here!:frame_init1
here!:frame_init2
here!:frame_init3
here!:frame_init4
here!:flutter0
here!:impulsive_source0
here!:natural_source0
here!:natural_source1
here!:pitch_synch_par_reset0
here!:pitch_synch_par_reset1
here!:pitch_synch_par_reset2
here!:pitch_synch_par_reset3
here!:pitch_synch_par_reset4
here!:pitch_synch_par_reset5
here!:pitch_synch_par_reset6
here!:pitch_synch_par_reset7
here!:pitch_synch_par_reset8
here!:clip0
here!:clip1
here!:overload_warning0
here!:DBtoLIN0
here!:setabc0
here!:setzeroabc0
here!:setabcg0
here!:parwave_init0
here!:init_synth0
here!:init_synth1
here!:au_header0
here!:wblong0
here!:file_init0
here!:file_init1
here!:file_init2
here!:file_init3
here!:file_init4
here!:file_init5
here!:aufile_write0
here!:aufile_write1
here!:aufile_write2
here!:aufile_write3
here!:aufile_write4
here!:aufile_write5
here!:aufile_write6
here!:aufile_term0
here!:aufile_term1
here!:aufile_term2
here!:getargs0
here!:getargs1
here!:getargs2
here!:getargs3
here!:getargs4
here!:getargs5
here!:getargs6
here!:getargs7
here!:getargs8
here!:getargs9
here!:getargs10
here!:getargs11
here!:getargs12
here!:getargs13
here!:getargs14
here!:getargs15
here!:getargs16
here!:getargs17
here!:getargs18
here!:getargs19
here!:getargs20
here!:getargs21
here!:getargs22
here!:getargs23
here!:audio_init0
here!:audio_init1
here!:audio_init2
here!:audio_init3
here!:audio_open0
here!:audio_term0
here!:audio_term1
here!:audio_play0
here!:audio_play1
here!:audio_play2
here!:audio_play3
here!:audio_play3
got filter function names
Add filter function spell_out
FunctionInfo. Adding function:spell_out
did not find fprintf demangled to fprintf
Add filter function xlate_string
FunctionInfo. Adding function:xlate_string
did not find __ctype_b_loc demangled to __ctype_b_loc
Add filter function suspect_word
FunctionInfo. Adding function:suspect_word
Add filter function xlate_word
FunctionInfo. Adding function:xlate_word
did not find strchr demangled to strchr
Add filter function darray_find
FunctionInfo. Adding function:darray_find
Add filter function say_phones
FunctionInfo. Adding function:say_phones
Add filter function darray_init
FunctionInfo. Adding function:darray_init
did not find malloc demangled to malloc
did not find free demangled to free
did not find toupper demangled to toupper
Add filter function concat_args
FunctionInfo. Adding function:concat_args
did not find strlen demangled to strlen
Add filter function say_string
FunctionInfo. Adding function:say_string
Add filter function darray_fget
FunctionInfo. Adding function:darray_fget
did not find fgetc demangled to fgetc
Add filter function say_file
FunctionInfo. Adding function:say_file
Add filter function main
FunctionInfo. Adding function:main
Add filter function xlate_cardinal
FunctionInfo. Adding function:xlate_cardinal
Add filter function xlate_ordinal
FunctionInfo. Adding function:xlate_ordinal
Add filter function darray_free
FunctionInfo. Adding function:darray_free
Add filter function Darray_find
FunctionInfo. Adding function:Darray_find
did not find abort demangled to abort
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
Add filter function darray_delete
FunctionInfo. Adding function:darray_delete
Add filter function darray_find.73
FunctionInfo. Adding function:darray_find.73
Add filter function isvowel
FunctionInfo. Adding function:isvowel
Add filter function isconsonant
FunctionInfo. Adding function:isconsonant
Add filter function NRL
FunctionInfo. Adding function:NRL
Add filter function phone_cat
FunctionInfo. Adding function:phone_cat
Add filter function guess_word
FunctionInfo. Adding function:guess_word
Add filter function find_rule
FunctionInfo. Adding function:find_rule
Add filter function leftmatch
FunctionInfo. Adding function:leftmatch
Add filter function rightmatch
FunctionInfo. Adding function:rightmatch
Add filter function trie_insert
FunctionInfo. Adding function:trie_insert
Add filter function trie_lookup
FunctionInfo. Adding function:trie_lookup
Add filter function phone_append
FunctionInfo. Adding function:phone_append
Add filter function darray_find.446
FunctionInfo. Adding function:darray_find.446
Add filter function phone_to_elm
FunctionInfo. Adding function:phone_to_elm
Add filter function enter_phonemes
FunctionInfo. Adding function:enter_phonemes
Add filter function enter
FunctionInfo. Adding function:enter
did not find llvm.va_start demangled to llvm.va_start
Add filter function find_elm
FunctionInfo. Adding function:find_elm
did not find llvm.va_end demangled to llvm.va_end
did not find strcmp demangled to strcmp
Add filter function holmes
FunctionInfo. Adding function:holmes
Add filter function set_trans
FunctionInfo. Adding function:set_trans
Add filter function interpolate
FunctionInfo. Adding function:interpolate
Add filter function filter
FunctionInfo. Adding function:filter
Add filter function jsru_save
FunctionInfo. Adding function:jsru_save
did not find log demangled to log
Add filter function jsru_freq
FunctionInfo. Adding function:jsru_freq
did not find fputc demangled to fputc
Add filter function jsru_amp
FunctionInfo. Adding function:jsru_amp
Add filter function linear
FunctionInfo. Adding function:linear
Add filter function init_holmes
FunctionInfo. Adding function:init_holmes
did not find fopen demangled to fopen
did not find perror demangled to perror
Add filter function term_holmes
FunctionInfo. Adding function:term_holmes
did not find fclose demangled to fclose
Add filter function show_parms
FunctionInfo. Adding function:show_parms
did not find printf demangled to printf
Add filter function parwave
FunctionInfo. Adding function:parwave
Add filter function frame_init
FunctionInfo. Adding function:frame_init
Add filter function flutter
FunctionInfo. Adding function:flutter
Add filter function impulsive_source
FunctionInfo. Adding function:impulsive_source
Add filter function natural_source
FunctionInfo. Adding function:natural_source
Add filter function pitch_synch_par_reset
FunctionInfo. Adding function:pitch_synch_par_reset
Add filter function resonator
FunctionInfo. Adding function:resonator
Add filter function antiresonator
FunctionInfo. Adding function:antiresonator
Add filter function clip
FunctionInfo. Adding function:clip
Add filter function overload_warning
FunctionInfo. Adding function:overload_warning
Add filter function dBconvert
FunctionInfo. Adding function:dBconvert
did not find log10 demangled to log10
Add filter function DBtoLIN
FunctionInfo. Adding function:DBtoLIN
Add filter function setabc
FunctionInfo. Adding function:setabc
did not find exp demangled to exp
did not find cos demangled to cos
did not find sin demangled to sin
Add filter function setzeroabc
FunctionInfo. Adding function:setzeroabc
Add filter function setabcg
FunctionInfo. Adding function:setabcg
Add filter function parwave_init
FunctionInfo. Adding function:parwave_init
Add filter function init_synth
FunctionInfo. Adding function:init_synth
Add filter function au_header
FunctionInfo. Adding function:au_header
Add filter function wblong
FunctionInfo. Adding function:wblong
did not find write demangled to write
Add filter function file_init
FunctionInfo. Adding function:file_init
did not find open demangled to open
Add filter function aufile_write
FunctionInfo. Adding function:aufile_write
Add filter function aufile_term
FunctionInfo. Adding function:aufile_term
did not find lseek demangled to lseek
did not find ftruncate demangled to ftruncate
did not find close demangled to close
Add filter function dict_find
FunctionInfo. Adding function:dict_find
Add filter function dict_init
FunctionInfo. Adding function:dict_init
Add filter function dict_term
FunctionInfo. Adding function:dict_term
Add filter function getargs
FunctionInfo. Adding function:getargs
did not find __isoc99_sscanf demangled to __isoc99_sscanf
Add filter function audio_init
FunctionInfo. Adding function:audio_init
Add filter function audio_open
FunctionInfo. Adding function:audio_open
did not find ioctl demangled to ioctl
Add filter function audio_term
FunctionInfo. Adding function:audio_term
Add filter function audio_play
FunctionInfo. Adding function:audio_play
did not find exit demangled to exit
Add filter function spell_out0
FunctionInfo. Adding function:spell_out0
Add filter function spell_out1
FunctionInfo. Adding function:spell_out1
Add filter function xlate_string0
FunctionInfo. Adding function:xlate_string0
Add filter function xlate_string1
FunctionInfo. Adding function:xlate_string1
Add filter function xlate_string2
FunctionInfo. Adding function:xlate_string2
Add filter function xlate_string3
FunctionInfo. Adding function:xlate_string3
Add filter function xlate_string4
FunctionInfo. Adding function:xlate_string4
Add filter function xlate_string5
FunctionInfo. Adding function:xlate_string5
Add filter function xlate_string6
FunctionInfo. Adding function:xlate_string6
Add filter function xlate_string7
FunctionInfo. Adding function:xlate_string7
Add filter function xlate_string8
FunctionInfo. Adding function:xlate_string8
Add filter function xlate_string9
FunctionInfo. Adding function:xlate_string9
Add filter function xlate_string10
FunctionInfo. Adding function:xlate_string10
Add filter function xlate_string11
FunctionInfo. Adding function:xlate_string11
Add filter function xlate_string12
FunctionInfo. Adding function:xlate_string12
Add filter function xlate_string13
FunctionInfo. Adding function:xlate_string13
Add filter function xlate_string14
FunctionInfo. Adding function:xlate_string14
Add filter function xlate_string15
FunctionInfo. Adding function:xlate_string15
Add filter function xlate_string16
FunctionInfo. Adding function:xlate_string16
Add filter function xlate_string17
FunctionInfo. Adding function:xlate_string17
Add filter function xlate_string18
FunctionInfo. Adding function:xlate_string18
Add filter function xlate_string19
FunctionInfo. Adding function:xlate_string19
Add filter function xlate_string20
FunctionInfo. Adding function:xlate_string20
Add filter function xlate_string21
FunctionInfo. Adding function:xlate_string21
Add filter function xlate_string22
FunctionInfo. Adding function:xlate_string22
Add filter function suspect_word0
FunctionInfo. Adding function:suspect_word0
Add filter function suspect_word1
FunctionInfo. Adding function:suspect_word1
Add filter function suspect_word2
FunctionInfo. Adding function:suspect_word2
Add filter function xlate_word0
FunctionInfo. Adding function:xlate_word0
Add filter function xlate_word1
FunctionInfo. Adding function:xlate_word1
Add filter function xlate_word2
FunctionInfo. Adding function:xlate_word2
Add filter function xlate_word3
FunctionInfo. Adding function:xlate_word3
Add filter function xlate_word4
FunctionInfo. Adding function:xlate_word4
Add filter function xlate_word5
FunctionInfo. Adding function:xlate_word5
Add filter function xlate_word6
FunctionInfo. Adding function:xlate_word6
Add filter function xlate_word7
FunctionInfo. Adding function:xlate_word7
Add filter function xlate_word8
FunctionInfo. Adding function:xlate_word8
Add filter function xlate_word9
FunctionInfo. Adding function:xlate_word9
Add filter function xlate_word10
FunctionInfo. Adding function:xlate_word10
Add filter function xlate_word11
FunctionInfo. Adding function:xlate_word11
Add filter function xlate_word12
FunctionInfo. Adding function:xlate_word12
Add filter function darray_find0
FunctionInfo. Adding function:darray_find0
Add filter function darray_find1
FunctionInfo. Adding function:darray_find1
Add filter function say_phones0
FunctionInfo. Adding function:say_phones0
Add filter function say_phones1
FunctionInfo. Adding function:say_phones1
Add filter function say_phones2
FunctionInfo. Adding function:say_phones2
Add filter function darray_init0
FunctionInfo. Adding function:darray_init0
Add filter function concat_args0
FunctionInfo. Adding function:concat_args0
Add filter function concat_args1
FunctionInfo. Adding function:concat_args1
Add filter function concat_args2
FunctionInfo. Adding function:concat_args2
Add filter function concat_args3
FunctionInfo. Adding function:concat_args3
Add filter function concat_args4
FunctionInfo. Adding function:concat_args4
Add filter function concat_args5
FunctionInfo. Adding function:concat_args5
Add filter function concat_args6
FunctionInfo. Adding function:concat_args6
Add filter function say_string0
FunctionInfo. Adding function:say_string0
Add filter function say_file0
FunctionInfo. Adding function:say_file0
Add filter function say_file1
FunctionInfo. Adding function:say_file1
Add filter function main0
FunctionInfo. Adding function:main0
Add filter function main1
FunctionInfo. Adding function:main1
Add filter function main2
FunctionInfo. Adding function:main2
Add filter function main3
FunctionInfo. Adding function:main3
Add filter function xlate_cardinal0
FunctionInfo. Adding function:xlate_cardinal0
Add filter function xlate_cardinal1
FunctionInfo. Adding function:xlate_cardinal1
Add filter function xlate_cardinal2
FunctionInfo. Adding function:xlate_cardinal2
Add filter function xlate_cardinal3
FunctionInfo. Adding function:xlate_cardinal3
Add filter function xlate_cardinal4
FunctionInfo. Adding function:xlate_cardinal4
Add filter function xlate_cardinal5
FunctionInfo. Adding function:xlate_cardinal5
Add filter function xlate_cardinal6
FunctionInfo. Adding function:xlate_cardinal6
Add filter function xlate_cardinal7
FunctionInfo. Adding function:xlate_cardinal7
Add filter function xlate_cardinal8
FunctionInfo. Adding function:xlate_cardinal8
Add filter function xlate_cardinal9
FunctionInfo. Adding function:xlate_cardinal9
Add filter function xlate_ordinal0
FunctionInfo. Adding function:xlate_ordinal0
Add filter function xlate_ordinal1
FunctionInfo. Adding function:xlate_ordinal1
Add filter function xlate_ordinal2
FunctionInfo. Adding function:xlate_ordinal2
Add filter function xlate_ordinal3
FunctionInfo. Adding function:xlate_ordinal3
Add filter function xlate_ordinal4
FunctionInfo. Adding function:xlate_ordinal4
Add filter function xlate_ordinal5
FunctionInfo. Adding function:xlate_ordinal5
Add filter function xlate_ordinal6
FunctionInfo. Adding function:xlate_ordinal6
Add filter function xlate_ordinal7
FunctionInfo. Adding function:xlate_ordinal7
Add filter function xlate_ordinal8
FunctionInfo. Adding function:xlate_ordinal8
Add filter function xlate_ordinal9
FunctionInfo. Adding function:xlate_ordinal9
Add filter function xlate_ordinal10
FunctionInfo. Adding function:xlate_ordinal10
Add filter function xlate_ordinal11
FunctionInfo. Adding function:xlate_ordinal11
Add filter function darray_free0
FunctionInfo. Adding function:darray_free0
Add filter function darray_free1
FunctionInfo. Adding function:darray_free1
Add filter function Darray_find0
FunctionInfo. Adding function:Darray_find0
Add filter function Darray_find1
FunctionInfo. Adding function:Darray_find1
Add filter function Darray_find2
FunctionInfo. Adding function:Darray_find2
Add filter function Darray_find3
FunctionInfo. Adding function:Darray_find3
Add filter function Darray_find4
FunctionInfo. Adding function:Darray_find4
Add filter function darray_delete0
FunctionInfo. Adding function:darray_delete0
Add filter function darray_delete1
FunctionInfo. Adding function:darray_delete1
Add filter function darray_find.730
FunctionInfo. Adding function:darray_find.730
Add filter function darray_find.731
FunctionInfo. Adding function:darray_find.731
Add filter function NRL0
FunctionInfo. Adding function:NRL0
Add filter function NRL1
FunctionInfo. Adding function:NRL1
Add filter function NRL2
FunctionInfo. Adding function:NRL2
Add filter function NRL3
FunctionInfo. Adding function:NRL3
Add filter function phone_cat0
FunctionInfo. Adding function:phone_cat0
Add filter function phone_cat1
FunctionInfo. Adding function:phone_cat1
Add filter function guess_word0
FunctionInfo. Adding function:guess_word0
Add filter function guess_word1
FunctionInfo. Adding function:guess_word1
Add filter function find_rule0
FunctionInfo. Adding function:find_rule0
Add filter function find_rule1
FunctionInfo. Adding function:find_rule1
Add filter function find_rule2
FunctionInfo. Adding function:find_rule2
Add filter function find_rule3
FunctionInfo. Adding function:find_rule3
Add filter function leftmatch0
FunctionInfo. Adding function:leftmatch0
Add filter function leftmatch1
FunctionInfo. Adding function:leftmatch1
Add filter function leftmatch2
FunctionInfo. Adding function:leftmatch2
Add filter function leftmatch3
FunctionInfo. Adding function:leftmatch3
Add filter function leftmatch4
FunctionInfo. Adding function:leftmatch4
Add filter function leftmatch5
FunctionInfo. Adding function:leftmatch5
Add filter function leftmatch6
FunctionInfo. Adding function:leftmatch6
Add filter function leftmatch7
FunctionInfo. Adding function:leftmatch7
Add filter function leftmatch8
FunctionInfo. Adding function:leftmatch8
Add filter function leftmatch9
FunctionInfo. Adding function:leftmatch9
Add filter function rightmatch0
FunctionInfo. Adding function:rightmatch0
Add filter function rightmatch1
FunctionInfo. Adding function:rightmatch1
Add filter function rightmatch2
FunctionInfo. Adding function:rightmatch2
Add filter function rightmatch3
FunctionInfo. Adding function:rightmatch3
Add filter function rightmatch4
FunctionInfo. Adding function:rightmatch4
Add filter function rightmatch5
FunctionInfo. Adding function:rightmatch5
Add filter function rightmatch6
FunctionInfo. Adding function:rightmatch6
Add filter function rightmatch7
FunctionInfo. Adding function:rightmatch7
Add filter function rightmatch8
FunctionInfo. Adding function:rightmatch8
Add filter function rightmatch9
FunctionInfo. Adding function:rightmatch9
Add filter function rightmatch10
FunctionInfo. Adding function:rightmatch10
Add filter function rightmatch11
FunctionInfo. Adding function:rightmatch11
Add filter function rightmatch12
FunctionInfo. Adding function:rightmatch12
Add filter function rightmatch13
FunctionInfo. Adding function:rightmatch13
Add filter function trie_insert0
FunctionInfo. Adding function:trie_insert0
Add filter function trie_insert1
FunctionInfo. Adding function:trie_insert1
Add filter function trie_insert2
FunctionInfo. Adding function:trie_insert2
Add filter function trie_insert3
FunctionInfo. Adding function:trie_insert3
Add filter function trie_lookup0
FunctionInfo. Adding function:trie_lookup0
Add filter function trie_lookup1
FunctionInfo. Adding function:trie_lookup1
Add filter function trie_lookup2
FunctionInfo. Adding function:trie_lookup2
Add filter function trie_lookup3
FunctionInfo. Adding function:trie_lookup3
Add filter function darray_find.4460
FunctionInfo. Adding function:darray_find.4460
Add filter function darray_find.4461
FunctionInfo. Adding function:darray_find.4461
Add filter function phone_to_elm0
FunctionInfo. Adding function:phone_to_elm0
Add filter function phone_to_elm1
FunctionInfo. Adding function:phone_to_elm1
Add filter function phone_to_elm2
FunctionInfo. Adding function:phone_to_elm2
Add filter function enter0
FunctionInfo. Adding function:enter0
Add filter function enter1
FunctionInfo. Adding function:enter1
Add filter function enter2
FunctionInfo. Adding function:enter2
Add filter function find_elm0
FunctionInfo. Adding function:find_elm0
Add filter function find_elm1
FunctionInfo. Adding function:find_elm1
Add filter function holmes0
FunctionInfo. Adding function:holmes0
Add filter function holmes1
FunctionInfo. Adding function:holmes1
Add filter function holmes2
FunctionInfo. Adding function:holmes2
Add filter function holmes3
FunctionInfo. Adding function:holmes3
Add filter function holmes4
FunctionInfo. Adding function:holmes4
Add filter function holmes5
FunctionInfo. Adding function:holmes5
Add filter function holmes6
FunctionInfo. Adding function:holmes6
Add filter function holmes7
FunctionInfo. Adding function:holmes7
Add filter function holmes8
FunctionInfo. Adding function:holmes8
Add filter function holmes9
FunctionInfo. Adding function:holmes9
Add filter function holmes10
FunctionInfo. Adding function:holmes10
Add filter function holmes11
FunctionInfo. Adding function:holmes11
Add filter function holmes12
FunctionInfo. Adding function:holmes12
Add filter function holmes13
FunctionInfo. Adding function:holmes13
Add filter function holmes14
FunctionInfo. Adding function:holmes14
Add filter function holmes15
FunctionInfo. Adding function:holmes15
Add filter function holmes16
FunctionInfo. Adding function:holmes16
Add filter function holmes17
FunctionInfo. Adding function:holmes17
Add filter function holmes18
FunctionInfo. Adding function:holmes18
Add filter function holmes19
FunctionInfo. Adding function:holmes19
Add filter function holmes20
FunctionInfo. Adding function:holmes20
Add filter function holmes21
FunctionInfo. Adding function:holmes21
Add filter function holmes22
FunctionInfo. Adding function:holmes22
Add filter function set_trans0
FunctionInfo. Adding function:set_trans0
Add filter function set_trans1
FunctionInfo. Adding function:set_trans1
Add filter function interpolate0
FunctionInfo. Adding function:interpolate0
Add filter function interpolate1
FunctionInfo. Adding function:interpolate1
Add filter function interpolate2
FunctionInfo. Adding function:interpolate2
Add filter function interpolate3
FunctionInfo. Adding function:interpolate3
Add filter function jsru_save0
FunctionInfo. Adding function:jsru_save0
Add filter function linear0
FunctionInfo. Adding function:linear0
Add filter function linear1
FunctionInfo. Adding function:linear1
Add filter function linear2
FunctionInfo. Adding function:linear2
Add filter function init_holmes0
FunctionInfo. Adding function:init_holmes0
Add filter function init_holmes1
FunctionInfo. Adding function:init_holmes1
Add filter function init_holmes2
FunctionInfo. Adding function:init_holmes2
Add filter function init_holmes3
FunctionInfo. Adding function:init_holmes3
Add filter function term_holmes0
FunctionInfo. Adding function:term_holmes0
Add filter function term_holmes1
FunctionInfo. Adding function:term_holmes1
Add filter function show_parms0
FunctionInfo. Adding function:show_parms0
Add filter function show_parms1
FunctionInfo. Adding function:show_parms1
Add filter function parwave0
FunctionInfo. Adding function:parwave0
Add filter function parwave1
FunctionInfo. Adding function:parwave1
Add filter function parwave2
FunctionInfo. Adding function:parwave2
Add filter function parwave3
FunctionInfo. Adding function:parwave3
Add filter function parwave4
FunctionInfo. Adding function:parwave4
Add filter function parwave5
FunctionInfo. Adding function:parwave5
Add filter function parwave6
FunctionInfo. Adding function:parwave6
Add filter function parwave7
FunctionInfo. Adding function:parwave7
Add filter function parwave8
FunctionInfo. Adding function:parwave8
Add filter function parwave9
FunctionInfo. Adding function:parwave9
Add filter function parwave10
FunctionInfo. Adding function:parwave10
Add filter function parwave11
FunctionInfo. Adding function:parwave11
Add filter function parwave12
FunctionInfo. Adding function:parwave12
Add filter function parwave13
FunctionInfo. Adding function:parwave13
Add filter function parwave14
FunctionInfo. Adding function:parwave14
Add filter function parwave15
FunctionInfo. Adding function:parwave15
Add filter function parwave16
FunctionInfo. Adding function:parwave16
Add filter function parwave17
FunctionInfo. Adding function:parwave17
Add filter function parwave18
FunctionInfo. Adding function:parwave18
Add filter function frame_init0
FunctionInfo. Adding function:frame_init0
Add filter function frame_init1
FunctionInfo. Adding function:frame_init1
Add filter function frame_init2
FunctionInfo. Adding function:frame_init2
Add filter function frame_init3
FunctionInfo. Adding function:frame_init3
Add filter function frame_init4
FunctionInfo. Adding function:frame_init4
Add filter function flutter0
FunctionInfo. Adding function:flutter0
Add filter function impulsive_source0
FunctionInfo. Adding function:impulsive_source0
Add filter function natural_source0
FunctionInfo. Adding function:natural_source0
Add filter function natural_source1
FunctionInfo. Adding function:natural_source1
Add filter function pitch_synch_par_reset0
FunctionInfo. Adding function:pitch_synch_par_reset0
Add filter function pitch_synch_par_reset1
FunctionInfo. Adding function:pitch_synch_par_reset1
Add filter function pitch_synch_par_reset2
FunctionInfo. Adding function:pitch_synch_par_reset2
Add filter function pitch_synch_par_reset3
FunctionInfo. Adding function:pitch_synch_par_reset3
Add filter function pitch_synch_par_reset4
FunctionInfo. Adding function:pitch_synch_par_reset4
Add filter function pitch_synch_par_reset5
FunctionInfo. Adding function:pitch_synch_par_reset5
Add filter function pitch_synch_par_reset6
FunctionInfo. Adding function:pitch_synch_par_reset6
Add filter function pitch_synch_par_reset7
FunctionInfo. Adding function:pitch_synch_par_reset7
Add filter function pitch_synch_par_reset8
FunctionInfo. Adding function:pitch_synch_par_reset8
Add filter function clip0
FunctionInfo. Adding function:clip0
Add filter function clip1
FunctionInfo. Adding function:clip1
Add filter function overload_warning0
FunctionInfo. Adding function:overload_warning0
Add filter function DBtoLIN0
FunctionInfo. Adding function:DBtoLIN0
Add filter function setabc0
FunctionInfo. Adding function:setabc0
Add filter function setzeroabc0
FunctionInfo. Adding function:setzeroabc0
Add filter function setabcg0
FunctionInfo. Adding function:setabcg0
Add filter function parwave_init0
FunctionInfo. Adding function:parwave_init0
Add filter function init_synth0
FunctionInfo. Adding function:init_synth0
Add filter function init_synth1
FunctionInfo. Adding function:init_synth1
Add filter function au_header0
FunctionInfo. Adding function:au_header0
Add filter function wblong0
FunctionInfo. Adding function:wblong0
Add filter function file_init0
FunctionInfo. Adding function:file_init0
Add filter function file_init1
FunctionInfo. Adding function:file_init1
Add filter function file_init2
FunctionInfo. Adding function:file_init2
Add filter function file_init3
FunctionInfo. Adding function:file_init3
Add filter function file_init4
FunctionInfo. Adding function:file_init4
Add filter function file_init5
FunctionInfo. Adding function:file_init5
Add filter function aufile_write0
FunctionInfo. Adding function:aufile_write0
Add filter function aufile_write1
FunctionInfo. Adding function:aufile_write1
Add filter function aufile_write2
FunctionInfo. Adding function:aufile_write2
Add filter function aufile_write3
FunctionInfo. Adding function:aufile_write3
Add filter function aufile_write4
FunctionInfo. Adding function:aufile_write4
Add filter function aufile_write5
FunctionInfo. Adding function:aufile_write5
Add filter function aufile_write6
FunctionInfo. Adding function:aufile_write6
Add filter function aufile_term0
FunctionInfo. Adding function:aufile_term0
Add filter function aufile_term1
FunctionInfo. Adding function:aufile_term1
Add filter function aufile_term2
FunctionInfo. Adding function:aufile_term2
Add filter function getargs0
FunctionInfo. Adding function:getargs0
Add filter function getargs1
FunctionInfo. Adding function:getargs1
Add filter function getargs2
FunctionInfo. Adding function:getargs2
Add filter function getargs3
FunctionInfo. Adding function:getargs3
Add filter function getargs4
FunctionInfo. Adding function:getargs4
Add filter function getargs5
FunctionInfo. Adding function:getargs5
Add filter function getargs6
FunctionInfo. Adding function:getargs6
Add filter function getargs7
FunctionInfo. Adding function:getargs7
Add filter function getargs8
FunctionInfo. Adding function:getargs8
Add filter function getargs9
FunctionInfo. Adding function:getargs9
Add filter function getargs10
FunctionInfo. Adding function:getargs10
Add filter function getargs11
FunctionInfo. Adding function:getargs11
Add filter function getargs12
FunctionInfo. Adding function:getargs12
Add filter function getargs13
FunctionInfo. Adding function:getargs13
Add filter function getargs14
FunctionInfo. Adding function:getargs14
Add filter function getargs15
FunctionInfo. Adding function:getargs15
Add filter function getargs16
FunctionInfo. Adding function:getargs16
Add filter function getargs17
FunctionInfo. Adding function:getargs17
Add filter function getargs18
FunctionInfo. Adding function:getargs18
Add filter function getargs19
FunctionInfo. Adding function:getargs19
Add filter function getargs20
FunctionInfo. Adding function:getargs20
Add filter function getargs21
FunctionInfo. Adding function:getargs21
Add filter function getargs22
FunctionInfo. Adding function:getargs22
Add filter function getargs23
FunctionInfo. Adding function:getargs23
Add filter function audio_init0
FunctionInfo. Adding function:audio_init0
Add filter function audio_init1
FunctionInfo. Adding function:audio_init1
Add filter function audio_init2
FunctionInfo. Adding function:audio_init2
Add filter function audio_init3
FunctionInfo. Adding function:audio_init3
Add filter function audio_open0
FunctionInfo. Adding function:audio_open0
Add filter function audio_term0
FunctionInfo. Adding function:audio_term0
Add filter function audio_term1
FunctionInfo. Adding function:audio_term1
Add filter function audio_play0
FunctionInfo. Adding function:audio_play0
Add filter function audio_play1
FunctionInfo. Adding function:audio_play1
Add filter function audio_play2
FunctionInfo. Adding function:audio_play2
Add filter function audio_play3
FunctionInfo. Adding function:audio_play3
Adding spell_out other functions, ExtractedOnly mode uses other functions
Adding xlate_string other functions, ExtractedOnly mode uses other functions
Adding suspect_word other functions, ExtractedOnly mode uses other functions
Adding xlate_word other functions, ExtractedOnly mode uses other functions
Adding darray_find other functions, ExtractedOnly mode uses other functions
Adding say_phones other functions, ExtractedOnly mode uses other functions
Adding darray_init other functions, ExtractedOnly mode uses other functions
Adding concat_args other functions, ExtractedOnly mode uses other functions
Adding say_string other functions, ExtractedOnly mode uses other functions
Adding darray_fget other functions, ExtractedOnly mode uses other functions
Adding say_file other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal other functions, ExtractedOnly mode uses other functions
Adding darray_free other functions, ExtractedOnly mode uses other functions
Adding Darray_find other functions, ExtractedOnly mode uses other functions
Adding darray_delete other functions, ExtractedOnly mode uses other functions
Adding darray_find.73 other functions, ExtractedOnly mode uses other functions
Adding isvowel other functions, ExtractedOnly mode uses other functions
Adding isconsonant other functions, ExtractedOnly mode uses other functions
Adding NRL other functions, ExtractedOnly mode uses other functions
Adding phone_cat other functions, ExtractedOnly mode uses other functions
Adding guess_word other functions, ExtractedOnly mode uses other functions
Adding find_rule other functions, ExtractedOnly mode uses other functions
Adding leftmatch other functions, ExtractedOnly mode uses other functions
Adding rightmatch other functions, ExtractedOnly mode uses other functions
Adding trie_insert other functions, ExtractedOnly mode uses other functions
Adding trie_lookup other functions, ExtractedOnly mode uses other functions
Adding phone_append other functions, ExtractedOnly mode uses other functions
Adding darray_find.446 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm other functions, ExtractedOnly mode uses other functions
Adding enter_phonemes other functions, ExtractedOnly mode uses other functions
Adding enter other functions, ExtractedOnly mode uses other functions
Adding find_elm other functions, ExtractedOnly mode uses other functions
Adding holmes other functions, ExtractedOnly mode uses other functions
Adding set_trans other functions, ExtractedOnly mode uses other functions
Adding interpolate other functions, ExtractedOnly mode uses other functions
Adding filter other functions, ExtractedOnly mode uses other functions
Adding jsru_save other functions, ExtractedOnly mode uses other functions
Adding jsru_freq other functions, ExtractedOnly mode uses other functions
Adding jsru_amp other functions, ExtractedOnly mode uses other functions
Adding linear other functions, ExtractedOnly mode uses other functions
Adding init_holmes other functions, ExtractedOnly mode uses other functions
Adding term_holmes other functions, ExtractedOnly mode uses other functions
Adding show_parms other functions, ExtractedOnly mode uses other functions
Adding parwave other functions, ExtractedOnly mode uses other functions
Adding frame_init other functions, ExtractedOnly mode uses other functions
Adding flutter other functions, ExtractedOnly mode uses other functions
Adding impulsive_source other functions, ExtractedOnly mode uses other functions
Adding natural_source other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset other functions, ExtractedOnly mode uses other functions
Adding resonator other functions, ExtractedOnly mode uses other functions
Adding antiresonator other functions, ExtractedOnly mode uses other functions
Adding clip other functions, ExtractedOnly mode uses other functions
Adding overload_warning other functions, ExtractedOnly mode uses other functions
Adding dBconvert other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN other functions, ExtractedOnly mode uses other functions
Adding setabc other functions, ExtractedOnly mode uses other functions
Adding setzeroabc other functions, ExtractedOnly mode uses other functions
Adding setabcg other functions, ExtractedOnly mode uses other functions
Adding parwave_init other functions, ExtractedOnly mode uses other functions
Adding init_synth other functions, ExtractedOnly mode uses other functions
Adding au_header other functions, ExtractedOnly mode uses other functions
Adding wblong other functions, ExtractedOnly mode uses other functions
Adding file_init other functions, ExtractedOnly mode uses other functions
Adding aufile_write other functions, ExtractedOnly mode uses other functions
Adding aufile_term other functions, ExtractedOnly mode uses other functions
Adding dict_find other functions, ExtractedOnly mode uses other functions
Adding dict_init other functions, ExtractedOnly mode uses other functions
Adding dict_term other functions, ExtractedOnly mode uses other functions
Adding getargs other functions, ExtractedOnly mode uses other functions
Adding audio_init other functions, ExtractedOnly mode uses other functions
Adding audio_open other functions, ExtractedOnly mode uses other functions
Adding audio_term other functions, ExtractedOnly mode uses other functions
Adding audio_play other functions, ExtractedOnly mode uses other functions
Adding spell_out0 other functions, ExtractedOnly mode uses other functions
Adding spell_out1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string0 other functions, ExtractedOnly mode uses other functions
Adding xlate_string1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string2 other functions, ExtractedOnly mode uses other functions
Adding xlate_string3 other functions, ExtractedOnly mode uses other functions
Adding xlate_string4 other functions, ExtractedOnly mode uses other functions
Adding xlate_string5 other functions, ExtractedOnly mode uses other functions
Adding xlate_string6 other functions, ExtractedOnly mode uses other functions
Adding xlate_string7 other functions, ExtractedOnly mode uses other functions
Adding xlate_string8 other functions, ExtractedOnly mode uses other functions
Adding xlate_string9 other functions, ExtractedOnly mode uses other functions
Adding xlate_string10 other functions, ExtractedOnly mode uses other functions
Adding xlate_string11 other functions, ExtractedOnly mode uses other functions
Adding xlate_string12 other functions, ExtractedOnly mode uses other functions
Adding xlate_string13 other functions, ExtractedOnly mode uses other functions
Adding xlate_string14 other functions, ExtractedOnly mode uses other functions
Adding xlate_string15 other functions, ExtractedOnly mode uses other functions
Adding xlate_string16 other functions, ExtractedOnly mode uses other functions
Adding xlate_string17 other functions, ExtractedOnly mode uses other functions
Adding xlate_string18 other functions, ExtractedOnly mode uses other functions
Adding xlate_string19 other functions, ExtractedOnly mode uses other functions
Adding xlate_string20 other functions, ExtractedOnly mode uses other functions
Adding xlate_string21 other functions, ExtractedOnly mode uses other functions
Adding xlate_string22 other functions, ExtractedOnly mode uses other functions
Adding suspect_word0 other functions, ExtractedOnly mode uses other functions
Adding suspect_word1 other functions, ExtractedOnly mode uses other functions
Adding suspect_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word0 other functions, ExtractedOnly mode uses other functions
Adding xlate_word1 other functions, ExtractedOnly mode uses other functions
Adding xlate_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word3 other functions, ExtractedOnly mode uses other functions
Adding xlate_word4 other functions, ExtractedOnly mode uses other functions
Adding xlate_word5 other functions, ExtractedOnly mode uses other functions
Adding xlate_word6 other functions, ExtractedOnly mode uses other functions
Adding xlate_word7 other functions, ExtractedOnly mode uses other functions
Adding xlate_word8 other functions, ExtractedOnly mode uses other functions
Adding xlate_word9 other functions, ExtractedOnly mode uses other functions
Adding xlate_word10 other functions, ExtractedOnly mode uses other functions
Adding xlate_word11 other functions, ExtractedOnly mode uses other functions
Adding xlate_word12 other functions, ExtractedOnly mode uses other functions
Adding darray_find0 other functions, ExtractedOnly mode uses other functions
Adding darray_find1 other functions, ExtractedOnly mode uses other functions
Adding say_phones0 other functions, ExtractedOnly mode uses other functions
Adding say_phones1 other functions, ExtractedOnly mode uses other functions
Adding say_phones2 other functions, ExtractedOnly mode uses other functions
Adding darray_init0 other functions, ExtractedOnly mode uses other functions
Adding concat_args0 other functions, ExtractedOnly mode uses other functions
Adding concat_args1 other functions, ExtractedOnly mode uses other functions
Adding concat_args2 other functions, ExtractedOnly mode uses other functions
Adding concat_args3 other functions, ExtractedOnly mode uses other functions
Adding concat_args4 other functions, ExtractedOnly mode uses other functions
Adding concat_args5 other functions, ExtractedOnly mode uses other functions
Adding concat_args6 other functions, ExtractedOnly mode uses other functions
Adding say_string0 other functions, ExtractedOnly mode uses other functions
Adding say_file0 other functions, ExtractedOnly mode uses other functions
Adding say_file1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal10 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal11 other functions, ExtractedOnly mode uses other functions
Adding darray_free0 other functions, ExtractedOnly mode uses other functions
Adding darray_free1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find0 other functions, ExtractedOnly mode uses other functions
Adding Darray_find1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find2 other functions, ExtractedOnly mode uses other functions
Adding Darray_find3 other functions, ExtractedOnly mode uses other functions
Adding Darray_find4 other functions, ExtractedOnly mode uses other functions
Adding darray_delete0 other functions, ExtractedOnly mode uses other functions
Adding darray_delete1 other functions, ExtractedOnly mode uses other functions
Adding darray_find.730 other functions, ExtractedOnly mode uses other functions
Adding darray_find.731 other functions, ExtractedOnly mode uses other functions
Adding NRL0 other functions, ExtractedOnly mode uses other functions
Adding NRL1 other functions, ExtractedOnly mode uses other functions
Adding NRL2 other functions, ExtractedOnly mode uses other functions
Adding NRL3 other functions, ExtractedOnly mode uses other functions
Adding phone_cat0 other functions, ExtractedOnly mode uses other functions
Adding phone_cat1 other functions, ExtractedOnly mode uses other functions
Adding guess_word0 other functions, ExtractedOnly mode uses other functions
Adding guess_word1 other functions, ExtractedOnly mode uses other functions
Adding find_rule0 other functions, ExtractedOnly mode uses other functions
Adding find_rule1 other functions, ExtractedOnly mode uses other functions
Adding find_rule2 other functions, ExtractedOnly mode uses other functions
Adding find_rule3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch0 other functions, ExtractedOnly mode uses other functions
Adding leftmatch1 other functions, ExtractedOnly mode uses other functions
Adding leftmatch2 other functions, ExtractedOnly mode uses other functions
Adding leftmatch3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch4 other functions, ExtractedOnly mode uses other functions
Adding leftmatch5 other functions, ExtractedOnly mode uses other functions
Adding leftmatch6 other functions, ExtractedOnly mode uses other functions
Adding leftmatch7 other functions, ExtractedOnly mode uses other functions
Adding leftmatch8 other functions, ExtractedOnly mode uses other functions
Adding leftmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch0 other functions, ExtractedOnly mode uses other functions
Adding rightmatch1 other functions, ExtractedOnly mode uses other functions
Adding rightmatch2 other functions, ExtractedOnly mode uses other functions
Adding rightmatch3 other functions, ExtractedOnly mode uses other functions
Adding rightmatch4 other functions, ExtractedOnly mode uses other functions
Adding rightmatch5 other functions, ExtractedOnly mode uses other functions
Adding rightmatch6 other functions, ExtractedOnly mode uses other functions
Adding rightmatch7 other functions, ExtractedOnly mode uses other functions
Adding rightmatch8 other functions, ExtractedOnly mode uses other functions
Adding rightmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch10 other functions, ExtractedOnly mode uses other functions
Adding rightmatch11 other functions, ExtractedOnly mode uses other functions
Adding rightmatch12 other functions, ExtractedOnly mode uses other functions
Adding rightmatch13 other functions, ExtractedOnly mode uses other functions
Adding trie_insert0 other functions, ExtractedOnly mode uses other functions
Adding trie_insert1 other functions, ExtractedOnly mode uses other functions
Adding trie_insert2 other functions, ExtractedOnly mode uses other functions
Adding trie_insert3 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup0 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup1 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup2 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup3 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4460 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4461 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm0 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm1 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm2 other functions, ExtractedOnly mode uses other functions
Adding enter0 other functions, ExtractedOnly mode uses other functions
Adding enter1 other functions, ExtractedOnly mode uses other functions
Adding enter2 other functions, ExtractedOnly mode uses other functions
Adding find_elm0 other functions, ExtractedOnly mode uses other functions
Adding find_elm1 other functions, ExtractedOnly mode uses other functions
Adding holmes0 other functions, ExtractedOnly mode uses other functions
Adding holmes1 other functions, ExtractedOnly mode uses other functions
Adding holmes2 other functions, ExtractedOnly mode uses other functions
Adding holmes3 other functions, ExtractedOnly mode uses other functions
Adding holmes4 other functions, ExtractedOnly mode uses other functions
Adding holmes5 other functions, ExtractedOnly mode uses other functions
Adding holmes6 other functions, ExtractedOnly mode uses other functions
Adding holmes7 other functions, ExtractedOnly mode uses other functions
Adding holmes8 other functions, ExtractedOnly mode uses other functions
Adding holmes9 other functions, ExtractedOnly mode uses other functions
Adding holmes10 other functions, ExtractedOnly mode uses other functions
Adding holmes11 other functions, ExtractedOnly mode uses other functions
Adding holmes12 other functions, ExtractedOnly mode uses other functions
Adding holmes13 other functions, ExtractedOnly mode uses other functions
Adding holmes14 other functions, ExtractedOnly mode uses other functions
Adding holmes15 other functions, ExtractedOnly mode uses other functions
Adding holmes16 other functions, ExtractedOnly mode uses other functions
Adding holmes17 other functions, ExtractedOnly mode uses other functions
Adding holmes18 other functions, ExtractedOnly mode uses other functions
Adding holmes19 other functions, ExtractedOnly mode uses other functions
Adding holmes20 other functions, ExtractedOnly mode uses other functions
Adding holmes21 other functions, ExtractedOnly mode uses other functions
Adding holmes22 other functions, ExtractedOnly mode uses other functions
Adding set_trans0 other functions, ExtractedOnly mode uses other functions
Adding set_trans1 other functions, ExtractedOnly mode uses other functions
Adding interpolate0 other functions, ExtractedOnly mode uses other functions
Adding interpolate1 other functions, ExtractedOnly mode uses other functions
Adding interpolate2 other functions, ExtractedOnly mode uses other functions
Adding interpolate3 other functions, ExtractedOnly mode uses other functions
Adding jsru_save0 other functions, ExtractedOnly mode uses other functions
Adding linear0 other functions, ExtractedOnly mode uses other functions
Adding linear1 other functions, ExtractedOnly mode uses other functions
Adding linear2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes0 other functions, ExtractedOnly mode uses other functions
Adding init_holmes1 other functions, ExtractedOnly mode uses other functions
Adding init_holmes2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes3 other functions, ExtractedOnly mode uses other functions
Adding term_holmes0 other functions, ExtractedOnly mode uses other functions
Adding term_holmes1 other functions, ExtractedOnly mode uses other functions
Adding show_parms0 other functions, ExtractedOnly mode uses other functions
Adding show_parms1 other functions, ExtractedOnly mode uses other functions
Adding parwave0 other functions, ExtractedOnly mode uses other functions
Adding parwave1 other functions, ExtractedOnly mode uses other functions
Adding parwave2 other functions, ExtractedOnly mode uses other functions
Adding parwave3 other functions, ExtractedOnly mode uses other functions
Adding parwave4 other functions, ExtractedOnly mode uses other functions
Adding parwave5 other functions, ExtractedOnly mode uses other functions
Adding parwave6 other functions, ExtractedOnly mode uses other functions
Adding parwave7 other functions, ExtractedOnly mode uses other functions
Adding parwave8 other functions, ExtractedOnly mode uses other functions
Adding parwave9 other functions, ExtractedOnly mode uses other functions
Adding parwave10 other functions, ExtractedOnly mode uses other functions
Adding parwave11 other functions, ExtractedOnly mode uses other functions
Adding parwave12 other functions, ExtractedOnly mode uses other functions
Adding parwave13 other functions, ExtractedOnly mode uses other functions
Adding parwave14 other functions, ExtractedOnly mode uses other functions
Adding parwave15 other functions, ExtractedOnly mode uses other functions
Adding parwave16 other functions, ExtractedOnly mode uses other functions
Adding parwave17 other functions, ExtractedOnly mode uses other functions
Adding parwave18 other functions, ExtractedOnly mode uses other functions
Adding frame_init0 other functions, ExtractedOnly mode uses other functions
Adding frame_init1 other functions, ExtractedOnly mode uses other functions
Adding frame_init2 other functions, ExtractedOnly mode uses other functions
Adding frame_init3 other functions, ExtractedOnly mode uses other functions
Adding frame_init4 other functions, ExtractedOnly mode uses other functions
Adding flutter0 other functions, ExtractedOnly mode uses other functions
Adding impulsive_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset0 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset2 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset3 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset4 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset5 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset6 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset7 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset8 other functions, ExtractedOnly mode uses other functions
Adding clip0 other functions, ExtractedOnly mode uses other functions
Adding clip1 other functions, ExtractedOnly mode uses other functions
Adding overload_warning0 other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN0 other functions, ExtractedOnly mode uses other functions
Adding setabc0 other functions, ExtractedOnly mode uses other functions
Adding setzeroabc0 other functions, ExtractedOnly mode uses other functions
Adding setabcg0 other functions, ExtractedOnly mode uses other functions
Adding parwave_init0 other functions, ExtractedOnly mode uses other functions
Adding init_synth0 other functions, ExtractedOnly mode uses other functions
Adding init_synth1 other functions, ExtractedOnly mode uses other functions
Adding au_header0 other functions, ExtractedOnly mode uses other functions
Adding wblong0 other functions, ExtractedOnly mode uses other functions
Adding file_init0 other functions, ExtractedOnly mode uses other functions
Adding file_init1 other functions, ExtractedOnly mode uses other functions
Adding file_init2 other functions, ExtractedOnly mode uses other functions
Adding file_init3 other functions, ExtractedOnly mode uses other functions
Adding file_init4 other functions, ExtractedOnly mode uses other functions
Adding file_init5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write0 other functions, ExtractedOnly mode uses other functions
Adding aufile_write1 other functions, ExtractedOnly mode uses other functions
Adding aufile_write2 other functions, ExtractedOnly mode uses other functions
Adding aufile_write3 other functions, ExtractedOnly mode uses other functions
Adding aufile_write4 other functions, ExtractedOnly mode uses other functions
Adding aufile_write5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write6 other functions, ExtractedOnly mode uses other functions
Adding aufile_term0 other functions, ExtractedOnly mode uses other functions
Adding aufile_term1 other functions, ExtractedOnly mode uses other functions
Adding aufile_term2 other functions, ExtractedOnly mode uses other functions
Adding getargs0 other functions, ExtractedOnly mode uses other functions
Adding getargs1 other functions, ExtractedOnly mode uses other functions
Adding getargs2 other functions, ExtractedOnly mode uses other functions
Adding getargs3 other functions, ExtractedOnly mode uses other functions
Adding getargs4 other functions, ExtractedOnly mode uses other functions
Adding getargs5 other functions, ExtractedOnly mode uses other functions
Adding getargs6 other functions, ExtractedOnly mode uses other functions
Adding getargs7 other functions, ExtractedOnly mode uses other functions
Adding getargs8 other functions, ExtractedOnly mode uses other functions
Adding getargs9 other functions, ExtractedOnly mode uses other functions
Adding getargs10 other functions, ExtractedOnly mode uses other functions
Adding getargs11 other functions, ExtractedOnly mode uses other functions
Adding getargs12 other functions, ExtractedOnly mode uses other functions
Adding getargs13 other functions, ExtractedOnly mode uses other functions
Adding getargs14 other functions, ExtractedOnly mode uses other functions
Adding getargs15 other functions, ExtractedOnly mode uses other functions
Adding getargs16 other functions, ExtractedOnly mode uses other functions
Adding getargs17 other functions, ExtractedOnly mode uses other functions
Adding getargs18 other functions, ExtractedOnly mode uses other functions
Adding getargs19 other functions, ExtractedOnly mode uses other functions
Adding getargs20 other functions, ExtractedOnly mode uses other functions
Adding getargs21 other functions, ExtractedOnly mode uses other functions
Adding getargs22 other functions, ExtractedOnly mode uses other functions
Adding getargs23 other functions, ExtractedOnly mode uses other functions
Adding audio_init0 other functions, ExtractedOnly mode uses other functions
Adding audio_init1 other functions, ExtractedOnly mode uses other functions
Adding audio_init2 other functions, ExtractedOnly mode uses other functions
Adding audio_init3 other functions, ExtractedOnly mode uses other functions
Adding audio_open0 other functions, ExtractedOnly mode uses other functions
Adding audio_term0 other functions, ExtractedOnly mode uses other functions
Adding audio_term1 other functions, ExtractedOnly mode uses other functions
Adding audio_play0 other functions, ExtractedOnly mode uses other functions
Adding audio_play1 other functions, ExtractedOnly mode uses other functions
Adding audio_play2 other functions, ExtractedOnly mode uses other functions
Adding audio_play3 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:364
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
jsru_save0
xlate_string6
trie_lookup
parwave18
enter2
audio_play2
dict_init
isconsonant
find_elm
DBtoLIN
xlate_string5
darray_init0
guess_word0
natural_source
holmes1
say_phones2
phone_cat0
setabc0
darray_find1
xlate_ordinal7
xlate_ordinal11
parwave5
NRL2
say_string0
show_parms1
say_phones0
getargs9
darray_find
phone_cat1
xlate_word0
pitch_synch_par_reset4
au_header
holmes11
Darray_find4
NRL
spell_out1
init_synth1
xlate_ordinal3
interpolate0
frame_init4
leftmatch5
say_file0
init_holmes
impulsive_source
aufile_write6
file_init4
pitch_synch_par_reset0
leftmatch8
suspect_word2
xlate_ordinal9
rightmatch
file_init5
set_trans0
audio_init3
frame_init0
xlate_word7
xlate_string18
parwave4
xlate_word6
trie_insert1
xlate_ordinal0
xlate_word3
xlate_string3
leftmatch0
guess_word1
pitch_synch_par_reset5
dict_term
xlate_string4
xlate_cardinal1
setabcg0
NRL1
darray_find.730
xlate_word12
xlate_ordinal4
parwave10
pitch_synch_par_reset2
find_rule
Darray_find2
parwave12
parwave16
xlate_cardinal7
linear2
leftmatch1
xlate_cardinal5
xlate_ordinal2
getargs2
getargs11
trie_lookup1
xlate_string10
holmes22
rightmatch0
rightmatch5
audio_open
darray_free
getargs8
init_synth
linear
rightmatch1
parwave_init0
audio_play3
say_file
aufile_term1
aufile_write5
holmes0
file_init2
parwave6
parwave9
init_holmes0
xlate_string1
xlate_string7
holmes3
trie_insert2
getargs20
show_parms
holmes20
flutter0
rightmatch2
find_elm1
parwave15
xlate_cardinal4
concat_args5
leftmatch4
trie_lookup2
audio_term0
holmes17
getargs10
term_holmes
holmes10
flutter
Darray_find0
getargs7
getargs4
xlate_word4
audio_term
phone_to_elm
setzeroabc
xlate_cardinal6
audio_play
main1
rightmatch10
find_rule2
xlate_string21
audio_init0
xlate_cardinal9
xlate_string14
xlate_string13
xlate_string2
xlate_ordinal6
rightmatch4
getargs5
darray_delete1
xlate_word
holmes4
NRL3
interpolate2
aufile_write0
holmes5
interpolate1
parwave
getargs6
getargs18
getargs21
file_init
enter1
wblong0
rightmatch9
xlate_string0
darray_find.446
parwave2
xlate_string20
getargs0
leftmatch7
aufile_term0
file_init0
impulsive_source0
trie_insert0
getargs14
jsru_save
darray_find.731
aufile_write3
xlate_cardinal3
Darray_find3
getargs22
setzeroabc0
suspect_word
file_init1
trie_lookup3
phone_to_elm0
audio_play0
pitch_synch_par_reset6
concat_args0
parwave11
spell_out0
aufile_term2
set_trans
audio_term1
linear0
holmes21
xlate_word5
dBconvert
holmes8
rightmatch12
interpolate
overload_warning0
leftmatch2
clip
guess_word
holmes9
pitch_synch_par_reset7
xlate_cardinal8
clip0
holmes7
Darray_find1
holmes18
darray_find0
audio_init1
init_synth0
show_parms0
parwave14
xlate_word10
darray_delete0
main2
file_init3
darray_free0
jsru_amp
NRL0
darray_init
xlate_cardinal2
clip1
getargs12
aufile_term
getargs13
setabcg
getargs23
holmes13
frame_init3
xlate_string16
au_header0
holmes12
audio_open0
jsru_freq
natural_source1
holmes15
xlate_string17
pitch_synch_par_reset
xlate_string12
main3
set_trans1
enter_phonemes
getargs16
enter0
getargs15
interpolate3
find_elm0
xlate_ordinal
phone_append
trie_insert3
xlate_string11
parwave8
xlate_cardinal0
concat_args6
aufile_write2
xlate_string15
find_rule1
trie_lookup0
xlate_string19
filter
Darray_find
parwave3
parwave0
say_string
init_holmes1
parwave7
holmes19
xlate_string8
concat_args4
aufile_write1
overload_warning
term_holmes0
antiresonator
frame_init1
suspect_word1
concat_args3
parwave17
frame_init
wblong
phone_cat
resonator
setabc
phone_to_elm2
pitch_synch_par_reset1
darray_find.73
say_phones
holmes14
holmes16
frame_init2
xlate_ordinal8
aufile_write
darray_delete
xlate_word8
audio_play1
rightmatch8
darray_find.4461
parwave1
holmes
darray_fget
xlate_word9
pitch_synch_par_reset3
xlate_ordinal10
xlate_string
audio_init
concat_args2
leftmatch9
xlate_word2
term_holmes1
dict_find
say_file1
holmes6
natural_source0
phone_to_elm1
parwave_init
linear1
xlate_cardinal
pitch_synch_par_reset8
xlate_word11
spell_out
leftmatch3
getargs17
getargs19
xlate_ordinal5
rightmatch11
say_phones1
isvowel
xlate_word1
concat_args
rightmatch3
suspect_word0
darray_find.4460
xlate_string22
rightmatch7
main0
find_rule0
main
init_holmes2
concat_args1
xlate_ordinal1
xlate_string9
leftmatch
DBtoLIN0
enter
holmes2
audio_init2
leftmatch6
getargs1
parwave13
find_rule3
init_holmes3
aufile_write4
getargs3
rightmatch13
rightmatch6
trie_insert
getargs
darray_free1
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
Functions called in loop
Function call numbers
dict_init -- 1
getargs -- 5
main -- 0
file_init -- 1
audio_init -- 1
init_synth -- 1
init_holmes -- 1
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 6822
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6823
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6824
  - operands: []
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 9537
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14784
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14876
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17387
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17405
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17644
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %e.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %p = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %p.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %samp.el = alloca i16*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nsize = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %nsize.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %s.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %ap = alloca [1 x %struct.__va_list_tag], align 16, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   call void @llvm.va_start(i8* %arraydecay12), !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 18446744073709551615
No reaching definition for:   %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca %struct.Elm_s*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   store i32 %add44, i32* %nph, align 4, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %d.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 364
Collecting defining blocks for spell_out
Collecting defining blocks for xlate_string
Collecting defining blocks for suspect_word
Collecting defining blocks for xlate_word
Collecting defining blocks for darray_find
Collecting defining blocks for say_phones
Collecting defining blocks for darray_init
Collecting defining blocks for concat_args
Collecting defining blocks for say_string
Collecting defining blocks for darray_fget
Collecting defining blocks for say_file
Collecting defining blocks for main
Collecting defining blocks for xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
Collecting defining blocks for darray_free
Collecting defining blocks for Darray_find
Skip. No dependence graph for function darray_delete
Skip. No dependence graph for function darray_find.73
Collecting defining blocks for isvowel
Collecting defining blocks for isconsonant
Collecting defining blocks for NRL
Collecting defining blocks for phone_cat
Collecting defining blocks for guess_word
Collecting defining blocks for find_rule
Collecting defining blocks for leftmatch
Collecting defining blocks for rightmatch
Collecting defining blocks for trie_insert
Collecting defining blocks for trie_lookup
Collecting defining blocks for phone_append
Collecting defining blocks for darray_find.446
Collecting defining blocks for phone_to_elm
Collecting defining blocks for enter_phonemes
Collecting defining blocks for enter
Collecting defining blocks for find_elm
Collecting defining blocks for holmes
Collecting defining blocks for set_trans
Collecting defining blocks for interpolate
Collecting defining blocks for filter
Collecting defining blocks for jsru_save
Collecting defining blocks for jsru_freq
Collecting defining blocks for jsru_amp
Collecting defining blocks for linear
Collecting defining blocks for init_holmes
Collecting defining blocks for term_holmes
Skip. No dependence graph for function show_parms
Collecting defining blocks for parwave
Collecting defining blocks for frame_init
Collecting defining blocks for flutter
Collecting defining blocks for impulsive_source
Collecting defining blocks for natural_source
Collecting defining blocks for pitch_synch_par_reset
Collecting defining blocks for resonator
Collecting defining blocks for antiresonator
Collecting defining blocks for clip
Collecting defining blocks for overload_warning
Collecting defining blocks for dBconvert
Collecting defining blocks for DBtoLIN
Collecting defining blocks for setabc
Collecting defining blocks for setzeroabc
Collecting defining blocks for setabcg
Collecting defining blocks for parwave_init
Collecting defining blocks for init_synth
Collecting defining blocks for au_header
Collecting defining blocks for wblong
Collecting defining blocks for file_init
Collecting defining blocks for aufile_write
Collecting defining blocks for aufile_term
Collecting defining blocks for dict_find
Collecting defining blocks for dict_init
Collecting defining blocks for dict_term
Collecting defining blocks for getargs
Collecting defining blocks for audio_init
Collecting defining blocks for audio_open
Collecting defining blocks for audio_term
Collecting defining blocks for audio_play
 Processing function:spell_out
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @spell_out0(i8** %word.addr, i32* %n.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @spell_out0(i8** %word.addr, i32* %n.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
 Processing function:xlate_string
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string0(i8** %s, i8** %string.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %string.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string0(i8** %s, i8** %string.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  while.end  while.cond12  lor.end  while.body37  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  
After path modifications process path
while.body4  if.then  
Hash path invariants only
Invariants are
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %12 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond12  lor.end  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  land.lhs.true  
After path modifications process path
while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  land.lhs.true  
Hash path invariants only
Invariants are
  %42 = load i16*, i16** %call60, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call60 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %16 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %39 = load i16*, i16** %call52, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call44 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %36 = load i16*, i16** %call44, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call52 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond74  land.lhs.true77  land.rhs85  
After path modifications process path
land.lhs.true77  land.rhs85  
Hash path invariants only
Invariants are
  %call80 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  br label %land.end93, !control_dep_instr !7, !data_indep_instr !11
  %62 = load i16*, i16** %call80, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call88 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %65 = load i16*, i16** %call88, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond2  while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  if.else  
After path modifications process path
while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  if.else  
Hash path invariants only
Invariants are
  br label %while.cond74, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call60 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %54 = load i16*, i16** %call60, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call52 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %24 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %50 = load i16*, i16** %call52, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %46 = load i16*, i16** %call44, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call44 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond12  lor.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond74  land.end93  while.body94  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond2  while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  if.else  
After path modifications process path
while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  if.else  
Hash path invariants only
Invariants are
  br label %while.cond74, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call60 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %62 = load i16*, i16** %call60, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call52 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %28 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %57 = load i16*, i16** %call52, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %52 = load i16*, i16** %call44, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call44 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond12  lor.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond74  land.end93  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond2  while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  if.else  while.end96  
After path modifications process path
while.body4  if.then  while.end39  lor.lhs.false41  lor.lhs.false49  lor.lhs.false57  if.else  while.end96  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string5(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond74, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call60 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %70 = load i16*, i16** %call60, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call52 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %32 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %64 = load i16*, i16** %call52, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %58 = load i16*, i16** %call44, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call44 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string5(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string5(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string5(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string5(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond12  lor.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond12  lor.end  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  while.end39  if.then68  
After path modifications process path
while.body4  if.then  while.end39  if.then68  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string3(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %32 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string3(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string3(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string3(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string3(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond12  lor.end  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  while.end39  if.end  
After path modifications process path
while.body4  if.then  while.end39  if.end  
Hash path invariants only
Invariants are
  br label %if.end291, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %36 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond12  lor.rhs  land.rhs  
After path modifications process path
lor.rhs  land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !7, !data_indep_instr !11
  %60 = load i16*, i16** %call32, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call32 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  
After path modifications process path
while.body4  if.then  
Hash path invariants only
Invariants are
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %40 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond12  lor.rhs  land.end  
After path modifications process path
lor.rhs  land.end  
Hash path invariants only
Invariants are
  br label %lor.end, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  
After path modifications process path
while.body4  if.then  
Hash path invariants only
Invariants are
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %44 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond12  lor.rhs  lor.lhs.false  lor.lhs.false25  
After path modifications process path
lor.rhs  lor.lhs.false  lor.lhs.false25  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.then  
After path modifications process path
while.body4  if.then  
Hash path invariants only
Invariants are
  br label %while.cond12, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %48 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond292  while.body300  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.end291  
After path modifications process path
while.body4  if.end291  
Hash path invariants only
Invariants are
  br label %while.cond292, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %52 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond292  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.end291  while.end302  
After path modifications process path
while.body4  if.end291  
Hash path invariants only
Invariants are
  br label %while.cond292, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %56 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.then124  if.then130  
After path modifications process path
while.body4  if.else103  if.then124  if.then130  
Hash path invariants only
Invariants are
  br label %if.end132, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string7(i8* %ch, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %60 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %158 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  store i64 0, i64* %value, align 8, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string7(i8* %ch, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string7(i8* %ch, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond133  while.body141  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.then124  if.end132  
After path modifications process path
while.body4  if.else103  if.then124  if.end132  
Hash path invariants only
Invariants are
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %64 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond133, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %163 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  store i64 0, i64* %value, align 8, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond166  while.body174  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.then124  if.end132  while.end145  land.lhs.true149  if.then158  
After path modifications process path
while.body4  if.else103  if.then124  if.end132  while.end145  land.lhs.true149  if.then158  
Hash path invariants only
Invariants are
  br label %while.cond166, !control_dep_instr !7, !data_indep_instr !11
  %197 = load i16*, i16** %call153, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call153 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %72 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond133, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %172 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  store i64 0, i64* %value, align 8, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %value = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond133  
After path modifications process path is empty
Processing path: entry  while.end  while.cond166  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.then124  if.end132  while.end145  land.lhs.true149  if.then158  while.end176  
After path modifications process path
while.body4  if.else103  if.then124  if.end132  while.end145  land.lhs.true149  if.then158  while.end176  
Hash path invariants only
Invariants are
  br label %if.end188, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string11(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond166, !control_dep_instr !7, !data_indep_instr !11
  %call153 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %206 = load i16*, i16** %call153, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %76 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond133, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %177 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  store i64 0, i64* %value, align 8, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %value = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string9(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i64* %value, i8** %word, i32* %sign), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string11(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string11(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string11(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string11(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond133  
After path modifications process path is empty
Processing path: entry  while.end  while.cond133  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.then124  if.end132  while.end145  if.end188  
After path modifications process path
while.body4  if.else103  if.then124  if.end132  while.end145  if.end188  
Hash path invariants only
Invariants are
  br label %if.end290, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %76 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond133, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %178 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  store i64 0, i64* %value, align 8, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond133  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.then124  if.end132  while.end145  if.else183  
After path modifications process path
while.body4  if.else103  if.then124  if.end132  while.end145  if.else183  
Hash path invariants only
Invariants are
  call void @xlate_string12(%struct.darray_t** %phone.addr, i32* %nph, i32* %sign, i64* %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %80 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond133, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %183 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  br label %if.end188, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  store i64 0, i64* %value, align 8, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string6(i32* %sign, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string12(%struct.darray_t** %phone.addr, i32* %nph, i32* %sign, i64* %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string12(%struct.darray_t** %phone.addr, i32* %nph, i32* %sign, i64* %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %sign = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string12(%struct.darray_t** %phone.addr, i32* %nph, i32* %sign, i64* %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %value = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string12(%struct.darray_t** %phone.addr, i32* %nph, i32* %sign, i64* %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  if.end290  
After path modifications process path
while.body4  if.else103  if.end290  
Hash path invariants only
Invariants are
  br label %if.end291, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %188 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %84 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  land.lhs.true115  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  land.lhs.true115  
Hash path invariants only
Invariants are
  %205 = load i16*, i16** %call119, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call119 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %193 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %88 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond198  land.rhs201  
After path modifications process path
land.rhs201  
Hash path invariants only
Invariants are
  br label %land.end206, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  land.lhs.true193  if.then196  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  land.lhs.true193  if.then196  
Hash path invariants only
Invariants are
  br label %while.cond198, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %198 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %92 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %word197 = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond198  land.end206  while.body207  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  land.lhs.true193  if.then196  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  land.lhs.true193  if.then196  
Hash path invariants only
Invariants are
  call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond198, !control_dep_instr !7, !data_indep_instr !11
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %203 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %96 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %word197 = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond198  land.end206  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  land.lhs.true193  if.then196  while.end208  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  land.lhs.true193  if.then196  while.end208  
Hash path invariants only
Invariants are
  br label %if.end289, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string14(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i8** %word197), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %100 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %208 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  br label %while.cond198, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %word197 = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string13(i8** %word197, i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string14(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i8** %word197), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string14(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i8** %word197), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string14(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i8** %word197), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word197 = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string14(i32* %nph, %struct.darray_t** %phone.addr, i8** %s, i8** %word197), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.end289  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.end289  
Hash path invariants only
Invariants are
  br label %if.end290, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %213 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %104 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.default  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.default  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string19(i8** %s, i32* %nph, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %108 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %218 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %310 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string19(i8** %s, i32* %nph, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string19(i8** %s, i32* %nph, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string19(i8** %s, i32* %nph, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string19(i8** %s, i32* %nph, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.epilog  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end288, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %112 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %223 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %318 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb  lor.lhs.false227  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb  lor.lhs.false227  
Hash path invariants only
Invariants are
  %335 = load i16*, i16** %call231, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call231 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %116 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %228 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %326 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb  land.lhs.true236  if.then238  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb  land.lhs.true236  if.then238  
Hash path invariants only
Invariants are
  br label %if.end242, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string15(%struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %120 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %233 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %334 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string15(%struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb  if.end242  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb  if.end242  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %124 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %238 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %342 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb245  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb245  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %128 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %243 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %350 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond253  while.body256  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb248  if.then251  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb248  if.then251  
Hash path invariants only
Invariants are
  br label %while.cond253, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string16(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %132 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %248 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %358 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string16(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond253  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb248  if.then251  while.end260  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb248  if.then251  while.end260  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  call void @xlate_string18(i8** %s, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  call void @xlate_string16(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond253, !control_dep_instr !7, !data_indep_instr !11
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %136 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %253 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %366 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string16(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string18(i8** %s, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string18(i8** %s, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb248  if.end261  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.then223  sw.bb248  if.end261  
Hash path invariants only
Invariants are
  br label %sw.default, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %140 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %258 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %374 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.end288  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.end288  
Hash path invariants only
Invariants are
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  br label %if.end289, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %144 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %263 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %382 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond266  land.rhs269  
After path modifications process path
land.rhs269  
Hash path invariants only
Invariants are
  br label %land.end278, !control_dep_instr !7, !data_indep_instr !11
  %448 = load i16*, i16** %call272, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call272 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.else265  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.else265  
Hash path invariants only
Invariants are
  br label %while.cond266, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %148 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %268 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %390 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond266  land.end278  while.body279  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.else265  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.else265  
Hash path invariants only
Invariants are
  br label %while.cond266, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %152 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %273 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %398 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.end  while.cond266  land.end278  
After path modifications process path is empty
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.else265  while.end281  
After path modifications process path
while.body4  if.else103  lor.lhs.false111  if.else189  if.else215  if.else265  while.end281  
Hash path invariants only
Invariants are
  call void @xlate_string21(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond266, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %156 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %278 = load i16*, i16** %call106, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call106 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %406 = load i16*, i16** %call218, align 8, !control_dep_instr !7, !data_dep_instr !8
  br label %if.end288, !control_dep_instr !7, !data_indep_instr !11
  %call218 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string21(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string21(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string21(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_string21(i32* %nph, i8** %s, %struct.darray_t** %phone.addr, i8** %word), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing path: entry  while.cond  while.end  while.end303  
After path modifications process path is empty
Processing path: entry  while.end  while.cond2  while.end303  
After path modifications process path is empty
Processing path: entry  while.end  while.end303  
After path modifications process path
entry  while.end  while.end303  
 Processing function:suspect_word
Short range hashing enabled.
Processing path: entry  for.cond  for.body  land.lhs.true  land.lhs.true2  if.then  
After path modifications process path
for.body  land.lhs.true  land.lhs.true2  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  %7 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  store i32 1, i32* %seen_upper, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.then12  
After path modifications process path
for.body  if.end  if.then12  
Hash path invariants only
Invariants are
  br label %if.end16, !control_dep_instr !7, !data_indep_instr !11
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  store i32 1, i32* %seen_lower, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %31 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  call void @suspect_word0(i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @suspect_word0(i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.end16  if.then39  
After path modifications process path
for.body  if.end  if.end16  if.then39  
Hash path invariants only
Invariants are
  br label %if.end40, !control_dep_instr !7, !data_indep_instr !11
  store i32 1, i32* %seen_vowel, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %46 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.end16  if.end40  for.inc  
After path modifications process path
for.body  if.end  if.end16  if.end40  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
  call void @suspect_word1(i32* %last, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !13
  %61 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %last = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @suspect_word1(i32* %last, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @suspect_word1(i32* %last, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.end16  lor.lhs.false  lor.lhs.false23  lor.lhs.false27  lor.lhs.false31  lor.lhs.false35  
After path modifications process path
for.body  if.end  if.end16  lor.lhs.false  lor.lhs.false23  lor.lhs.false27  lor.lhs.false31  lor.lhs.false35  
Hash path invariants only
Invariants are
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %76 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  lor.lhs.false43  land.lhs.true45  
After path modifications process path is empty
Processing path: entry  for.end  lor.lhs.false43  land.lhs.true45  
After path modifications process path
entry  for.end  lor.lhs.false43  land.lhs.true45  
Processing path: entry  for.cond  for.end  lor.lhs.false43  lor.rhs  
After path modifications process path is empty
Processing path: entry  for.end  lor.lhs.false43  lor.rhs  
After path modifications process path
entry  for.end  lor.lhs.false43  lor.rhs  
Processing path: entry  for.cond  for.end  lor.end  
After path modifications process path is empty
Processing path: entry  for.end  lor.end  
After path modifications process path
entry  for.end  lor.end  
 Processing function:xlate_word
Short range hashing enabled.
Processing path: entry  if.then  if.then2  if.then4  while.cond7  while.body9  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.then4  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  br label %while.cond7, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
  call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.then4  
After path modifications process path
entry  if.then  if.then2  if.then4  
Processing path: entry  if.then  if.then2  if.then4  while.cond7  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.then4  while.cond  while.body  while.end  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond7, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.then4  
After path modifications process path
entry  if.then  if.then2  if.then4  
Processing path: entry  if.then  if.then2  if.then4  while.cond  while.end13  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.then4  while.end13  
After path modifications process path
entry  if.then  if.then2  if.then4  while.end13  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word3(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word3(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.then  if.then2  if.else  while.cond15  while.body18  if.then25  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.else  if.then25  
After path modifications process path
entry  if.then  if.then2  if.else  if.then25  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %h = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.else  while.cond15  while.body18  lor.lhs.false  if.else38  if.end  
After path modifications process path
if.else38  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
  call void @xlate_word6(i8** %h), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %h = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word6(i8** %h), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.else  
After path modifications process path
entry  if.then  if.then2  if.else  
Processing path: entry  if.then  if.then2  if.else  while.cond15  while.end40  if.end41  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.else  while.end40  if.end41  
After path modifications process path
entry  if.then  if.then2  if.else  while.end40  if.end41  
Processing path: entry  if.then  if.end42  if.then45  
After path modifications process path
entry  if.then  if.end42  if.then45  
Processing path: entry  if.then  if.end42  if.else47  if.then51  
After path modifications process path
entry  if.then  if.end42  if.else47  if.then51  
Processing path: entry  if.then  if.end42  if.else47  if.end53  if.end56  
After path modifications process path
entry  if.then  if.end42  if.else47  if.end53  if.end56  
Processing path: entry  if.then  if.end42  if.else47  lor.lhs.false49  
After path modifications process path
entry  if.then  if.end42  if.else47  lor.lhs.false49  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end77  
After path modifications process path
entry  if.end77  
Processing path: entry  if.else57  if.then64  
After path modifications process path
entry  if.else57  if.then64  
Processing path: entry  if.else57  if.end66  while.cond67  while.body71  
After path modifications process path is empty
Processing path: entry  if.else57  if.end66  
After path modifications process path
entry  if.else57  if.end66  
Processing path: entry  if.else57  if.end66  while.cond67  while.end76  
After path modifications process path is empty
Processing path: entry  if.else57  if.end66  while.end76  
After path modifications process path
entry  if.else57  if.end66  while.end76  
 Processing function:darray_find
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:say_phones
Short range hashing enabled.
Processing path: entry  if.then  if.then6  
After path modifications process path
entry  if.then  if.then6  
Processing call instruction..
Can't handle this operand   %phone.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_phones0(i8** %phone.addr, i32* %len.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %len.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_phones0(i8** %phone.addr, i32* %len.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.then  if.end  if.then9  if.then13  
After path modifications process path
entry  if.then  if.end  if.then9  if.then13  
Processing call instruction..
Can't handle this operand   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_phones1(i16** %samp, i32* %nsamp), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nsamp = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_phones1(i16** %samp, i32* %nsamp), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.then  if.end  if.then9  if.end14  
After path modifications process path
entry  if.then  if.end  if.then9  if.end14  
Processing call instruction..
Can't handle this operand   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_phones2(i16** %samp), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.then  if.end  if.end15  
After path modifications process path
entry  if.then  if.end  if.end15  
Processing path: entry  if.end16  
After path modifications process path
entry  if.end16  
Processing call instruction..
Can't handle this operand   %elm = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %elm), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Processing function:darray_init
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %get.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init0(i32* %get.addr, %struct.darray_t** %a.addr, i32* %size.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init0(i32* %get.addr, %struct.darray_t** %a.addr, i32* %size.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %size.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init0(i32* %get.addr, %struct.darray_t** %a.addr, i32* %size.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:concat_args
Short range hashing enabled.
Processing path: entry  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
  call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %len = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.end  if.then  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  
After path modifications process path
for.body8  
Hash path invariants only
Invariants are
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args2(i8** %d, i8** %buf), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %buf = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args2(i8** %d, i8** %buf), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.end  if.then  while.cond  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  while.end  if.then16  
After path modifications process path
for.body8  while.end  if.then16  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args5(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args5(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing path: entry  for.end  if.then  while.cond  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  while.end  if.end  
After path modifications process path
for.body8  while.end  
Hash path invariants only
Invariants are
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing path: entry  for.end  if.then  while.cond  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  while.end  if.else  
After path modifications process path
for.body8  while.end  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args6(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args6(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing path: entry  for.end  if.then  for.cond5  for.end18  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.then  for.end18  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.end18  
After path modifications process path
entry  for.end  if.then  for.end18  
Processing path: entry  for.cond  for.end  if.end19  
After path modifications process path is empty
Processing path: entry  for.end  if.end19  
After path modifications process path
entry  for.end  if.end19  
 Processing function:say_string
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %phone, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_string0(%struct.darray_t* %phone), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %phone), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Processing function:darray_fget
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
No oh has been applied in the path
 Processing function:say_file
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %line = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %line, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %phone, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_file1(%struct.darray_t* %phone), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %phone), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %line = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %line), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Processing function:main
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end15  if.then17  
After path modifications process path
entry  if.end15  if.then17  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
No oh has been applied in the path
Processing path: entry  if.end15  if.end18  if.then20  
After path modifications process path
entry  if.end15  if.end18  if.then20  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
No short range oh has been applied in the path
Processing path: entry  if.end15  if.end18  if.end21  
After path modifications process path
entry  if.end15  if.end18  if.end21  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
No short range oh has been applied in the path
Processing path: entry  if.else  if.then9  if.then12  
After path modifications process path
entry  if.else  if.then9  if.then12  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @main1(i8** %s), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Processing path: entry  if.else  if.then9  if.end  
After path modifications process path
entry  if.else  if.then9  if.end  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.else  if.end14  
After path modifications process path
entry  if.else  if.end14  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing path: entry  if.else  if.else13  
After path modifications process path
entry  if.else  if.else13  
Insert assertion evaluating function:main callsites detected =0
Insert assertion included function:main because it is not in the skip  assert list!
Processing call instruction..
 Processing function:xlate_cardinal
Short range hashing enabled.
Processing path: entry  if.then  if.then2  
After path modifications process path
entry  if.then  if.then2  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal0(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal0(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal0(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.then  if.end  
After path modifications process path
entry  if.then  if.end  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end5  if.then7  if.then13  
After path modifications process path
entry  if.end5  if.then7  if.then13  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal1(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal1(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.then7  if.end14  if.then16  
After path modifications process path
entry  if.end5  if.then7  if.end14  if.then16  
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal2(i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal2(i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.then7  if.end14  if.end19  
After path modifications process path
entry  if.end5  if.then7  if.end14  if.end19  
Processing path: entry  if.end5  if.end20  if.then22  if.then30  
After path modifications process path
entry  if.end5  if.end20  if.then22  if.then30  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal3(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal3(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.then22  if.end31  if.then33  
After path modifications process path
entry  if.end5  if.end20  if.then22  if.end31  if.then33  
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal4(i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal4(i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.then22  if.end31  if.end36  
After path modifications process path
entry  if.end5  if.end20  if.then22  if.end31  if.end36  
Processing path: entry  if.end5  if.end20  if.end37  land.lhs.true  
After path modifications process path
entry  if.end5  if.end20  if.end37  land.lhs.true  
Processing path: entry  if.end5  if.end20  if.end37  if.then41  if.then49  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.then41  if.then49  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal5(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal5(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.end37  if.then41  if.end50  if.then52  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.then41  if.end50  if.then52  
Processing call instruction..
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal6(i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal6(i32* %nph, %struct.darray_t** %phone.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.end37  if.then41  if.end50  if.end55  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.then41  if.end50  if.end55  
Processing path: entry  if.end5  if.end20  if.end37  if.end56  if.then58  if.then66  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.end56  if.then58  if.then66  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal7(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal7(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.end37  if.end56  if.then58  if.end67  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.end56  if.then58  if.end67  
Processing path: entry  if.end5  if.end20  if.end37  if.end56  if.end68  if.then70  if.then78  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.end56  if.end68  if.then70  if.then78  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal8(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal8(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.end37  if.end56  if.end68  if.then70  if.end79  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.end56  if.end68  if.then70  if.end79  
Processing path: entry  if.end5  if.end20  if.end37  if.end56  if.end68  if.end80  
After path modifications process path
entry  if.end5  if.end20  if.end37  if.end56  if.end68  if.end80  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal9(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr, i64* %value.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal9(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr, i64* %value.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal9(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr, i64* %value.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %value.addr = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_cardinal9(i32* %retval, i32* %nph, %struct.darray_t** %phone.addr, i64* %value.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end5  if.end20  if.end37  lor.lhs.false  
After path modifications process path
entry  if.end5  if.end20  if.end37  lor.lhs.false  
Skip. No dependence graph for function xlate_ordinal
 Processing function:darray_free
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free1(%struct.darray_t** %a.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !13, !data_indep_instr !10
 Processing function:Darray_find
Short range hashing enabled.
Processing path: entry  if.then  if.end  if.then8  cond.true  
After path modifications process path
entry  if.then  if.end  if.then8  cond.true  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find0(%struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
Processing call instruction..
Can't handle this operand   %add = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %ndata = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.else  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.else  
Non numeric pointers (int and float) are skipped:  %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
Processing path: entry  if.then  if.end  if.then8  cond.false  
After path modifications process path
entry  if.then  if.end  if.then8  cond.false  
Processing path: entry  if.then  if.end  if.end38  if.then42  
After path modifications process path
entry  if.then  if.end  if.end38  if.then42  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.then  if.end  if.end38  if.end47  
After path modifications process path
entry  if.then  if.end  if.end38  if.end47  
Processing path: entry  if.then  if.end  if.else33  
After path modifications process path
entry  if.then  if.end  if.else33  
Processing path: entry  if.then  if.then4  
After path modifications process path
entry  if.then  if.then4  
Processing path: entry  if.end48  
After path modifications process path
entry  if.end48  
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  
After path modifications process path
entry  lor.lhs.false  
Skip. No dependence graph for function darray_delete
Skip. No dependence graph for function darray_find.73
 Processing function:isvowel
Short range hashing enabled.
Processing path: entry  lor.end  
After path modifications process path
entry  lor.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
 Processing function:isconsonant
Short range hashing enabled.
Processing path: entry  land.rhs  
After path modifications process path
entry  land.rhs  
Processing path: entry  land.end  
After path modifications process path
entry  land.end  
 Processing function:NRL
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  %4 = load i16*, i16** %call4, align 8, !control_dep_instr !7, !data_dep_instr !8
  call void @NRL1(i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  %call4 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL1(i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %old = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  %call4 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %4 = load i16*, i16** %call4, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL3(i8** %d), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Processing function:phone_cat
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %p = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_cat0(%struct.darray_t** %p, i8** %arg.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %arg.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_cat0(%struct.darray_t** %p, i8** %arg.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
No oh has been applied in the path
 Processing function:guess_word
Short range hashing enabled.
Processing path: entry  do.body  if.then  
After path modifications process path
if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @guess_word0(i32* %type, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %type = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word0(i32* %type, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word0(i32* %type, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word0(i32* %type, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  do.body  if.end  do.cond  do.end  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @guess_word1(i32* %type, i8** %arg.addr, void (i8*, i8*)** %out.addr, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %type = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word1(i32* %type, i8** %arg.addr, void (i8*, i8*)** %out.addr, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %arg.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word1(i32* %type, i8** %arg.addr, void (i8*, i8*)** %out.addr, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %out.addr = alloca void (i8*, i8*)*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word1(i32* %type, i8** %arg.addr, void (i8*, i8*)** %out.addr, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word1(i32* %type, i8** %arg.addr, void (i8*, i8*)** %out.addr, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %index = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @guess_word1(i32* %type, i8** %arg.addr, void (i8*, i8*)** %out.addr, i8** %word.addr, i32* %index), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  do.end  
After path modifications process path
entry  do.end  
Processing path: entry  do.body  if.else  
After path modifications process path
if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %type, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
 Processing function:find_rule
Short range hashing enabled.
Processing path: entry  for.cond  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule0(i32* %retval, i8** %word.addr, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule0(i32* %retval, i8** %word.addr, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule0(i32* %retval, i8** %word.addr, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  if.then12  
After path modifications process path
if.end  if.then12  
Hash path invariants only
Invariants are
  br label %for.end, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body  if.end13  for.inc  
After path modifications process path
if.end13  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  for.cond  if.end  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.then18  
After path modifications process path
if.end  for.end  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  if.end32  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.end19  if.end26  if.end32  
After path modifications process path
if.end  for.end  if.end19  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end32  
After path modifications process path
entry  if.end32  
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %rule = alloca [4 x i8*]*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %arg.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %out.addr = alloca void (i8*, i8*)*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.end19  if.end26  if.then31  
After path modifications process path
if.end  for.end  if.end19  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.end19  if.then25  
After path modifications process path
if.end  for.end  if.end19  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:leftmatch
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  for.cond  for.body  if.then15  if.then20  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %9 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then20  
After path modifications process path
entry  if.end  if.then20  
Processing path: entry  if.end  for.cond  for.body  if.then15  if.else  
After path modifications process path
for.body  if.else  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10
  call void @leftmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %11 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %15 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.default  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %19 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  sw.default  
After path modifications process path
entry  if.end  sw.default  
Processing call instruction..
Can't handle this operand   %pat = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch8(i8** %pat), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb  if.end27  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  if.end27  
Hash path invariants only
Invariants are
  call void @leftmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %21 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb  if.end27  while.end  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  if.end27  while.end  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  call void @leftmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %25 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb  if.then26  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %29 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then26  
After path modifications process path
entry  if.end  if.then26  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.epilog  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.epilog  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %31 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond34  while.body38  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb33  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.bb33  
Hash path invariants only
Invariants are
  br label %while.cond34, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %35 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond34  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb33  while.end40  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.bb33  while.end40  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond34, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %39 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb41  if.end46  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  if.end46  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @leftmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %43 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb41  if.then45  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %47 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then45  
After path modifications process path
entry  if.end  if.then45  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb48  land.lhs.true  land.lhs.true55  land.lhs.true59  land.lhs.true63  land.lhs.true67  land.lhs.true71  land.lhs.true75  land.lhs.true79  land.lhs.true83  land.lhs.true87  if.then91  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.bb48  land.lhs.true  land.lhs.true55  land.lhs.true59  land.lhs.true63  land.lhs.true67  land.lhs.true71  land.lhs.true75  land.lhs.true79  land.lhs.true83  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %49 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then91  
After path modifications process path
entry  if.end  if.then91  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb48  if.end92  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.bb48  if.end92  
Hash path invariants only
Invariants are
  call void @leftmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  %51 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb94  land.lhs.true98  land.lhs.true102  if.then106  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.bb94  land.lhs.true98  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %55 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then106  
After path modifications process path
entry  if.end  if.then106  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb94  if.end107  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  sw.bb94  if.end107  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @leftmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %57 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @leftmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false11  if.end21  sw.bb109  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false11  
Hash path invariants only
Invariants are
  %call6 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %61 = load i16*, i16** %call6, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  sw.bb109  
After path modifications process path
entry  if.end  sw.bb109  
Processing path: entry  if.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  for.end  
After path modifications process path
entry  if.end  for.end  
 Processing function:rightmatch
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.then19  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %10 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then19  
After path modifications process path
entry  if.end  if.then19  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.else  
After path modifications process path
for.body  if.else  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %12 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %16 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.default  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %20 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  sw.default  
After path modifications process path
entry  if.end  sw.default  
Processing call instruction..
Can't handle this operand   %pat = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch12(i8** %pat), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  
Hash path invariants only
Invariants are
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %22 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  while.end  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  while.end  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %26 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.then25  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %30 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then25  
After path modifications process path
entry  if.end  if.then25  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.epilog  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.epilog  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %32 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  while.body37  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  
Hash path invariants only
Invariants are
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %36 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  while.end39  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  while.end39  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %40 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.end45  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end45  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %44 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.then44  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %48 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then44  
After path modifications process path
entry  if.end  if.then44  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  land.lhs.true86  if.then90  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %50 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then90  
After path modifications process path
entry  if.end  if.then90  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  if.end91  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  if.end91  
Hash path invariants only
Invariants are
  call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  %52 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  land.lhs.true97  land.lhs.true101  if.then105  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  land.lhs.true97  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %56 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then105  
After path modifications process path
entry  if.end  if.then105  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  if.end106  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  if.end106  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %58 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.then122  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.then122  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %62 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.else124  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.else124  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %66 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.then138  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.then138  
Hash path invariants only
Invariants are
  call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end140, !control_dep_instr !7, !data_indep_instr !10
  %70 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.end140  if.end141  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.end140  if.end141  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end141, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %74 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %78 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.then156  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then156  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %82 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.end158  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %86 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end158  
After path modifications process path
entry  if.end  if.end158  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.end159  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %88 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end159  
After path modifications process path
entry  if.end  if.end159  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.else160  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %90 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.else160  
After path modifications process path
entry  if.end  if.else160  
Processing path: entry  if.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  for.end  
After path modifications process path
entry  if.end  for.end  
 Processing function:trie_insert
Short range hashing enabled.
Processing path: entry  while.cond1  while.body3  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.trie_s*
No oh has been applied in the path
Processing path: entry  while.cond1  while.body3  if.else  if.end  
After path modifications process path
if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
  call void @trie_insert0(%struct.trie_s*** %r.addr, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert0(%struct.trie_s*** %r.addr, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert0(%struct.trie_s*** %r.addr, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.trie_s*
No oh has been applied in the path
Processing path: entry  while.cond1  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  while.end  if.end10  
After path modifications process path
while.body  while.end  
Hash path invariants only
Invariants are
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.trie_s*
No oh has been applied in the path
Processing path: entry  while.cond1  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  while.end  if.then8  
After path modifications process path
while.body  while.end  if.then8  
Hash path invariants only
Invariants are
  br label %if.end10, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_insert1(%struct.trie_s*** %r.addr, %struct.trie_s** %p, i8* %ch), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  %call = call noalias i8* @malloc(i64 32) #8, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !12
  %11 = bitcast i8* %call to %struct.trie_s*, !control_dep_instr !7, !data_dep_instr !8
  store %struct.trie_s* %11, %struct.trie_s** %p, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert1(%struct.trie_s*** %r.addr, %struct.trie_s** %p, i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert1(%struct.trie_s*** %r.addr, %struct.trie_s** %p, i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert1(%struct.trie_s*** %r.addr, %struct.trie_s** %p, i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.trie_s*
No oh has been applied in the path
Processing path: entry  while.cond  while.end11  
After path modifications process path is empty
Processing path: entry  while.end11  
After path modifications process path
entry  while.end11  
Non numeric pointers (int and float) are skipped:  %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.trie_s*
Processing call instruction..
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert3(%struct.trie_s** %p, i8** %value.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %value.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_insert3(%struct.trie_s** %p, i8** %value.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:trie_lookup
Short range hashing enabled.
Processing path: entry  while.cond1  while.body3  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
  br label %while.end, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup0(i8** %s, i8*** %sp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %sp.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup0(i8** %s, i8*** %sp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond1  while.body3  if.else  if.end  
After path modifications process path
if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_lookup2(%struct.trie_s*** %l, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup2(%struct.trie_s*** %l, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup2(%struct.trie_s*** %l, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond1  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  while.end  if.then8  if.end13  
After path modifications process path
while.body  if.then8  
Hash path invariants only
Invariants are
  br label %if.end13, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond1  if.else12  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  while.end  if.else12  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  if.else12  
After path modifications process path
entry  if.else12  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond  while.end14  
After path modifications process path is empty
Processing path: entry  while.end14  
After path modifications process path
entry  while.end14  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
 Processing function:phone_append
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:darray_find.446
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:phone_to_elm
Short range hashing enabled.
Processing path: entry  if.end  while.cond  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm0(i8** %s, i8** %phone.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %phone.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm0(i8** %s, i8** %phone.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  if.end  while.cond6  while.body9  if.end15  
After path modifications process path
while.body9  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  while.cond  land.end  while.body  if.then3  
After path modifications process path
while.body  if.then3  
Hash path invariants only
Invariants are
  br label %while.cond6, !control_dep_instr !7, !data_indep_instr !11
  call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %n4 = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond6  while.body9  if.then14  
After path modifications process path
while.body9  if.then14  
Hash path invariants only
Invariants are
  br label %if.end15, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  while.cond  land.end  while.body  if.then3  
After path modifications process path
while.body  if.then3  
Hash path invariants only
Invariants are
  call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %n4 = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond6  
After path modifications process path is empty
Processing path: entry  if.end  while.cond  land.end  while.body  if.then3  while.end  
After path modifications process path
while.body  if.then3  while.end  
Hash path invariants only
Invariants are
  br label %if.end28, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !7, !data_indep_instr !11
  call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %n4 = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.end28  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.default  
After path modifications process path
while.body  if.else  sw.default  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %phone.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.epilog  
After path modifications process path
while.body  if.else  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end28, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb  
After path modifications process path
while.body  if.else  sw.bb  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 3, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb23  
After path modifications process path
while.body  if.else  sw.bb23  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 2, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb24  
After path modifications process path
while.body  if.else  sw.bb24  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 1, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb25  
After path modifications process path
while.body  if.else  sw.bb25  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.end29  
After path modifications process path is empty
Processing path: entry  if.end  while.end29  
After path modifications process path
entry  if.end  while.end29  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
 Processing function:enter_phonemes
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:enter
Short range hashing enabled.
Processing path: entry  while.cond  vaarg.in_reg  
After path modifications process path
vaarg.in_reg  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @enter0(i8** %x, %struct.Elm_s** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter0(i8** %x, %struct.Elm_s** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter0(i8** %x, %struct.Elm_s** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.body  if.end  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.body  if.else  
After path modifications process path
while.body  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @enter1(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter1(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter2(i8** %x, i8** %p.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %p.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter2(i8** %x, i8** %p.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.in_mem  
After path modifications process path
vaarg.in_mem  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:find_elm
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
No oh has been applied in the path
Processing path: entry  while.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Non numeric pointers (int and float) are skipped:  %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.Elm_s*
No oh has been applied in the path
 Processing function:holmes
Short range hashing enabled.
Processing path: entry  for.cond  for.body  for.inc  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes0(i16** %samp, i16** %samp_base.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %samp_base.addr = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes0(i16** %samp, i16** %samp_base.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %stress_e = alloca %struct.slope_t, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes2(%struct.slope_t* %stress_e, %struct.slope_t* %stress_s), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %stress_s = alloca %struct.slope_t, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes2(%struct.slope_t* %stress_e, %struct.slope_t* %stress_s), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.true  
After path modifications process path
while.body  if.then  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.then43  if.then44  
After path modifications process path
while.body  if.then  cond.end  if.then43  if.then44  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes3(%struct.Elm_s** %ce, %struct.Elm_s** %le), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes3(%struct.Elm_s** %ce, %struct.Elm_s** %le), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %le = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes3(%struct.Elm_s** %ce, %struct.Elm_s** %le), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.then43  if.end  
After path modifications process path
while.body  if.then  cond.end  if.then43  if.end  
Hash path invariants only
Invariants are
  br label %if.end53, !control_dep_instr !7, !data_indep_instr !11
  %arraydecay = getelementptr inbounds [19 x %struct.slope_t], [19 x %struct.slope_t]* %start, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.then60  if.then62  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.then60  if.then62  
Hash path invariants only
Invariants are
  br label %if.end66, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes5(%struct.Elm_s** %ne, %struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ne = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes5(%struct.Elm_s** %ne, %struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes5(%struct.Elm_s** %ne, %struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.then60  if.end66  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.then60  if.end66  
Hash path invariants only
Invariants are
  br label %if.end76, !control_dep_instr !7, !data_indep_instr !11
  %arraydecay67 = getelementptr inbounds [19 x %struct.slope_t], [19 x %struct.slope_t]* %end, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  for.cond82  for.body85  for.inc91  
After path modifications process path
for.body85  
Hash path invariants only
Invariants are
  br label %for.inc91, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.then78  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.then78  
Hash path invariants only
Invariants are
  br label %for.cond82, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  for.cond95  for.body98  for.inc106  
After path modifications process path
for.body98  
Hash path invariants only
Invariants are
  br label %for.inc106, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.then78  for.end93  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.then78  for.end93  
Hash path invariants only
Invariants are
  br label %for.cond95, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond82, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes9(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Processing path: entry  for.end  for.cond82  
After path modifications process path is empty
Processing path: entry  for.end  for.cond95  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  for.cond110  for.body113  for.inc120  
After path modifications process path
for.body113  
Hash path invariants only
Invariants are
  br label %for.inc120, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.then78  for.end93  for.end108  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.then78  for.end93  for.end108  
Hash path invariants only
Invariants are
  call void @holmes10(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond110, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes9(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond95, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond82, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Processing call instruction..
Processing path: entry  for.end  for.cond82  
After path modifications process path is empty
Processing path: entry  for.end  for.cond95  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  for.cond110  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.then78  for.end93  for.end108  for.end122  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.then78  for.end93  for.end108  for.end122  
Hash path invariants only
Invariants are
  br label %if.end124, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j79, align 4, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond82, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond95, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond110, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes9(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  call void @holmes10(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  call void @holmes11(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes7(%struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Processing call instruction..
Processing call instruction..
Processing path: entry  for.end  for.cond82  
After path modifications process path is empty
Processing path: entry  for.end  while.cond137  while.body140  cond.true143  
After path modifications process path
while.body140  cond.true143  
Hash path invariants only
Invariants are
  br label %cond.end150, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  %529 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %530 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.true154  
After path modifications process path
while.body140  cond.end150  cond.true154  
Hash path invariants only
Invariants are
  br label %cond.end160, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  %574 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %573 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.true164  
After path modifications process path
while.body140  cond.end150  cond.end160  cond.true164  
Hash path invariants only
Invariants are
  br label %cond.end170, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  %618 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %617 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  if.then174  if.then176  
After path modifications process path
for.body128  if.then135  if.then174  if.then176  
Hash path invariants only
Invariants are
  br label %if.end181, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes13(%struct.slope_t* %stress_e, i32* %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  %661 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %d, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %662 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %stress_e = alloca %struct.slope_t, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes13(%struct.slope_t* %stress_e, i32* %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %s = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes13(%struct.slope_t* %stress_e, i32* %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  do.body  cond.true184  
After path modifications process path
cond.true184  
Hash path invariants only
Invariants are
  br label %cond.end191, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  if.then174  if.end181  
After path modifications process path
for.body128  if.then135  if.then174  if.end181  
Hash path invariants only
Invariants are
  br label %do.body, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  %705 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %d, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %706 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  do.body  cond.end191  do.cond  land.rhs  
After path modifications process path
cond.end191  do.cond  land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !7, !data_indep_instr !11
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  if.then174  if.end181  
After path modifications process path
for.body128  if.then135  if.then174  if.end181  
Hash path invariants only
Invariants are
  br label %do.body, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  %749 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %d, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %750 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  do.body  cond.end191  do.cond  land.end  
After path modifications process path
cond.end191  do.cond  
Hash path invariants only
Invariants are
  br label %do.cond, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  if.then174  if.end181  do.end  
After path modifications process path
for.body128  if.then135  if.then174  if.end181  do.end  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes15(i32* %ntstress, i32* %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %do.body, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  %793 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %d, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %794 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes15(i32* %ntstress, i32* %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %d = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes15(i32* %ntstress, i32* %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  do.body  cond.false190  
After path modifications process path
cond.false190  
Hash path invariants only
Invariants are
  br label %cond.end191, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  if.then174  if.end181  
After path modifications process path
for.body128  if.then135  if.then174  if.end181  
Hash path invariants only
Invariants are
  br label %do.body, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  %837 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %d, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %838 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  if.then174  if.else179  
After path modifications process path
for.body128  if.then135  if.then174  if.else179  
Hash path invariants only
Invariants are
  br label %if.end181, !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  call void @holmes14(%struct.slope_t* %stress_e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %881 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %d, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %882 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %stress_e = alloca %struct.slope_t, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes14(%struct.slope_t* %stress_e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.end170  lor.lhs.false  if.end208  
After path modifications process path
while.body140  cond.end150  cond.end160  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  %926 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %925 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.end160  cond.false169  
After path modifications process path
while.body140  cond.end150  cond.end160  cond.false169  
Hash path invariants only
Invariants are
  br label %cond.end170, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  %970 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %969 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.end150  cond.false159  
After path modifications process path
while.body140  cond.end150  cond.false159  
Hash path invariants only
Invariants are
  br label %cond.end160, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  %1014 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %1013 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  while.body140  cond.false149  
After path modifications process path
while.body140  cond.false149  
Hash path invariants only
Invariants are
  br label %cond.end150, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  
After path modifications process path
for.body128  if.then135  
Hash path invariants only
Invariants are
  %1058 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %1057 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  while.cond137  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.then135  while.end  
After path modifications process path
for.body128  if.then135  while.end  
Hash path invariants only
Invariants are
  br label %if.end210, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %1102 = bitcast %struct.slope_t* %stress_e to i8*, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %tstress, align 4, !control_dep_instr !7, !data_indep_instr !11
  %1101 = bitcast %struct.slope_t* %stress_s to i8*, !control_dep_instr !7, !data_dep_instr !8
  call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
  br label %while.cond137, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ntstress = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %dur = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes12(i32* %ntstress, i32* %dur), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond211  for.body214  for.inc231  
After path modifications process path
for.body214  
Hash path invariants only
Invariants are
  br label %for.inc231, !control_dep_instr !7, !data_indep_instr !11
  %arraydecay215 = getelementptr inbounds [19 x %struct.filter_t], [19 x %struct.filter_t]* %flt, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !14
No oh has been applied in the path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.end210  
After path modifications process path
for.body128  if.end210  
Hash path invariants only
Invariants are
  br label %for.cond211, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  for.cond291  for.body294  for.inc299  
After path modifications process path
for.body294  
Hash path invariants only
Invariants are
  br label %for.inc299, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.end  for.cond211  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.end210  for.end233  if.then290  
After path modifications process path
for.body128  if.end210  for.end233  if.then290  
Hash path invariants only
Invariants are
  br label %for.cond291, !control_dep_instr !7, !data_indep_instr !11
  %A4 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 30, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx285 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 11, !control_dep_instr !7, !data_dep_instr !8
  %A3 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 28, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx282 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 10, !control_dep_instr !7, !data_dep_instr !8
  %A2 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 26, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx279 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 9, !control_dep_instr !7, !data_dep_instr !8
  %A1 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 24, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx249 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 4, !control_dep_instr !7, !data_dep_instr !8
  %F3hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 6, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx247 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 16, !control_dep_instr !7, !data_dep_instr !8
  %B1hz251 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 3, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %FNZhz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 14, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %Aturb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 20, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx270 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 12, !control_dep_instr !7, !data_dep_instr !8
  %AF = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 22, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AB = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 37, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %ASP = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 18, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %A5 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 32, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  br label %for.cond211, !control_dep_instr !7, !data_indep_instr !11
  %arrayidx241 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 18, !control_dep_instr !7, !data_dep_instr !8
  %B3phz260 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 29, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %AVpdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 38, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx261 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 1, !control_dep_instr !7, !data_dep_instr !8
  %B1phz252 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 25, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx253 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 5, !control_dep_instr !7, !data_dep_instr !8
  %F0hz10 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 0, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B2hz255 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 5, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx239 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 15, !control_dep_instr !7, !data_dep_instr !8
  %B2phz256 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 27, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx257 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 6, !control_dep_instr !7, !data_dep_instr !8
  %AVdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 1, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B3hz259 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 7, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx243 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 0, !control_dep_instr !7, !data_dep_instr !8
  %F1hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 2, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx276 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 8, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx263 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 2, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx245 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 17, !control_dep_instr !7, !data_dep_instr !8
  %F2hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 4, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx267 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 14, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx273 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 13, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx265 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 3, !control_dep_instr !7, !data_dep_instr !8
  %A6 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 34, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
Processing path: entry  for.end  for.cond291  
After path modifications process path is empty
Processing path: entry  for.end  for.cond211  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.end210  for.end233  if.then290  for.end301  
After path modifications process path
for.body128  if.end210  for.end233  if.then290  for.end301  
Hash path invariants only
Invariants are
  br label %if.end303, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %arrayidx247 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 16, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx285 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 11, !control_dep_instr !7, !data_dep_instr !8
  %A4 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 30, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A3 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 28, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx279 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 9, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx276 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 8, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx273 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 13, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx270 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 12, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx267 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 14, !control_dep_instr !7, !data_dep_instr !8
  %A2 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 26, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A1 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 24, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A5 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 32, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %F3hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 6, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx265 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 3, !control_dep_instr !7, !data_dep_instr !8
  %F2hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 4, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %F1hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 2, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %ASP = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 18, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AVpdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 38, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A6 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 34, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx245 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 17, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx239 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 15, !control_dep_instr !7, !data_dep_instr !8
  br label %for.cond211, !control_dep_instr !7, !data_indep_instr !11
  %arrayidx253 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 5, !control_dep_instr !7, !data_dep_instr !8
  %FNZhz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 14, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %F0hz10 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 0, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B1phz252 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 25, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx243 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 0, !control_dep_instr !7, !data_dep_instr !8
  %B3phz260 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 29, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AF = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 22, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx249 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 4, !control_dep_instr !7, !data_dep_instr !8
  %AB = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 37, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx263 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 2, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx282 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 10, !control_dep_instr !7, !data_dep_instr !8
  %B3hz259 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 7, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx241 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 18, !control_dep_instr !7, !data_dep_instr !8
  %AVdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 1, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %Aturb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 20, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx257 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 6, !control_dep_instr !7, !data_dep_instr !8
  %B1hz251 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 3, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B2hz255 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 5, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx261 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 1, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond291, !control_dep_instr !7, !data_indep_instr !11
  %B2phz256 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 27, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  call void @holmes17(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Processing path: entry  for.end  for.cond211  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.end210  for.end233  if.end303  if.then305  
After path modifications process path
for.body128  if.end210  for.end233  if.end303  if.then305  
Hash path invariants only
Invariants are
  br label %if.end310, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
  %F0hz10306 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !14
  %arrayidx261 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 1, !control_dep_instr !7, !data_dep_instr !8
  %B2hz255 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 5, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B1hz251 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 3, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx257 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 6, !control_dep_instr !7, !data_dep_instr !8
  %Aturb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 20, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B2phz256 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 27, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AVdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 1, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx241 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 18, !control_dep_instr !7, !data_dep_instr !8
  %B3hz259 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 7, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx282 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 10, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx249 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 4, !control_dep_instr !7, !data_dep_instr !8
  %AF = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 22, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B3phz260 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 29, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx243 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 0, !control_dep_instr !7, !data_dep_instr !8
  %B1phz252 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 25, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %F0hz10 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 0, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %FNZhz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 14, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx253 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 5, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx239 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 15, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx245 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 17, !control_dep_instr !7, !data_dep_instr !8
  %AVpdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 38, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %ASP = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 18, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %F1hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 2, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx263 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 2, !control_dep_instr !7, !data_dep_instr !8
  %F2hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 4, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx265 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 3, !control_dep_instr !7, !data_dep_instr !8
  %F3hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 6, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AB = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 37, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A5 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 32, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A6 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 34, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A1 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 24, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A2 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 26, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx267 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 14, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx270 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 12, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx273 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 13, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx276 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 8, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx279 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 9, !control_dep_instr !7, !data_dep_instr !8
  %A3 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 28, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A4 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 30, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx285 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 11, !control_dep_instr !7, !data_dep_instr !8
  br label %for.cond211, !control_dep_instr !7, !data_indep_instr !11
  %arraydecay309 = getelementptr inbounds [19 x float], [19 x float]* %tp, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx247 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 16, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  for.cond211  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  
Hash path invariants only
Invariants are
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  for.end  for.cond125  for.body128  if.end210  for.end233  if.end303  if.end310  for.inc314  
After path modifications process path
for.body128  if.end210  for.end233  if.end303  if.end310  
Hash path invariants only
Invariants are
  %arrayidx261 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 1, !control_dep_instr !7, !data_dep_instr !8
  %B2hz255 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 5, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B1hz251 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 3, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx257 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 6, !control_dep_instr !7, !data_dep_instr !8
  %Aturb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 20, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B2phz256 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 27, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AVdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 1, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx241 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 18, !control_dep_instr !7, !data_dep_instr !8
  %B3hz259 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 7, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx282 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 10, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx249 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 4, !control_dep_instr !7, !data_dep_instr !8
  %AF = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 22, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %B3phz260 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 29, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx243 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 0, !control_dep_instr !7, !data_dep_instr !8
  %B1phz252 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 25, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %F0hz10 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 0, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %FNZhz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 14, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx253 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 5, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx239 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 15, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx245 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 17, !control_dep_instr !7, !data_dep_instr !8
  %AVpdb = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 38, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %ASP = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 18, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  call void @holmes18(float* %top), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  %F1hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 2, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx263 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 2, !control_dep_instr !7, !data_dep_instr !8
  %F2hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 4, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx265 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 3, !control_dep_instr !7, !data_dep_instr !8
  %F3hz = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 6, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %AB = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 37, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A5 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 32, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A6 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 34, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A1 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 24, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A2 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 26, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %arrayidx267 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 14, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx270 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 12, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx273 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 13, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx276 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 8, !control_dep_instr !7, !data_dep_instr !8
  %arrayidx279 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 9, !control_dep_instr !7, !data_dep_instr !8
  %A3 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 28, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  %A4 = getelementptr inbounds %struct.klatt_frame_t, %struct.klatt_frame_t* %pars, i32 0, i32 30, !control_dep_instr !7, !global_dep_instr !12, !data_dep_instr !8
  br label %for.inc314, !control_dep_instr !7, !data_indep_instr !11
  %arrayidx285 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 11, !control_dep_instr !7, !data_dep_instr !8
  br label %for.cond211, !control_dep_instr !7, !data_indep_instr !11
  %arrayidx247 = getelementptr inbounds [19 x float], [19 x float]* %tp, i64 0, i64 16, !control_dep_instr !7, !data_dep_instr !8
  store i32 0, i32* %j132, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %top = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes18(float* %top), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  for.cond321  for.body324  for.inc332  
After path modifications process path
for.body324  
Hash path invariants only
Invariants are
  br label %for.inc332, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.then319  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.then319  
Hash path invariants only
Invariants are
  br label %for.cond321, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j320, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.end  for.cond125  
After path modifications process path is empty
Processing path: entry  for.end  for.cond336  for.body339  for.inc346  
After path modifications process path
for.body339  
Hash path invariants only
Invariants are
  br label %for.inc346, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  for.end  for.cond321  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.then319  for.end334  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.then319  for.end334  
Hash path invariants only
Invariants are
  br label %for.cond336, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond321, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j320, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  call void @holmes20(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  store i32 0, i32* %j320, align 4, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Processing path: entry  for.end  for.cond125  
After path modifications process path is empty
Processing path: entry  for.end  for.cond336  
After path modifications process path is empty
Processing path: entry  for.end  for.cond321  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.then319  for.end334  for.end348  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.then319  for.end334  for.end348  
Hash path invariants only
Invariants are
  call void @holmes21(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  call void @holmes20(), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  store i32 0, i32* %j320, align 4, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond336, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond321, !control_dep_instr !7, !data_indep_instr !11
  br label %if.end350, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %j320, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Processing call instruction..
Processing path: entry  for.end  for.cond125  
After path modifications process path is empty
Processing path: entry  for.end  for.cond125  
After path modifications process path is empty
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.end350  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.end76  if.end124  for.end317  if.end350  
Hash path invariants only
Invariants are
  br label %if.end351, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
  br label %for.cond125, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %t37, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.else68  if.then70  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.else68  if.then70  
Hash path invariants only
Invariants are
  br label %if.end74, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes6(%struct.Elm_s** %ne, %struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ne = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes6(%struct.Elm_s** %ne, %struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes6(%struct.Elm_s** %ne, %struct.Elm_s** %ce), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.end53  if.else68  if.end74  
After path modifications process path
while.body  if.then  cond.end  if.end53  if.else68  if.end74  
Hash path invariants only
Invariants are
  br label %if.end76, !control_dep_instr !7, !data_indep_instr !11
  %arraydecay75 = getelementptr inbounds [19 x %struct.slope_t], [19 x %struct.slope_t]* %end, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.else  if.then47  
After path modifications process path
while.body  if.then  cond.end  if.else  if.then47  
Hash path invariants only
Invariants are
  br label %if.end51, !control_dep_instr !7, !data_indep_instr !11
  call void @holmes4(%struct.Elm_s** %ce, %struct.Elm_s** %le), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %ce = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes4(%struct.Elm_s** %ce, %struct.Elm_s** %le), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %le = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @holmes4(%struct.Elm_s** %ce, %struct.Elm_s** %le), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.end  if.else  if.end51  
After path modifications process path
while.body  if.then  cond.end  if.else  if.end51  
Hash path invariants only
Invariants are
  br label %if.end53, !control_dep_instr !7, !data_indep_instr !11
  %arraydecay52 = getelementptr inbounds [19 x %struct.slope_t], [19 x %struct.slope_t]* %start, i32 0, i32 0, !control_dep_instr !7, !data_dep_instr !8, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.then  cond.false  
After path modifications process path
while.body  if.then  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.body  if.end351  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
Processing path: entry  for.end  while.cond  while.end352  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  while.end352  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  while.end352  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  while.end352  
Processing path: entry  for.end  while.end352  
After path modifications process path
entry  for.end  while.end352  
 Processing function:set_trans
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.then  
After path modifications process path
for.body  cond.end  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
  call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %t.addr = alloca %struct.slope_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %b.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %a.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.end  for.inc  
After path modifications process path
for.body  cond.end  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.else  
After path modifications process path
for.body  cond.end  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
  call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %t.addr = alloca %struct.slope_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %b.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:interpolate
Short range hashing enabled.
Processing path: entry  if.then  if.then7  
After path modifications process path
entry  if.then  if.then7  
Processing path: entry  if.then  if.else  if.then14  
After path modifications process path
entry  if.then  if.else  if.then14  
Processing path: entry  if.then  if.else  if.else15  
After path modifications process path
entry  if.then  if.else  if.else15  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else22  
After path modifications process path
entry  if.else22  
 Processing function:filter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:jsru_save
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %tp.addr = alloca float*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %f0.addr = alloca double, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:jsru_freq
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:jsru_amp
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then4  
After path modifications process path
entry  if.end  if.then4  
Processing path: entry  if.end  if.end5  
After path modifications process path
entry  if.end  if.end5  
 Processing function:linear
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  if.then2  
After path modifications process path
entry  if.else  if.then2  
Processing path: entry  if.else  if.else3  
After path modifications process path
entry  if.else  if.else3  
 Processing function:init_holmes
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Non numeric pointers (int and float) are skipped:  %par_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Non numeric pointers (int and float) are skipped:  %jsru_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes0(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes0(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  return  
After path modifications process path
entry  return  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  if.end  if.then2  if.end6  
After path modifications process path
entry  if.end  if.then2  if.end6  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.then5  
After path modifications process path
entry  if.end  if.then2  if.then5  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %par_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes1(i8** %par_name), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Processing path: entry  if.end  if.end7  if.then9  if.end13  
After path modifications process path
entry  if.end  if.end7  if.then9  if.end13  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.then9  if.then12  
After path modifications process path
entry  if.end  if.end7  if.then9  if.then12  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %jsru_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes2(i8** %jsru_name), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Processing path: entry  if.end  if.end7  if.end14  
After path modifications process path
entry  if.end  if.end7  if.end14  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes3(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes3(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
 Processing function:term_holmes
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then2  
After path modifications process path
entry  if.end  if.then2  
Processing path: entry  if.end  if.end4  
After path modifications process path
entry  if.end  if.end4  
Skip. No dependence graph for function show_parms
 Processing function:parwave
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %frame.addr = alloca %struct.klatt_frame_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave0(%struct.klatt_frame_t** %frame.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave0(%struct.klatt_frame_t** %frame.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  for.cond  for.body  if.then8  
After path modifications process path
for.body  if.then8  
Hash path invariants only
Invariants are
  br label %if.end12, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave1(float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave1(float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  for.body17  if.then20  
After path modifications process path
for.body17  if.then20  
Hash path invariants only
Invariants are
  br label %if.end22, !control_dep_instr !7, !data_indep_instr !11
  call void @parwave3(float* %voice), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %voice = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave3(float* %voice), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  for.cond  for.body  if.end12  
After path modifications process path
for.body  if.end12  
Hash path invariants only
Invariants are
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  for.body17  if.end22  if.then25  
After path modifications process path
for.body17  if.end22  if.then25  
Hash path invariants only
Invariants are
  br label %if.end26, !control_dep_instr !7, !data_indep_instr !11
  call void @parwave5(i64* %ns, %struct.klatt_frame_t** %frame.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %ns = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave5(i64* %ns, %struct.klatt_frame_t** %frame.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %frame.addr = alloca %struct.klatt_frame_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave5(i64* %ns, %struct.klatt_frame_t** %frame.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave5(i64* %ns, %struct.klatt_frame_t** %frame.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  for.cond  for.body  if.end12  
After path modifications process path
for.body  if.end12  
Hash path invariants only
Invariants are
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  for.body17  if.end22  if.end26  for.inc  
After path modifications process path
for.body17  if.end22  if.end26  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11
  call void @parwave6(float* %voice), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %voice = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave6(float* %voice), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  for.cond  for.body  if.end12  
After path modifications process path
for.body  if.end12  
Hash path invariants only
Invariants are
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  for.body17  if.else  
After path modifications process path
for.body17  if.else  
Hash path invariants only
Invariants are
  br label %if.end22, !control_dep_instr !7, !data_indep_instr !11
  call void @parwave4(float* %voice), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %voice = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave4(float* %voice), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  for.cond  for.body  if.end12  
After path modifications process path
for.body  if.end12  
Hash path invariants only
Invariants are
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.then35  
After path modifications process path
for.body  if.end12  for.end  if.then35  
Hash path invariants only
Invariants are
  br label %if.end39, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave7(float* %voice, i64* %nrand), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %voice = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave7(float* %voice, i64* %nrand), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %nrand = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave7(float* %voice, i64* %nrand), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.default  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.default  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  store float 0.000000e+00, float* %out, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.epilog  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end68, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb  
Hash path invariants only
Invariants are
  br label %sw.bb49, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave8(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave8(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb49  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb49  
Hash path invariants only
Invariants are
  br label %sw.bb51, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave9(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave9(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb51  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb51  
Hash path invariants only
Invariants are
  br label %sw.bb53, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave10(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave10(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb53  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb53  
Hash path invariants only
Invariants are
  br label %sw.bb55, !control_dep_instr !7, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave11(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave11(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb55  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb55  
Hash path invariants only
Invariants are
  br label %sw.bb57, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave12(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave12(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb57  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb57  
Hash path invariants only
Invariants are
  br label %sw.bb59, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave13(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave13(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb59  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb59  
Hash path invariants only
Invariants are
  br label %sw.bb61, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave14(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave14(float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.then45  sw.bb61  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.then45  sw.bb61  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave15(float* %out, float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %out = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave15(float* %out, float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %casc_next_in = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave15(float* %out, float* %casc_next_in), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.end68  for.inc83  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.end68  
Hash path invariants only
Invariants are
  br label %for.inc83, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave17(i16** %jwave.addr, %struct.klatt_global_t** %globals.addr, float* %out, float* %sourc), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %jwave.addr = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave17(i16** %jwave.addr, %struct.klatt_global_t** %globals.addr, float* %out, float* %sourc), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave17(i16** %jwave.addr, %struct.klatt_global_t** %globals.addr, float* %out, float* %sourc), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %out = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave17(i16** %jwave.addr, %struct.klatt_global_t** %globals.addr, float* %out, float* %sourc), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave17(i16** %jwave.addr, %struct.klatt_global_t** %globals.addr, float* %out, float* %sourc), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond14  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  if.end12  for.end  if.end39  if.else63  
After path modifications process path
for.body  if.end12  for.end  if.end39  if.else63  
Hash path invariants only
Invariants are
  store i32 0, i32* %n4, align 4, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %for.cond14, !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11
  br label %if.end68, !control_dep_instr !7, !data_indep_instr !11
  call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
  call void @parwave16(float* %sourc, float* %out, float* %par_glotout), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %noise = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave2(float* %sourc, float* %noise), !control_dep_instr !7, !global_dep_instr !14, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %sourc = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave16(float* %sourc, float* %out, float* %par_glotout), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %out = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave16(float* %sourc, float* %out, float* %par_glotout), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %par_glotout = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave16(float* %sourc, float* %out, float* %par_glotout), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.end85  
After path modifications process path is empty
Processing path: entry  if.end  for.end85  
After path modifications process path
entry  if.end  for.end85  
 Processing function:frame_init
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then41  if.then44  
After path modifications process path
entry  if.end  if.then41  if.then44  
Processing path: entry  if.end  if.then41  if.end46  
After path modifications process path
entry  if.end  if.then41  if.end46  
Processing path: entry  if.end  if.then41  if.else  
After path modifications process path
entry  if.end  if.then41  if.else  
Processing path: entry  if.end  if.end47  if.then51  if.then55  
After path modifications process path
entry  if.end  if.end47  if.then51  if.then55  
Processing path: entry  if.end  if.end47  if.then51  if.end58  
After path modifications process path
entry  if.end  if.end47  if.then51  if.end58  
Processing path: entry  if.end  if.end47  if.then51  if.else56  
After path modifications process path
entry  if.end  if.end47  if.then51  if.else56  
Processing path: entry  if.end  if.end47  if.end59  if.then63  
After path modifications process path
entry  if.end  if.end47  if.end59  if.then63  
Processing path: entry  if.end  if.end47  if.end59  if.end64  if.then68  
After path modifications process path
entry  if.end  if.end47  if.end59  if.end64  if.then68  
Processing path: entry  if.end  if.end47  if.end59  if.end64  if.end69  if.then82  
After path modifications process path
entry  if.end  if.end47  if.end59  if.end64  if.end69  if.then82  
Processing path: entry  if.end  if.end47  if.end59  if.end64  if.end69  if.end83  
After path modifications process path
entry  if.end  if.end47  if.end59  if.end64  if.end69  if.end83  
Processing call instruction..
Can't handle this operand   %Gain0 = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @frame_init4(i64* %Gain0, %struct.klatt_global_t** %globals.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !14, !data_indep_instr !10
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @frame_init4(i64* %Gain0, %struct.klatt_global_t** %globals.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !14, !data_indep_instr !10
 Processing function:flutter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %pars.addr = alloca %struct.klatt_frame_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @flutter0(%struct.klatt_frame_t** %pars.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @flutter0(%struct.klatt_frame_t** %pars.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:impulsive_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Processing function:natural_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Processing function:pitch_synch_par_reset
Short range hashing enabled.
Processing path: entry  if.then  if.then2  
After path modifications process path
entry  if.then  if.then2  
Processing path: entry  if.then  if.end  land.lhs.true  if.then11  
After path modifications process path
entry  if.then  if.end  land.lhs.true  if.then11  
Processing path: entry  if.then  if.end  if.end12  if.then15  if.end19  
After path modifications process path
entry  if.then  if.end  if.end12  if.then15  if.end19  
Processing path: entry  if.then  if.end  if.end12  if.then15  if.then17  
After path modifications process path
entry  if.then  if.end  if.end12  if.then15  if.then17  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.then23  if.end29  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.then23  if.end29  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.then23  if.then26  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.then23  if.then26  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.end30  if.then48  if.end54  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.end30  if.then48  if.end54  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.end30  if.then48  if.then51  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.end30  if.then48  if.then51  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.end30  if.end55  if.then58  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.end30  if.end55  if.then58  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.end30  if.end55  if.end60  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.end30  if.end55  if.end60  
Processing path: entry  if.then  if.end  if.end12  if.end20  if.end30  if.end55  if.else  
After path modifications process path
entry  if.then  if.end  if.end12  if.end20  if.end30  if.end55  if.else  
Processing path: entry  if.end63  if.then68  if.then75  
After path modifications process path
entry  if.end63  if.then68  if.then75  
Processing path: entry  if.end63  if.then68  if.end80  
After path modifications process path
entry  if.end63  if.then68  if.end80  
Processing path: entry  if.end63  if.then68  if.else79  
After path modifications process path
entry  if.end63  if.then68  if.else79  
Processing path: entry  if.end63  if.end81  
After path modifications process path
entry  if.end63  if.end81  
Processing path: entry  if.end63  lor.lhs.false  
After path modifications process path
entry  if.end63  lor.lhs.false  
Processing path: entry  if.else62  
After path modifications process path
entry  if.else62  
 Processing function:resonator
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:antiresonator
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:clip
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end5  
After path modifications process path
entry  if.end5  
Processing path: entry  if.else  if.then4  
After path modifications process path
entry  if.else  if.then4  
Processing path: entry  if.else  if.end  
After path modifications process path
entry  if.else  if.end  
 Processing function:overload_warning
Short range hashing enabled.
Processing path: entry  if.then  if.end  
After path modifications process path
entry  if.then  if.end  
Processing path: entry  if.then  if.then1  
After path modifications process path
entry  if.then  if.then1  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
 Processing function:dBconvert
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:DBtoLIN
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end5  
After path modifications process path
entry  if.end5  
Processing path: entry  if.else  if.then2  if.end  
After path modifications process path
entry  if.else  if.then2  if.end  
Processing path: entry  if.else  if.then2  if.then3  
After path modifications process path
entry  if.else  if.then2  if.then3  
Processing path: entry  if.else  if.end4  
After path modifications process path
entry  if.else  if.end4  
 Processing function:setabc
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %f.addr = alloca i64, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabc0(i64* %f.addr, i64* %bw.addr, %struct.resonator_t** %rp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %bw.addr = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabc0(i64* %f.addr, i64* %bw.addr, %struct.resonator_t** %rp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %rp.addr = alloca %struct.resonator_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabc0(i64* %f.addr, i64* %bw.addr, %struct.resonator_t** %rp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:setzeroabc
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %rp.addr = alloca %struct.resonator_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setzeroabc0(%struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %bw.addr = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setzeroabc0(%struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %f.addr = alloca i64, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setzeroabc0(%struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:setabcg
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %gain.addr = alloca float, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabcg0(float* %gain.addr, %struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %rp.addr = alloca %struct.resonator_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabcg0(float* %gain.addr, %struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %bw.addr = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabcg0(float* %gain.addr, %struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %f.addr = alloca i64, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @setabcg0(float* %gain.addr, %struct.resonator_t** %rp.addr, i64* %bw.addr, i64* %f.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:parwave_init
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave_init0(%struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:init_synth
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
Processing call instruction..
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Can't handle this operand   %casc = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_synth1(i32* %casc), !control_dep_instr !12, !data_indep_instr !10
Processing path: entry  if.end  if.then1  
After path modifications process path
entry  if.end  if.then1  
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
No oh has been applied in the path
Processing path: entry  if.end  if.end2  
After path modifications process path
entry  if.end  if.end2  
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
Insert assertion evaluating function:init_synth callsites detected =1
Insert assertion included function:init_synth because it is not in the skip  assert list!
No oh has been applied in the path
 Processing function:au_header
Short range hashing enabled.
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %rate.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @au_header0(i32* %rate.addr, i32* %fd.addr, i8** %comment.addr, i32* %size.addr, i32* %enc.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %fd.addr = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @au_header0(i32* %rate.addr, i32* %fd.addr, i8** %comment.addr, i32* %size.addr, i32* %enc.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %comment.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @au_header0(i32* %rate.addr, i32* %fd.addr, i8** %comment.addr, i32* %size.addr, i32* %enc.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %size.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @au_header0(i32* %rate.addr, i32* %fd.addr, i8** %comment.addr, i32* %size.addr, i32* %enc.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %enc.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @au_header0(i32* %rate.addr, i32* %fd.addr, i8** %comment.addr, i32* %size.addr, i32* %enc.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
 Processing function:wblong
Short range hashing enabled.
Processing path: entry  for.cond  for.body  for.inc  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %fd.addr = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @wblong0(i32* %fd.addr, i32* %i, i64* %x.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @wblong0(i32* %fd.addr, i32* %i, i64* %x.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %x.addr = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @wblong0(i32* %fd.addr, i32* %i, i64* %x.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Processing function:file_init
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @file_init0(i32* %retval, i32* %argc.addr), !control_dep_instr !9, !data_indep_instr !10, !input_dep_block !11
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @file_init0(i32* %retval, i32* %argc.addr), !control_dep_instr !9, !data_indep_instr !10, !input_dep_block !11
No oh has been applied in the path
Processing path: entry  return  
After path modifications process path
entry  return  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  if.end  if.then2  if.then4  
After path modifications process path
entry  if.end  if.then2  if.then4  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.end9  if.then11  if.then13  
After path modifications process path
entry  if.end  if.then2  if.end9  if.then11  if.then13  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.end9  if.then11  if.end15  
After path modifications process path
entry  if.end  if.then2  if.end9  if.then11  if.end15  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.end9  if.then11  if.else14  
After path modifications process path
entry  if.end  if.then2  if.end9  if.then11  if.else14  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.end9  if.end16  
After path modifications process path
entry  if.end  if.then2  if.end9  if.end16  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.else  if.then7  
After path modifications process path
entry  if.end  if.then2  if.else  if.then7  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.else  if.end8  
After path modifications process path
entry  if.end  if.then2  if.else  if.end8  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.then19  if.then23  
After path modifications process path
entry  if.end  if.end17  if.then19  if.then23  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.then19  if.end30  
After path modifications process path
entry  if.end  if.end17  if.then19  if.end30  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.then19  if.else24  if.then28  
After path modifications process path
entry  if.end  if.end17  if.then19  if.else24  if.then28  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.then19  if.else24  if.end29  
After path modifications process path
entry  if.end  if.end17  if.then19  if.else24  if.end29  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.end31  if.then36  
After path modifications process path
entry  if.end  if.end17  if.end31  if.then36  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.end31  if.end37  
After path modifications process path
entry  if.end  if.end17  if.end31  if.end37  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
Processing path: entry  if.end  if.end17  if.end31  lor.lhs.false  
After path modifications process path
entry  if.end  if.end17  if.end31  lor.lhs.false  
Insert assertion evaluating function:file_init callsites detected =1
Insert assertion included function:file_init because it is not in the skip  assert list!
 Processing function:aufile_write
Short range hashing enabled.
Processing path: entry  if.then  if.then2  if.then9  
After path modifications process path
entry  if.then  if.then2  if.then9  
Processing path: entry  if.then  if.then2  if.end  
After path modifications process path
entry  if.then  if.then2  if.end  
Processing path: entry  if.then  if.end10  if.then13  if.then16  if.then26  
After path modifications process path
entry  if.then  if.end10  if.then13  if.then16  if.then26  
Processing path: entry  if.then  if.end10  if.then13  if.then16  if.end27  
After path modifications process path
entry  if.then  if.end10  if.then13  if.then16  if.end27  
Processing path: entry  if.then  if.end10  if.then13  if.then16  if.else  
After path modifications process path
entry  if.then  if.end10  if.then13  if.then16  if.else  
Processing path: entry  if.then  if.end10  if.then13  if.end53  
After path modifications process path
entry  if.then  if.end10  if.then13  if.end53  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.cond  while.end  if.then44  
After path modifications process path is empty
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.end  if.then44  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.end  if.then44  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.cond  while.end  if.end47  
After path modifications process path is empty
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.end  if.end47  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.end  if.end47  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.cond  while.end  if.else45  
After path modifications process path is empty
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.end  if.else45  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.then31  if.then34  while.end  if.else45  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.end50  if.end52  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.then31  if.end50  if.end52  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.then31  if.else48  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.then31  if.else48  
Processing path: entry  if.then  if.end10  if.then13  if.else28  if.else51  
After path modifications process path
entry  if.then  if.end10  if.then13  if.else28  if.else51  
Processing path: entry  if.then  if.end10  if.end54  
After path modifications process path
entry  if.then  if.end10  if.end54  
Processing path: entry  if.end55  
After path modifications process path
entry  if.end55  
 Processing function:aufile_term
Short range hashing enabled.
Processing path: entry  if.then  if.then2  if.then6  
After path modifications process path
entry  if.then  if.then2  if.then6  
Processing path: entry  if.then  if.then2  if.end  
After path modifications process path
entry  if.then  if.then2  if.end  
Processing path: entry  if.then  if.end7  if.then10  
After path modifications process path
entry  if.then  if.end7  if.then10  
Processing path: entry  if.then  if.end7  if.end12  
After path modifications process path
entry  if.then  if.end7  if.end12  
Processing path: entry  if.end13  if.then16  if.then21  
After path modifications process path
entry  if.end13  if.then16  if.then21  
Processing path: entry  if.end13  if.then16  if.end23  
After path modifications process path
entry  if.end13  if.then16  if.end23  
Processing path: entry  if.end13  if.end24  
After path modifications process path
entry  if.end13  if.end24  
 Processing function:dict_find
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Null pointer skipped:i8* null
No oh has been applied in the path
 Processing function:dict_init
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:dict_init callsites detected =1
Insert assertion included function:dict_init because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
 Processing function:dict_term
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:getargs
Short range hashing enabled.
Processing path: entry  while.cond10  vaarg.in_reg  
After path modifications process path
vaarg.in_reg  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Non numeric pointers (int and float) are skipped:  %module.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.in_reg19  
After path modifications process path
while.body13  vaarg.in_reg19  
Hash path invariants only
Invariants are
  br label %vaarg.end25, !control_dep_instr !11, !data_indep_instr !9
  %34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.in_reg31  
After path modifications process path
while.body13  vaarg.end25  vaarg.in_reg31  
Hash path invariants only
Invariants are
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %vaarg.end37, !control_dep_instr !11, !data_indep_instr !9
  %53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.in_reg43  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.in_reg43  
Hash path invariants only
Invariants are
  br label %vaarg.end49, !control_dep_instr !11, !data_indep_instr !9
  %73 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  if.end132  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  if.end132  
Hash path invariants only
Invariants are
  br label %if.end183, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.then108  if.then112  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.then108  if.then112  
Hash path invariants only
Invariants are
  br label %if.end115, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x101 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.then108  if.end115  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.then108  if.end115  
Hash path invariants only
Invariants are
  br label %if.end117, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.end117  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.end117  
Hash path invariants only
Invariants are
  br label %if.end121, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.else116  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.else116  
Hash path invariants only
Invariants are
  br label %if.end117, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x101 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.end121  
After path modifications process path
while.body8  if.then95  if.then97  if.end121  
Hash path invariants only
Invariants are
  br label %if.end129, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.else118  
After path modifications process path
while.body8  if.then95  if.then97  if.else118  
Hash path invariants only
Invariants are
  br label %if.end121, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.end129  
After path modifications process path
while.body8  if.then95  if.end129  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %l = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %count = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.then125  
After path modifications process path
while.body8  if.then95  if.else122  if.then125  
Hash path invariants only
Invariants are
  br label %if.end128, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs9(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs9(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.end128  
After path modifications process path
while.body8  if.then95  if.else122  if.end128  
Hash path invariants only
Invariants are
  br label %if.end129, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.else126  
After path modifications process path
while.body8  if.then95  if.else122  if.else126  
Hash path invariants only
Invariants are
  br label %if.end128, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs10(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs10(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end183  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end183  
Hash path invariants only
Invariants are
  br label %if.end184, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.then152  if.then156  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.then152  if.then156  
Hash path invariants only
Invariants are
  br label %if.end159, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x145 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.then152  if.end159  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.then152  if.end159  
Hash path invariants only
Invariants are
  br label %if.end161, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.end161  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.end161  
Hash path invariants only
Invariants are
  br label %if.end165, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.else160  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.else160  
Hash path invariants only
Invariants are
  br label %if.end161, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x145 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.end165  
After path modifications process path
while.body8  if.then138  if.then140  if.end165  
Hash path invariants only
Invariants are
  br label %if.end179, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.else162  
After path modifications process path
while.body8  if.then138  if.then140  if.else162  
Hash path invariants only
Invariants are
  br label %if.end165, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.end179  
After path modifications process path
while.body8  if.then138  if.end179  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %count = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  if.then171  
After path modifications process path
while.body8  if.then138  if.else166  if.then171  
Hash path invariants only
Invariants are
  br label %if.end178, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %flag = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  if.end178  
After path modifications process path
while.body8  if.then138  if.else166  if.end178  
Hash path invariants only
Invariants are
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  br label %if.end179, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  lor.lhs.false168  if.else174  
After path modifications process path
while.body8  if.then138  if.else166  lor.lhs.false168  if.else174  
Hash path invariants only
Invariants are
  br label %if.end178, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs16(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs16(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  if.end182  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end182  
Hash path invariants only
Invariants are
  br label %if.end183, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.end184  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.epilog  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end81, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs4(i8** %desc), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %desc = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs4(i8** %desc), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb  
Hash path invariants only
Invariants are
  call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %sw.epilog, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.then73  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.then73  
Hash path invariants only
Invariants are
  br label %if.end76, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.end76  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.end76  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.else  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.else  
Hash path invariants only
Invariants are
  call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %if.end76, !control_dep_instr !11, !data_indep_instr !9
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.end81  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.end81  
Hash path invariants only
Invariants are
  br label %if.end86, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.true  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.end  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.end  
Hash path invariants only
Invariants are
  br label %if.end81, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.false  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.end86  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.end86  
Hash path invariants only
Invariants are
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %if.end184, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.else82  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.else82  
Hash path invariants only
Invariants are
  br label %if.end86, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %desc = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.then55  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.then55  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs0(i8** %module.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %module.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs0(i8** %module.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.in_mem45  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.in_mem45  
Hash path invariants only
Invariants are
  %overflow_arg_area_p46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %vaarg.end49, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.in_mem33  
After path modifications process path
while.body13  vaarg.end25  vaarg.in_mem33  
Hash path invariants only
Invariants are
  br label %vaarg.end37, !control_dep_instr !11, !data_indep_instr !9
  %overflow_arg_area_p34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.in_mem21  
After path modifications process path
while.body13  vaarg.in_mem21  
Hash path invariants only
Invariants are
  br label %vaarg.end25, !control_dep_instr !11, !data_indep_instr !9
  %overflow_arg_area_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  
After path modifications process path is empty
Processing path: entry  while.cond6  while.body8  while.end  if.end189  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  
After path modifications process path is empty
Processing path: entry  while.cond6  while.body8  while.end  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  if.then188  
After path modifications process path
while.body  land.lhs.true  if.then  if.then188  
Hash path invariants only
Invariants are
  br label %while.end190, !control_dep_instr !11, !data_indep_instr !9
  store i32 0, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.in_mem  
After path modifications process path
vaarg.in_mem  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.then193  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.then193  
Hash path invariants only
Invariants are
  br label %for.cond, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  for.cond  
After path modifications process path is empty
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.then193  for.end  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.then193  for.end  
Hash path invariants only
Invariants are
  br label %if.end204, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %for.cond, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.end204  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.end204  
Hash path invariants only
Invariants are
  br label %if.end207, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.else202  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.else202  
Hash path invariants only
Invariants are
  br label %if.end204, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs21(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs21(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  lor.lhs.false  
After path modifications process path
while.body  land.lhs.true  lor.lhs.false  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end207  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  if.else205  
After path modifications process path
while.body  if.else205  
Hash path invariants only
Invariants are
  br label %if.end207, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs22(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs22(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.end208  land.lhs.true210  if.then212  
After path modifications process path is empty
Processing path: entry  while.end208  land.lhs.true210  if.then212  
After path modifications process path
entry  while.end208  land.lhs.true210  if.then212  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Processing path: entry  while.cond  while.end208  if.end214  
After path modifications process path is empty
Processing path: entry  while.end208  if.end214  
After path modifications process path
entry  while.end208  if.end214  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
 Processing function:audio_init
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @audio_init0(i32* %retval, i32* %argc.addr), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @audio_init0(i32* %retval, i32* %argc.addr), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Processing path: entry  return  
After path modifications process path
entry  return  
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  if.end  if.then2  
After path modifications process path
entry  if.end  if.then2  
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end4  if.then6  
After path modifications process path
entry  if.end  if.end4  if.then6  
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %rate_set = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @audio_init1(i32* %rate_set), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Processing path: entry  if.end  if.end4  if.end7  if.then9  
After path modifications process path
entry  if.end  if.end4  if.end7  if.then9  
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
Processing call instruction..
Processing path: entry  if.end  if.end4  if.end7  if.end12  
After path modifications process path
entry  if.end  if.end4  if.end7  if.end12  
Insert assertion evaluating function:audio_init callsites detected =1
Insert assertion included function:audio_init because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @audio_init3(i32* %retval, i32* %argc.addr), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @audio_init3(i32* %retval, i32* %argc.addr), !control_dep_instr !12, !data_indep_instr !10, !input_dep_block !13
 Processing function:audio_open
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:audio_term
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then3  
After path modifications process path
entry  if.end  if.then3  
Processing path: entry  if.end  if.end7  
After path modifications process path
entry  if.end  if.end7  
 Processing function:audio_play
Short range hashing enabled.
Processing path: entry  if.then  if.then3  
After path modifications process path
entry  if.then  if.then3  
Processing call instruction..
Processing path: entry  if.then  if.end  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11
  call void @audio_play1(i8** %converted, i16** %data.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing call instruction..
Can't handle this operand   %converted = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @audio_play1(i8** %converted, i16** %data.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %data.addr = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @audio_play1(i8** %converted, i16** %data.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @audio_play1(i8** %converted, i16** %data.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  
After path modifications process path
entry  if.then  if.end  
Processing path: entry  if.then  if.end  for.cond  for.end  if.then13  if.then19  
After path modifications process path is empty
Processing path: entry  if.then  if.end  for.end  if.then13  if.then19  
After path modifications process path
entry  if.then  if.end  for.end  if.then13  if.then19  
Processing path: entry  if.then  if.end  for.cond  for.end  if.then13  if.end20  
After path modifications process path is empty
Processing path: entry  if.then  if.end  for.end  if.then13  if.end20  
After path modifications process path
entry  if.then  if.end  for.end  if.then13  if.end20  
Processing path: entry  if.then  if.end  for.cond  for.end  if.end21  if.then24  if.then30  
After path modifications process path is empty
Processing path: entry  if.then  if.end  for.end  if.end21  if.then24  if.then30  
After path modifications process path
entry  if.then  if.end  for.end  if.end21  if.then24  if.then30  
Processing path: entry  if.then  if.end  for.cond  for.end  if.end21  if.then24  if.end31  
After path modifications process path is empty
Processing path: entry  if.then  if.end  for.end  if.end21  if.then24  if.end31  
After path modifications process path
entry  if.then  if.end  for.end  if.end21  if.then24  if.end31  
Processing path: entry  if.then  if.end  for.cond  for.end  if.end21  if.end32  
After path modifications process path is empty
Processing path: entry  if.then  if.end  for.end  if.end21  if.end32  
After path modifications process path
entry  if.then  if.end  for.end  if.end21  if.end32  
Processing path: entry  if.end33  
After path modifications process path
entry  if.end33  
Extract path function for assertion assert_audio_term_path_0
Extract path function for assertion assert_audio_term_path_1
Extract path function for assertion assert_audio_term_path_2
Extract path function for assertion assert_audio_open_path_0
Extract path function for assertion assert_audio_open_path_1
Extract path function for assertion assert_audio_open_path_2
Extract path function for assertion assert_audio_init_path_2
Extract path function for assertion assert_audio_init_path_3
Extract path function for assertion assert_audio_init_path_4
Extract path function for assertion assert_audio_init_path_5
Extract path function for assertion assert_getargs_path_1
Extract path function for assertion assert_getargs_path_2
Extract path function for assertion assert_getargs_path_4
Extract path function for assertion assert_getargs_path_5
Extract path function for assertion assert_getargs_path_6
Extract path function for assertion assert_getargs_path_8
Extract path function for assertion assert_getargs_path_9
Extract path function for assertion assert_getargs_path_10
Extract path function for assertion assert_getargs_path_12
Extract path function for assertion assert_getargs_path_13
Extract path function for assertion assert_getargs_path_14
Extract path function for assertion assert_getargs_path_16
Extract path function for assertion assert_getargs_path_17
Extract path function for assertion assert_getargs_path_18
Extract path function for assertion assert_getargs_path_20
Extract path function for assertion assert_getargs_path_21
Extract path function for assertion assert_getargs_path_22
Extract path function for assertion assert_getargs_path_24
Extract path function for assertion assert_getargs_path_25
Extract path function for assertion assert_getargs_path_26
Extract path function for assertion assert_getargs_path_28
Extract path function for assertion assert_getargs_path_29
Extract path function for assertion assert_getargs_path_30
Extract path function for assertion assert_getargs_path_32
Extract path function for assertion assert_getargs_path_33
Extract path function for assertion assert_getargs_path_34
Extract path function for assertion assert_getargs_path_36
Extract path function for assertion assert_getargs_path_37
Extract path function for assertion assert_getargs_path_38
Extract path function for assertion assert_getargs_path_40
Extract path function for assertion assert_getargs_path_41
Extract path function for assertion assert_getargs_path_42
Extract path function for assertion assert_getargs_path_44
Extract path function for assertion assert_getargs_path_45
Extract path function for assertion assert_getargs_path_46
Extract path function for assertion assert_getargs_path_48
Extract path function for assertion assert_getargs_path_49
Extract path function for assertion assert_getargs_path_50
Extract path function for assertion assert_getargs_path_52
Extract path function for assertion assert_getargs_path_53
Extract path function for assertion assert_getargs_path_54
Extract path function for assertion assert_getargs_path_56
Extract path function for assertion assert_getargs_path_57
Extract path function for assertion assert_getargs_path_58
Extract path function for assertion assert_getargs_path_60
Extract path function for assertion assert_getargs_path_61
Extract path function for assertion assert_getargs_path_62
Extract path function for assertion assert_getargs_path_64
Extract path function for assertion assert_getargs_path_65
Extract path function for assertion assert_getargs_path_66
Extract path function for assertion assert_getargs_path_68
Extract path function for assertion assert_getargs_path_69
Extract path function for assertion assert_getargs_path_70
Extract path function for assertion assert_getargs_path_72
Extract path function for assertion assert_getargs_path_73
Extract path function for assertion assert_getargs_path_74
Extract path function for assertion assert_getargs_path_76
Extract path function for assertion assert_getargs_path_77
Extract path function for assertion assert_getargs_path_78
Extract path function for assertion assert_getargs_path_80
Extract path function for assertion assert_getargs_path_81
Extract path function for assertion assert_getargs_path_82
Extract path function for assertion assert_getargs_path_84
Extract path function for assertion assert_getargs_path_85
Extract path function for assertion assert_getargs_path_86
Extract path function for assertion assert_getargs_path_88
Extract path function for assertion assert_getargs_path_89
Extract path function for assertion assert_getargs_path_90
Extract path function for assertion assert_getargs_path_92
Extract path function for assertion assert_getargs_path_93
Extract path function for assertion assert_getargs_path_94
Extract path function for assertion assert_getargs_path_96
Extract path function for assertion assert_getargs_path_97
Extract path function for assertion assert_getargs_path_98
Extract path function for assertion assert_getargs_path_100
Extract path function for assertion assert_getargs_path_101
Extract path function for assertion assert_getargs_path_102
Extract path function for assertion assert_getargs_path_104
Extract path function for assertion assert_getargs_path_105
Extract path function for assertion assert_getargs_path_106
Extract path function for assertion assert_getargs_path_108
Extract path function for assertion assert_getargs_path_109
Extract path function for assertion assert_getargs_path_110
Extract path function for assertion assert_getargs_path_112
Extract path function for assertion assert_getargs_path_113
Extract path function for assertion assert_getargs_path_114
Extract path function for assertion assert_getargs_path_116
Extract path function for assertion assert_getargs_path_117
Extract path function for assertion assert_getargs_path_118
Extract path function for assertion assert_getargs_path_120
Extract path function for assertion assert_getargs_path_121
Extract path function for assertion assert_getargs_path_122
Extract path function for assertion assert_getargs_path_124
Extract path function for assertion assert_getargs_path_125
Extract path function for assertion assert_getargs_path_126
Extract path function for assertion assert_getargs_path_128
Extract path function for assertion assert_getargs_path_129
Extract path function for assertion assert_getargs_path_130
Extract path function for assertion assert_getargs_path_132
Extract path function for assertion assert_getargs_path_133
Extract path function for assertion assert_getargs_path_134
Extract path function for assertion assert_getargs_path_136
Extract path function for assertion assert_getargs_path_137
Extract path function for assertion assert_getargs_path_138
Extract path function for assertion assert_getargs_path_140
Extract path function for assertion assert_getargs_path_141
Extract path function for assertion assert_getargs_path_142
Extract path function for assertion assert_getargs_path_144
Extract path function for assertion assert_getargs_path_145
Extract path function for assertion assert_getargs_path_146
Extract path function for assertion assert_getargs_path_148
Extract path function for assertion assert_getargs_path_149
Extract path function for assertion assert_getargs_path_150
Extract path function for assertion assert_getargs_path_152
Extract path function for assertion assert_getargs_path_153
Extract path function for assertion assert_getargs_path_154
Extract path function for assertion assert_getargs_path_156
Extract path function for assertion assert_getargs_path_157
Extract path function for assertion assert_getargs_path_158
Extract path function for assertion assert_getargs_path_160
Extract path function for assertion assert_getargs_path_161
Extract path function for assertion assert_getargs_path_162
Extract path function for assertion assert_getargs_path_164
Extract path function for assertion assert_getargs_path_165
Extract path function for assertion assert_getargs_path_166
Extract path function for assertion assert_getargs_path_168
Extract path function for assertion assert_getargs_path_169
Extract path function for assertion assert_getargs_path_170
Extract path function for assertion assert_getargs_path_173
Extract path function for assertion assert_getargs_path_174
Extract path function for assertion assert_getargs_path_177
Extract path function for assertion assert_getargs_path_178
Extract path function for assertion assert_getargs_path_181
Extract path function for assertion assert_getargs_path_182
Extract path function for assertion assert_getargs_path_186
Extract path function for assertion assert_getargs_path_190
Extract path function for assertion assert_getargs_path_193
Extract path function for assertion assert_getargs_path_196
Extract path function for assertion assert_getargs_path_202
Extract path function for assertion assert_getargs_path_205
Extract path function for assertion assert_aufile_term_path_0
Extract path function for assertion assert_aufile_term_path_1
Extract path function for assertion assert_aufile_term_path_2
Extract path function for assertion assert_aufile_term_path_3
Extract path function for assertion assert_aufile_term_path_4
Extract path function for assertion assert_aufile_term_path_5
Extract path function for assertion assert_aufile_term_path_6
Extract path function for assertion assert_aufile_write_path_0
Extract path function for assertion assert_aufile_write_path_1
Extract path function for assertion assert_aufile_write_path_2
Extract path function for assertion assert_aufile_write_path_3
Extract path function for assertion assert_aufile_write_path_4
Extract path function for assertion assert_aufile_write_path_5
Extract path function for assertion assert_aufile_write_path_7
Extract path function for assertion assert_aufile_write_path_9
Extract path function for assertion assert_aufile_write_path_11
Extract path function for assertion assert_aufile_write_path_13
Extract path function for assertion assert_aufile_write_path_14
Extract path function for assertion assert_aufile_write_path_15
Extract path function for assertion assert_aufile_write_path_16
Extract path function for assertion assert_aufile_write_path_17
Extract path function for assertion assert_aufile_write_path_18
Extract path function for assertion assert_file_init_path_2
Extract path function for assertion assert_file_init_path_3
Extract path function for assertion assert_file_init_path_4
Extract path function for assertion assert_file_init_path_5
Extract path function for assertion assert_file_init_path_6
Extract path function for assertion assert_file_init_path_7
Extract path function for assertion assert_file_init_path_8
Extract path function for assertion assert_file_init_path_9
Extract path function for assertion assert_file_init_path_10
Extract path function for assertion assert_file_init_path_11
Extract path function for assertion assert_file_init_path_12
Extract path function for assertion assert_file_init_path_13
Extract path function for assertion assert_file_init_path_14
Extract path function for assertion assert_file_init_path_15
Extract path function for assertion assert_wblong_path_0
Extract path function for assertion assert_wblong_path_1
Extract path function for assertion assert_wblong_path_2
Extract path function for assertion assert_wblong_path_3
Extract path function for assertion assert_au_header_path_0
Extract path function for assertion assert_au_header_path_1
Extract path function for assertion assert_overload_warning_path_0
Extract path function for assertion assert_overload_warning_path_1
Extract path function for assertion assert_overload_warning_path_2
Extract path function for assertion assert_clip_path_0
Extract path function for assertion assert_clip_path_1
Extract path function for assertion assert_clip_path_2
Extract path function for assertion assert_clip_path_3
Extract path function for assertion assert_pitch_synch_par_reset_path_0
Extract path function for assertion assert_pitch_synch_par_reset_path_1
Extract path function for assertion assert_pitch_synch_par_reset_path_2
Extract path function for assertion assert_pitch_synch_par_reset_path_3
Extract path function for assertion assert_pitch_synch_par_reset_path_4
Extract path function for assertion assert_pitch_synch_par_reset_path_5
Extract path function for assertion assert_pitch_synch_par_reset_path_6
Extract path function for assertion assert_pitch_synch_par_reset_path_7
Extract path function for assertion assert_pitch_synch_par_reset_path_8
Extract path function for assertion assert_pitch_synch_par_reset_path_9
Extract path function for assertion assert_pitch_synch_par_reset_path_10
Extract path function for assertion assert_pitch_synch_par_reset_path_11
Extract path function for assertion assert_pitch_synch_par_reset_path_12
Extract path function for assertion assert_pitch_synch_par_reset_path_13
Extract path function for assertion assert_pitch_synch_par_reset_path_14
Extract path function for assertion assert_pitch_synch_par_reset_path_15
Extract path function for assertion assert_pitch_synch_par_reset_path_16
Extract path function for assertion assert_say_file_path_1
Extract path function for assertion assert_say_file_path_3
Extract path function for assertion assert_say_file_path_5
Extract path function for assertion assert_isconsonant_path_0
Extract path function for assertion assert_isconsonant_path_1
Extract path function for assertion assert_enter_path_2
Extract path function for assertion assert_enter_path_6
Extract path function for assertion assert_impulsive_source_path_0
Extract path function for assertion assert_impulsive_source_path_1
Extract path function for assertion assert_impulsive_source_path_2
Extract path function for assertion assert_jsru_freq_path_0
Extract path function for assertion assert_jsru_freq_path_1
Extract path function for assertion assert_DBtoLIN_path_0
Extract path function for assertion assert_DBtoLIN_path_1
Extract path function for assertion assert_DBtoLIN_path_2
Extract path function for assertion assert_DBtoLIN_path_3
Extract path function for assertion assert_DBtoLIN_path_4
Extract path function for assertion assert_suspect_word_path_0
Extract path function for assertion assert_suspect_word_path_1
Extract path function for assertion assert_suspect_word_path_2
Extract path function for assertion assert_suspect_word_path_3
Extract path function for assertion assert_suspect_word_path_4
Extract path function for assertion assert_suspect_word_path_5
Extract path function for assertion assert_suspect_word_path_6
Extract path function for assertion assert_suspect_word_path_7
Extract path function for assertion assert_suspect_word_path_8
Extract path function for assertion assert_suspect_word_path_9
Extract path function for assertion assert_suspect_word_path_11
Extract path function for assertion assert_suspect_word_path_13
Extract path function for assertion assert_suspect_word_path_15
Extract path function for assertion assert_darray_free_path_0
Extract path function for assertion assert_darray_free_path_1
Extract path function for assertion assert_phone_to_elm_path_0
Extract path function for assertion assert_phone_to_elm_path_1
Extract path function for assertion assert_phone_to_elm_path_3
Extract path function for assertion assert_phone_to_elm_path_4
Extract path function for assertion assert_phone_to_elm_path_5
Extract path function for assertion assert_phone_to_elm_path_6
Extract path function for assertion assert_phone_to_elm_path_7
Extract path function for assertion assert_phone_to_elm_path_9
Extract path function for assertion assert_phone_to_elm_path_10
Extract path function for assertion assert_phone_to_elm_path_12
Extract path function for assertion assert_phone_to_elm_path_13
Extract path function for assertion assert_phone_to_elm_path_14
Extract path function for assertion assert_phone_to_elm_path_15
Extract path function for assertion assert_phone_to_elm_path_16
Extract path function for assertion assert_phone_to_elm_path_17
Extract path function for assertion assert_phone_to_elm_path_18
Extract path function for assertion assert_phone_to_elm_path_19
Extract path function for assertion assert_phone_to_elm_path_20
Extract path function for assertion assert_phone_to_elm_path_21
Extract path function for assertion assert_phone_to_elm_path_22
Extract path function for assertion assert_phone_to_elm_path_23
Extract path function for assertion assert_phone_to_elm_path_24
Extract path function for assertion assert_phone_to_elm_path_26
Extract path function for assertion assert_phone_to_elm_path_27
Extract path function for assertion assert_jsru_amp_path_0
Extract path function for assertion assert_jsru_amp_path_1
Extract path function for assertion assert_jsru_amp_path_2
Extract path function for assertion assert_leftmatch_path_0
Extract path function for assertion assert_leftmatch_path_1
Extract path function for assertion assert_leftmatch_path_2
Extract path function for assertion assert_leftmatch_path_3
Extract path function for assertion assert_leftmatch_path_4
Extract path function for assertion assert_leftmatch_path_5
Extract path function for assertion assert_leftmatch_path_6
Extract path function for assertion assert_leftmatch_path_7
Extract path function for assertion assert_leftmatch_path_8
Extract path function for assertion assert_leftmatch_path_9
Extract path function for assertion assert_leftmatch_path_11
Extract path function for assertion assert_leftmatch_path_12
Extract path function for assertion assert_leftmatch_path_14
Extract path function for assertion assert_leftmatch_path_15
Extract path function for assertion assert_leftmatch_path_16
Extract path function for assertion assert_leftmatch_path_17
Extract path function for assertion assert_leftmatch_path_18
Extract path function for assertion assert_leftmatch_path_19
Extract path function for assertion assert_leftmatch_path_21
Extract path function for assertion assert_leftmatch_path_22
Extract path function for assertion assert_leftmatch_path_24
Extract path function for assertion assert_leftmatch_path_25
Extract path function for assertion assert_leftmatch_path_26
Extract path function for assertion assert_leftmatch_path_27
Extract path function for assertion assert_leftmatch_path_28
Extract path function for assertion assert_leftmatch_path_29
Extract path function for assertion assert_leftmatch_path_30
Extract path function for assertion assert_leftmatch_path_31
Extract path function for assertion assert_leftmatch_path_32
Extract path function for assertion assert_leftmatch_path_33
Extract path function for assertion assert_leftmatch_path_34
Extract path function for assertion assert_leftmatch_path_35
Extract path function for assertion assert_leftmatch_path_36
Extract path function for assertion assert_leftmatch_path_37
Extract path function for assertion assert_leftmatch_path_38
Extract path function for assertion assert_leftmatch_path_39
Extract path function for assertion assert_leftmatch_path_41
Extract path function for assertion assert_say_phones_path_0
Extract path function for assertion assert_say_phones_path_1
Extract path function for assertion assert_say_phones_path_2
Extract path function for assertion assert_say_phones_path_3
Extract path function for assertion assert_say_phones_path_4
Extract path function for assertion assert_xlate_string_path_1
Extract path function for assertion assert_xlate_string_path_4
Extract path function for assertion assert_xlate_string_path_5
Extract path function for assertion assert_xlate_string_path_8
Extract path function for assertion assert_xlate_string_path_9
Extract path function for assertion assert_xlate_string_path_10
Extract path function for assertion assert_xlate_string_path_11
Extract path function for assertion assert_xlate_string_path_12
Extract path function for assertion assert_xlate_string_path_16
Extract path function for assertion assert_xlate_string_path_17
Extract path function for assertion assert_xlate_string_path_21
Extract path function for assertion assert_xlate_string_path_22
Extract path function for assertion assert_xlate_string_path_27
Extract path function for assertion assert_xlate_string_path_28
Extract path function for assertion assert_xlate_string_path_31
Extract path function for assertion assert_xlate_string_path_32
Extract path function for assertion assert_xlate_string_path_33
Extract path function for assertion assert_xlate_string_path_35
Extract path function for assertion assert_xlate_string_path_36
Extract path function for assertion assert_xlate_string_path_37
Extract path function for assertion assert_xlate_string_path_39
Extract path function for assertion assert_xlate_string_path_40
Extract path function for assertion assert_xlate_string_path_43
Extract path function for assertion assert_xlate_string_path_44
Extract path function for assertion assert_xlate_string_path_47
Extract path function for assertion assert_xlate_string_path_48
Extract path function for assertion assert_xlate_string_path_51
Extract path function for assertion assert_xlate_string_path_52
Extract path function for assertion assert_xlate_string_path_54
Extract path function for assertion assert_xlate_string_path_55
Extract path function for assertion assert_xlate_string_path_58
Extract path function for assertion assert_xlate_string_path_59
Extract path function for assertion assert_xlate_string_path_61
Extract path function for assertion assert_xlate_string_path_62
Extract path function for assertion assert_xlate_string_path_66
Extract path function for assertion assert_xlate_string_path_67
Extract path function for assertion assert_xlate_string_path_72
Extract path function for assertion assert_xlate_string_path_73
Extract path function for assertion assert_xlate_string_path_76
Extract path function for assertion assert_xlate_string_path_77
Extract path function for assertion assert_xlate_string_path_79
Extract path function for assertion assert_xlate_string_path_80
Extract path function for assertion assert_xlate_string_path_82
Extract path function for assertion assert_xlate_string_path_83
Extract path function for assertion assert_xlate_string_path_86
Extract path function for assertion assert_xlate_string_path_87
Extract path function for assertion assert_xlate_string_path_90
Extract path function for assertion assert_xlate_string_path_91
Extract path function for assertion assert_xlate_string_path_94
Extract path function for assertion assert_xlate_string_path_95
Extract path function for assertion assert_xlate_string_path_97
Extract path function for assertion assert_xlate_string_path_98
Extract path function for assertion assert_xlate_string_path_100
Extract path function for assertion assert_xlate_string_path_101
Extract path function for assertion assert_xlate_string_path_103
Extract path function for assertion assert_xlate_string_path_104
Extract path function for assertion assert_xlate_string_path_106
Extract path function for assertion assert_xlate_string_path_107
Extract path function for assertion assert_xlate_string_path_109
Extract path function for assertion assert_xlate_string_path_110
Extract path function for assertion assert_xlate_string_path_112
Extract path function for assertion assert_xlate_string_path_113
Extract path function for assertion assert_xlate_string_path_115
Extract path function for assertion assert_xlate_string_path_116
Extract path function for assertion assert_xlate_string_path_119
Extract path function for assertion assert_xlate_string_path_120
Extract path function for assertion assert_xlate_string_path_123
Extract path function for assertion assert_xlate_string_path_124
Extract path function for assertion assert_xlate_string_path_126
Extract path function for assertion assert_xlate_string_path_127
Extract path function for assertion assert_xlate_string_path_129
Extract path function for assertion assert_xlate_string_path_130
Extract path function for assertion assert_xlate_string_path_133
Extract path function for assertion assert_xlate_string_path_134
Extract path function for assertion assert_xlate_string_path_137
Extract path function for assertion assert_xlate_string_path_138
Extract path function for assertion assert_xlate_string_path_141
Extract path function for assertion assert_xlate_string_path_142
Extract path function for assertion assert_xlate_string_path_145
Extract path function for assertion assert_Darray_find_path_0
Extract path function for assertion assert_Darray_find_path_1
Extract path function for assertion assert_Darray_find_path_2
Extract path function for assertion assert_Darray_find_path_3
Extract path function for assertion assert_Darray_find_path_4
Extract path function for assertion assert_Darray_find_path_5
Extract path function for assertion assert_Darray_find_path_6
Extract path function for assertion assert_Darray_find_path_7
Extract path function for assertion assert_Darray_find_path_8
Extract path function for assertion assert_Darray_find_path_9
Extract path function for assertion assert_Darray_find_path_10
Extract path function for assertion assert_Darray_find_path_11
Extract path function for assertion assert_Darray_find_path_12
Extract path function for assertion assert_linear_path_0
Extract path function for assertion assert_linear_path_1
Extract path function for assertion assert_linear_path_2
Extract path function for assertion assert_linear_path_3
Extract path function for assertion assert_find_rule_path_11
Extract path function for assertion assert_find_rule_path_14
Extract path function for assertion assert_find_rule_path_17
Extract path function for assertion assert_find_rule_path_20
Extract path function for assertion assert_guess_word_path_1
Extract path function for assertion assert_guess_word_path_3
Extract path function for assertion assert_guess_word_path_4
Extract path function for assertion assert_guess_word_path_5
Extract path function for assertion assert_parwave_path_0
Extract path function for assertion assert_parwave_path_1
Extract path function for assertion assert_parwave_path_2
Extract path function for assertion assert_parwave_path_3
Extract path function for assertion assert_parwave_path_4
Extract path function for assertion assert_parwave_path_5
Extract path function for assertion assert_parwave_path_6
Extract path function for assertion assert_parwave_path_7
Extract path function for assertion assert_parwave_path_8
Extract path function for assertion assert_parwave_path_9
Extract path function for assertion assert_parwave_path_10
Extract path function for assertion assert_parwave_path_11
Extract path function for assertion assert_parwave_path_12
Extract path function for assertion assert_parwave_path_13
Extract path function for assertion assert_parwave_path_14
Extract path function for assertion assert_parwave_path_16
Extract path function for assertion assert_parwave_path_17
Extract path function for assertion assert_parwave_path_19
Extract path function for assertion assert_parwave_path_20
Extract path function for assertion assert_parwave_path_22
Extract path function for assertion assert_parwave_path_23
Extract path function for assertion assert_parwave_path_25
Extract path function for assertion assert_parwave_path_26
Extract path function for assertion assert_parwave_path_28
Extract path function for assertion assert_parwave_path_29
Extract path function for assertion assert_parwave_path_31
Extract path function for assertion assert_parwave_path_32
Extract path function for assertion assert_parwave_path_34
Extract path function for assertion assert_parwave_path_35
Extract path function for assertion assert_parwave_path_37
Extract path function for assertion assert_parwave_path_38
Extract path function for assertion assert_parwave_path_40
Extract path function for assertion assert_parwave_path_41
Extract path function for assertion assert_parwave_path_43
Extract path function for assertion assert_parwave_path_44
Extract path function for assertion assert_parwave_path_46
Extract path function for assertion assert_parwave_path_47
Extract path function for assertion assert_parwave_path_49
Extract path function for assertion assert_parwave_path_50
Extract path function for assertion assert_parwave_path_52
Extract path function for assertion assert_parwave_path_53
Extract path function for assertion assert_parwave_path_55
Extract path function for assertion assert_concat_args_path_1
Extract path function for assertion assert_concat_args_path_5
Extract path function for assertion assert_concat_args_path_7
Extract path function for assertion assert_concat_args_path_9
Extract path function for assertion assert_concat_args_path_11
Extract path function for assertion assert_concat_args_path_13
Extract path function for assertion assert_concat_args_path_15
Extract path function for assertion assert_concat_args_path_17
Extract path function for assertion assert_concat_args_path_20
Extract path function for assertion assert_concat_args_path_22
Extract path function for assertion assert_main_path_4
Extract path function for assertion assert_main_path_5
Extract path function for assertion assert_main_path_6
Extract path function for assertion assert_main_path_7
Extract path function for assertion assert_darray_find_path_0
Extract path function for assertion assert_darray_find_path_1
Extract path function for assertion assert_darray_find_path_2
Extract path function for assertion assert_natural_source_path_0
Extract path function for assertion assert_natural_source_path_1
Extract path function for assertion assert_natural_source_path_2
Extract path function for assertion assert_spell_out_path_1
Extract path function for assertion assert_spell_out_path_3
Extract path function for assertion assert_NRL_path_0
Extract path function for assertion assert_NRL_path_2
Extract path function for assertion assert_NRL_path_5
Extract path function for assertion assert_xlate_word_path_1
Extract path function for assertion assert_xlate_word_path_2
Extract path function for assertion assert_xlate_word_path_4
Extract path function for assertion assert_xlate_word_path_5
Extract path function for assertion assert_xlate_word_path_7
Extract path function for assertion assert_xlate_word_path_9
Extract path function for assertion assert_xlate_word_path_10
Extract path function for assertion assert_xlate_word_path_11
Extract path function for assertion assert_xlate_word_path_13
Extract path function for assertion assert_xlate_word_path_14
Extract path function for assertion assert_xlate_word_path_15
Extract path function for assertion assert_xlate_word_path_16
Extract path function for assertion assert_xlate_word_path_17
Extract path function for assertion assert_xlate_word_path_18
Extract path function for assertion assert_xlate_word_path_19
Extract path function for assertion assert_xlate_word_path_20
Extract path function for assertion assert_xlate_word_path_22
Extract path function for assertion assert_xlate_word_path_24
Extract path function for assertion assert_set_trans_path_0
Extract path function for assertion assert_set_trans_path_1
Extract path function for assertion assert_set_trans_path_2
Extract path function for assertion assert_set_trans_path_3
Extract path function for assertion assert_set_trans_path_4
Extract path function for assertion assert_set_trans_path_5
Extract path function for assertion assert_set_trans_path_6
Extract path function for assertion assert_set_trans_path_7
Extract path function for assertion assert_set_trans_path_8
Extract path function for assertion assert_set_trans_path_9
Extract path function for assertion assert_set_trans_path_11
Extract path function for assertion assert_trie_insert_path_7
Extract path function for assertion assert_trie_insert_path_10
Extract path function for assertion assert_xlate_cardinal_path_0
Extract path function for assertion assert_xlate_cardinal_path_1
Extract path function for assertion assert_xlate_cardinal_path_2
Extract path function for assertion assert_xlate_cardinal_path_3
Extract path function for assertion assert_xlate_cardinal_path_4
Extract path function for assertion assert_xlate_cardinal_path_5
Extract path function for assertion assert_xlate_cardinal_path_6
Extract path function for assertion assert_xlate_cardinal_path_7
Extract path function for assertion assert_xlate_cardinal_path_8
Extract path function for assertion assert_xlate_cardinal_path_9
Extract path function for assertion assert_xlate_cardinal_path_10
Extract path function for assertion assert_xlate_cardinal_path_11
Extract path function for assertion assert_xlate_cardinal_path_12
Extract path function for assertion assert_xlate_cardinal_path_13
Extract path function for assertion assert_xlate_cardinal_path_14
Extract path function for assertion assert_xlate_cardinal_path_15
Extract path function for assertion assert_xlate_cardinal_path_16
Extract path function for assertion assert_xlate_cardinal_path_17
Extract path function for assertion assert_xlate_cardinal_path_18
Extract path function for assertion assert_say_string_path_0
Extract path function for assertion assert_say_string_path_1
Extract path function for assertion assert_darray_find.446_path_0
Extract path function for assertion assert_darray_find.446_path_1
Extract path function for assertion assert_darray_find.446_path_2
Extract path function for assertion assert_rightmatch_path_0
Extract path function for assertion assert_rightmatch_path_1
Extract path function for assertion assert_rightmatch_path_2
Extract path function for assertion assert_rightmatch_path_3
Extract path function for assertion assert_rightmatch_path_4
Extract path function for assertion assert_rightmatch_path_5
Extract path function for assertion assert_rightmatch_path_6
Extract path function for assertion assert_rightmatch_path_7
Extract path function for assertion assert_rightmatch_path_8
Extract path function for assertion assert_rightmatch_path_9
Extract path function for assertion assert_rightmatch_path_11
Extract path function for assertion assert_rightmatch_path_12
Extract path function for assertion assert_rightmatch_path_14
Extract path function for assertion assert_rightmatch_path_15
Extract path function for assertion assert_rightmatch_path_16
Extract path function for assertion assert_rightmatch_path_17
Extract path function for assertion assert_rightmatch_path_18
Extract path function for assertion assert_rightmatch_path_19
Extract path function for assertion assert_rightmatch_path_21
Extract path function for assertion assert_rightmatch_path_22
Extract path function for assertion assert_rightmatch_path_24
Extract path function for assertion assert_rightmatch_path_25
Extract path function for assertion assert_rightmatch_path_26
Extract path function for assertion assert_rightmatch_path_27
Extract path function for assertion assert_rightmatch_path_28
Extract path function for assertion assert_rightmatch_path_29
Extract path function for assertion assert_rightmatch_path_30
Extract path function for assertion assert_rightmatch_path_31
Extract path function for assertion assert_rightmatch_path_32
Extract path function for assertion assert_rightmatch_path_33
Extract path function for assertion assert_rightmatch_path_34
Extract path function for assertion assert_rightmatch_path_35
Extract path function for assertion assert_rightmatch_path_36
Extract path function for assertion assert_rightmatch_path_37
Extract path function for assertion assert_rightmatch_path_38
Extract path function for assertion assert_rightmatch_path_39
Extract path function for assertion assert_rightmatch_path_40
Extract path function for assertion assert_rightmatch_path_41
Extract path function for assertion assert_rightmatch_path_42
Extract path function for assertion assert_rightmatch_path_43
Extract path function for assertion assert_rightmatch_path_44
Extract path function for assertion assert_rightmatch_path_45
Extract path function for assertion assert_rightmatch_path_46
Extract path function for assertion assert_rightmatch_path_47
Extract path function for assertion assert_rightmatch_path_48
Extract path function for assertion assert_rightmatch_path_49
Extract path function for assertion assert_rightmatch_path_50
Extract path function for assertion assert_rightmatch_path_51
Extract path function for assertion assert_rightmatch_path_52
Extract path function for assertion assert_rightmatch_path_53
Extract path function for assertion assert_rightmatch_path_54
Extract path function for assertion assert_rightmatch_path_55
Extract path function for assertion assert_rightmatch_path_57
Extract path function for assertion assert_holmes_path_0
Extract path function for assertion assert_holmes_path_1
Extract path function for assertion assert_holmes_path_2
Extract path function for assertion assert_holmes_path_3
Extract path function for assertion assert_holmes_path_4
Extract path function for assertion assert_holmes_path_5
Extract path function for assertion assert_holmes_path_6
Extract path function for assertion assert_holmes_path_7
Extract path function for assertion assert_holmes_path_8
Extract path function for assertion assert_holmes_path_9
Extract path function for assertion assert_holmes_path_10
Extract path function for assertion assert_holmes_path_11
Extract path function for assertion assert_holmes_path_12
Extract path function for assertion assert_holmes_path_13
Extract path function for assertion assert_holmes_path_14
Extract path function for assertion assert_holmes_path_15
Extract path function for assertion assert_holmes_path_16
Extract path function for assertion assert_holmes_path_18
Extract path function for assertion assert_holmes_path_19
Extract path function for assertion assert_holmes_path_20
Extract path function for assertion assert_holmes_path_22
Extract path function for assertion assert_holmes_path_23
Extract path function for assertion assert_holmes_path_24
Extract path function for assertion assert_holmes_path_27
Extract path function for assertion assert_holmes_path_29
Extract path function for assertion assert_holmes_path_30
Extract path function for assertion assert_holmes_path_33
Extract path function for assertion assert_holmes_path_35
Extract path function for assertion assert_holmes_path_36
Extract path function for assertion assert_holmes_path_38
Extract path function for assertion assert_holmes_path_39
Extract path function for assertion assert_holmes_path_40
Extract path function for assertion assert_holmes_path_41
Extract path function for assertion assert_holmes_path_42
Extract path function for assertion assert_holmes_path_43
Extract path function for assertion assert_holmes_path_44
Extract path function for assertion assert_holmes_path_45
Extract path function for assertion assert_holmes_path_46
Extract path function for assertion assert_holmes_path_47
Extract path function for assertion assert_holmes_path_48
Extract path function for assertion assert_holmes_path_49
Extract path function for assertion assert_holmes_path_50
Extract path function for assertion assert_holmes_path_51
Extract path function for assertion assert_holmes_path_52
Extract path function for assertion assert_holmes_path_54
Extract path function for assertion assert_holmes_path_55
Extract path function for assertion assert_holmes_path_56
Extract path function for assertion assert_holmes_path_57
Extract path function for assertion assert_holmes_path_60
Extract path function for assertion assert_holmes_path_61
Extract path function for assertion assert_holmes_path_62
Extract path function for assertion assert_holmes_path_63
Extract path function for assertion assert_holmes_path_64
Extract path function for assertion assert_holmes_path_66
Extract path function for assertion assert_holmes_path_67
Extract path function for assertion assert_holmes_path_68
Extract path function for assertion assert_holmes_path_69
Extract path function for assertion assert_holmes_path_70
Extract path function for assertion assert_holmes_path_72
Extract path function for assertion assert_holmes_path_73
Extract path function for assertion assert_holmes_path_74
Extract path function for assertion assert_holmes_path_75
Extract path function for assertion assert_holmes_path_78
Extract path function for assertion assert_holmes_path_79
Extract path function for assertion assert_holmes_path_80
Extract path function for assertion assert_holmes_path_81
Extract path function for assertion assert_holmes_path_83
Extract path function for assertion assert_holmes_path_84
Extract path function for assertion assert_holmes_path_85
Extract path function for assertion assert_holmes_path_86
Extract path function for assertion assert_holmes_path_88
Extract path function for assertion assert_holmes_path_89
Extract path function for assertion assert_holmes_path_90
Extract path function for assertion assert_holmes_path_91
Extract path function for assertion assert_holmes_path_92
Extract path function for assertion assert_holmes_path_93
Extract path function for assertion assert_holmes_path_94
Extract path function for assertion assert_holmes_path_95
Extract path function for assertion assert_holmes_path_96
Extract path function for assertion assert_holmes_path_97
Extract path function for assertion assert_holmes_path_98
Extract path function for assertion assert_holmes_path_99
Extract path function for assertion assert_holmes_path_100
Extract path function for assertion assert_holmes_path_101
Extract path function for assertion assert_holmes_path_102
Extract path function for assertion assert_holmes_path_103
Extract path function for assertion assert_holmes_path_104
Extract path function for assertion assert_holmes_path_105
Extract path function for assertion assert_holmes_path_106
Extract path function for assertion assert_holmes_path_108
Extract path function for assertion assert_holmes_path_109
Extract path function for assertion assert_holmes_path_110
Extract path function for assertion assert_holmes_path_111
Extract path function for assertion assert_holmes_path_113
Extract path function for assertion assert_holmes_path_114
Extract path function for assertion assert_holmes_path_115
Extract path function for assertion assert_holmes_path_116
Extract path function for assertion assert_holmes_path_119
Extract path function for assertion assert_holmes_path_120
Extract path function for assertion assert_holmes_path_121
Extract path function for assertion assert_holmes_path_122
Extract path function for assertion assert_holmes_path_125
Extract path function for assertion assert_holmes_path_126
Extract path function for assertion assert_holmes_path_127
Extract path function for assertion assert_holmes_path_128
Extract path function for assertion assert_holmes_path_130
Extract path function for assertion assert_holmes_path_131
Extract path function for assertion assert_holmes_path_132
Extract path function for assertion assert_holmes_path_133
Extract path function for assertion assert_holmes_path_135
Extract path function for assertion assert_holmes_path_136
Extract path function for assertion assert_holmes_path_137
Extract path function for assertion assert_holmes_path_138
Extract path function for assertion assert_holmes_path_140
Extract path function for assertion assert_holmes_path_141
Extract path function for assertion assert_holmes_path_142
Extract path function for assertion assert_holmes_path_146
Extract path function for assertion assert_holmes_path_147
Extract path function for assertion assert_holmes_path_148
Extract path function for assertion assert_holmes_path_152
Extract path function for assertion assert_holmes_path_153
Extract path function for assertion assert_holmes_path_154
Extract path function for assertion assert_holmes_path_157
Extract path function for assertion assert_holmes_path_158
Extract path function for assertion assert_holmes_path_159
Extract path function for assertion assert_holmes_path_160
Extract path function for assertion assert_holmes_path_161
Extract path function for assertion assert_holmes_path_162
Extract path function for assertion assert_holmes_path_163
Extract path function for assertion assert_holmes_path_164
Extract path function for assertion assert_holmes_path_165
Extract path function for assertion assert_holmes_path_166
Extract path function for assertion assert_holmes_path_167
Extract path function for assertion assert_holmes_path_168
Extract path function for assertion assert_holmes_path_169
Extract path function for assertion assert_holmes_path_170
Extract path function for assertion assert_holmes_path_171
Extract path function for assertion assert_holmes_path_172
Extract path function for assertion assert_holmes_path_173
Extract path function for assertion assert_holmes_path_174
Extract path function for assertion assert_holmes_path_176
Extract path function for assertion assert_holmes_path_177
Extract path function for assertion assert_holmes_path_179
Extract path function for assertion assert_holmes_path_180
Extract path function for assertion assert_isvowel_path_0
Extract path function for assertion assert_isvowel_path_1
Extract path function for assertion assert_term_holmes_path_0
Extract path function for assertion assert_term_holmes_path_1
Extract path function for assertion assert_term_holmes_path_2
Extract path function for assertion assert_interpolate_path_0
Extract path function for assertion assert_interpolate_path_1
Extract path function for assertion assert_interpolate_path_2
Extract path function for assertion assert_interpolate_path_3
Extract path function for assertion assert_interpolate_path_4
Extract path function for assertion assert_audio_play_path_0
Extract path function for assertion assert_audio_play_path_1
Extract path function for assertion assert_audio_play_path_2
Extract path function for assertion assert_audio_play_path_4
Extract path function for assertion assert_audio_play_path_6
Extract path function for assertion assert_audio_play_path_8
Extract path function for assertion assert_audio_play_path_10
Extract path function for assertion assert_audio_play_path_12
Extract path function for assertion assert_audio_play_path_13
Extract path function for assertion assert_init_holmes_path_2
Extract path function for assertion assert_init_holmes_path_3
Extract path function for assertion assert_init_holmes_path_4
Extract path function for assertion assert_init_holmes_path_5
Extract path function for assertion assert_init_holmes_path_6
Extract path function for assertion assert_frame_init_path_0
Extract path function for assertion assert_frame_init_path_1
Extract path function for assertion assert_frame_init_path_2
Extract path function for assertion assert_frame_init_path_3
Extract path function for assertion assert_frame_init_path_4
Extract path function for assertion assert_frame_init_path_5
Extract path function for assertion assert_frame_init_path_6
Extract path function for assertion assert_frame_init_path_7
Extract path function for assertion assert_frame_init_path_8
Extract path function for assertion assert_frame_init_path_9
Extract path function for assertion assert_frame_init_path_10
OH stats is requested, dumping stat file...
Processed instructions number 5222
{
    "numberOfAssertCalls": 4,
    "numberOfBlocksInFunctionsWithNoDG": 59,
    "numberOfDataDependentInstructions": 2665,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 0,
    "numberOfInstructionsInFunctionsWithNoDG": 271,
    "numberOfNonHashableBlocks": 113,
    "numberOfNonHashableInstructions": 562,
    "numberOfOHProcessedInstr": 4951,
    "numberOfOtherUnprotectedInstructions": 10,
    "numberOfOtherUnprotectedLoopVariantInstructions": 42,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 6,
    "numberOfProtectedFunctions": 51,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 13,
    "numberOfSensitiveBlocks": 967,
    "numberOfSensitiveFunctions": 71,
    "numberOfShortRangeAssertCalls": 775,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 6,
    "numberOfShortRangeProtectedBlocks": 687,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 577,
    "numberOfUnprotectedArgumentReachableInstructions": 106,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 161,
    "numberOfUnprotectedGlobalReachableInstructions": 278,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 698
}
ERR. processed 71 function, while filter count is 364
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 215.3798 seconds (215.3827 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  205.1365 ( 95.7%)   0.9720 ( 95.5%)  206.1085 ( 95.7%)  206.1112 ( 95.7%)  Instruments bitcode with hashing and logging functions
   7.8336 (  3.7%)   0.0320 (  3.1%)   7.8656 (  3.7%)   7.8658 (  3.7%)  runs input dependency analysis
   0.9843 (  0.5%)   0.0078 (  0.8%)   0.9921 (  0.5%)   0.9907 (  0.5%)  Memory SSA
   0.1517 (  0.1%)   0.0040 (  0.4%)   0.1557 (  0.1%)   0.1556 (  0.1%)  Bitcode Writer
   0.1090 (  0.1%)   0.0007 (  0.1%)   0.1097 (  0.1%)   0.1111 (  0.1%)  Dominator Tree Construction
   0.0771 (  0.0%)   0.0005 (  0.0%)   0.0776 (  0.0%)   0.0774 (  0.0%)  Natural Loop Information
   0.0315 (  0.0%)   0.0000 (  0.0%)   0.0315 (  0.0%)   0.0314 (  0.0%)  Module Verifier
   0.0059 (  0.0%)   0.0000 (  0.0%)   0.0059 (  0.0%)   0.0059 (  0.0%)  Include functions in a given file in any transformation
   0.0054 (  0.0%)   0.0001 (  0.0%)   0.0055 (  0.0%)   0.0054 (  0.0%)  Function Alias Analysis Results
   0.0051 (  0.0%)   0.0001 (  0.0%)   0.0052 (  0.0%)   0.0053 (  0.0%)  Dominator Tree Construction
   0.0051 (  0.0%)   0.0001 (  0.0%)   0.0052 (  0.0%)   0.0052 (  0.0%)  Post-Dominator Tree Construction
   0.0050 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)   0.0051 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Instruments bitcode with guards
   0.0035 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)   0.0035 (  0.0%)  Natural Loop Information
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Call site information
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Dead Global Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  runs indirect and virtual calls analysis
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove unreachable blocks from the CFG
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  214.3625 (100.0%)   1.0173 (100.0%)  215.3798 (100.0%)  215.3827 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0274 seconds (0.0274 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0236 (100.0%)   0.0038 (100.0%)   0.0274 (100.0%)   0.0274 (100.0%)  Parse IR
   0.0236 (100.0%)   0.0038 (100.0%)   0.0274 (100.0%)   0.0274 (100.0%)  Total

Running input dependency analysis pass
Processing function spell_out0
Processing function xlate_string0
Processing function xlate_string1
Processing function xlate_string2
Processing function suspect_word0
Processing function suspect_word1
Processing function suspect_word2
Processing function suspect_word
Processing function dict_find
Processing function xlate_word0
Processing function xlate_word1
Processing function darray_find.4460
Processing function Darray_find0
Processing function Darray_find1
Processing function Darray_find2
Processing function Darray_find3
Processing function Darray_find4
Processing function Darray_find
Processing function darray_find.4461
Processing function darray_find.446
Processing function phone_append
Processing function xlate_word2
Processing function xlate_word3
Processing function xlate_word4
Processing function xlate_word6
Processing function xlate_word8
Processing function NRL0
Processing function NRL1
Processing function NRL2
Processing function NRL3
Processing function guess_word0
Processing function find_rule0
Processing function find_rule1
Processing function find_rule2
Processing function leftmatch0
Processing function leftmatch1
Processing function isvowel
Processing function leftmatch2
Processing function leftmatch3
Processing function isconsonant
Processing function leftmatch4
Processing function leftmatch5
Processing function leftmatch6
Processing function leftmatch7
Processing function leftmatch8
Processing function leftmatch9
Processing function leftmatch
Processing function rightmatch0
Processing function rightmatch1
Processing function rightmatch2
Processing function rightmatch3
Processing function rightmatch4
Processing function rightmatch5
Processing function rightmatch6
Processing function rightmatch7
Processing function rightmatch8
Processing function rightmatch9
Processing function rightmatch10
Processing function rightmatch11
Processing function rightmatch12
Processing function rightmatch13
Processing function rightmatch
Processing function find_rule3
Processing function find_rule
Processing function guess_word1
Processing function guess_word
Processing function NRL
Processing function xlate_word9
Processing function xlate_word10
Processing function xlate_word11
Processing function xlate_word12
Processing function xlate_string4
Processing function xlate_string6
Processing function xlate_string7
Processing function xlate_string8
Processing function xlate_cardinal1
Processing function xlate_cardinal3
Processing function xlate_cardinal5
Processing function xlate_cardinal7
Processing function xlate_cardinal8
Processing function xlate_string10
Processing function xlate_string13
Processing function darray_find0
Processing function darray_find1
Processing function darray_find
Processing function darray_init0
Processing function darray_init
Processing function phone_to_elm0
Processing function find_elm0
Processing function find_elm1
Processing function find_elm
Processing function enter0
Processing function enter1
Processing function trie_insert0
Processing function trie_insert1
Processing function trie_insert2
Processing function trie_insert3
Processing function trie_insert
Processing function enter2
Processing function enter
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function enter_phonemes
Processing function trie_lookup0
Processing function trie_lookup1
Processing function trie_lookup2
Processing function trie_lookup3
Processing function trie_lookup
Processing function phone_to_elm1
Processing function phone_to_elm2
Processing function phone_to_elm
Processing function say_phones0
Processing function holmes0
Processing function holmes1
Processing function setabc0
Processing function setabc
Processing function parwave_init0
Processing function parwave_init
Processing function holmes2
Processing function holmes3
Processing function set_trans0
Processing function set_trans1
Processing function set_trans
Processing function holmes4
Processing function holmes5
Processing function holmes6
Processing function holmes7
Processing function holmes8
Processing function holmes9
Processing function holmes10
Processing function holmes11
Processing function holmes12
Processing function holmes13
Processing function holmes14
Processing function holmes15
Processing function holmes16
Processing function linear0
Processing function linear1
Processing function linear2
Processing function linear
Processing function interpolate0
Processing function interpolate1
Processing function interpolate2
Processing function interpolate3
Processing function interpolate
Processing function filter
Processing function DBtoLIN0
Processing function DBtoLIN
Processing function frame_init0
Processing function frame_init1
Processing function frame_init2
Processing function frame_init3
Processing function setzeroabc0
Processing function setzeroabc
Processing function setabcg0
Processing function setabcg
Processing function frame_init4
Processing function frame_init
Processing function flutter0
Processing function flutter
Processing function parwave0
Processing function parwave1
Processing function parwave2
Processing function impulsive_source0
Processing function resonator
Processing function impulsive_source
Processing function parwave3
Processing function natural_source0
Processing function natural_source1
Processing function natural_source
Processing function parwave4
Processing function pitch_synch_par_reset0
Processing function pitch_synch_par_reset1
Processing function pitch_synch_par_reset2
Processing function pitch_synch_par_reset3
Processing function pitch_synch_par_reset4
Processing function pitch_synch_par_reset5
Processing function pitch_synch_par_reset6
Processing function pitch_synch_par_reset7
Processing function pitch_synch_par_reset8
Processing function pitch_synch_par_reset
Processing function parwave5
Processing function parwave6
Processing function parwave7
Processing function antiresonator
Processing function parwave8
Processing function parwave9
Processing function parwave10
Processing function parwave11
Processing function parwave12
Processing function parwave13
Processing function parwave14
Processing function parwave15
Processing function parwave16
Processing function dBconvert
Processing function overload_warning0
Processing function overload_warning
Processing function clip0
Processing function clip1
Processing function clip
Processing function parwave17
Processing function parwave18
Processing function parwave
Processing function holmes17
Processing function jsru_freq
Processing function jsru_amp
Processing function jsru_save0
Processing function jsru_save
Processing function holmes18
Processing function holmes19
Processing function holmes20
Processing function holmes21
Processing function holmes22
Processing function holmes
Processing function audio_play0
Processing function audio_play1
Processing function audio_play2
Processing function audio_play3
Processing function audio_play
Processing function say_phones1
Processing function say_phones2
Processing function darray_free0
Processing function darray_free1
Processing function darray_free
Processing function say_phones
Processing function xlate_string15
Processing function xlate_string16
Processing function xlate_string17
Processing function xlate_string18
Processing function xlate_string20
Processing function xlate_string22
Processing function xlate_string21
Processing function xlate_string19
Processing function xlate_string14
Processing function xlate_string12
Processing function xlate_string11
Processing function xlate_cardinal9
Processing function xlate_cardinal6
Processing function xlate_cardinal4
Processing function xlate_cardinal2
Processing function xlate_cardinal0
Processing function xlate_cardinal
Processing function xlate_string9
Processing function xlate_string5
Processing function xlate_word7
Processing function xlate_word5
Processing function xlate_word
Processing function xlate_string3
Processing function xlate_string
Processing function spell_out1
Processing function spell_out
Processing function concat_args0
Processing function concat_args1
Processing function concat_args2
Processing function concat_args3
Processing function concat_args4
Processing function concat_args5
Processing function concat_args6
Processing function concat_args
Processing function say_string0
Processing function say_string
Processing function darray_fget
Processing function say_file0
Processing function say_file1
Processing function say_file
Processing function getargs0
Processing function getargs1
Processing function getargs2
Processing function getargs3
Processing function getargs4
Processing function getargs5
Processing function getargs6
Processing function getargs7
Processing function getargs8
Processing function getargs9
Processing function getargs10
Processing function getargs11
Processing function getargs12
Processing function getargs13
Processing function getargs14
Processing function getargs15
Processing function getargs16
Processing function getargs17
Processing function getargs18
Processing function getargs19
Processing function getargs20
Processing function getargs21
Processing function getargs22
Processing function getargs23
Processing function getargs
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function audio_init0
Processing function audio_open0
Processing function audio_open
Processing function audio_init1
Processing function audio_init2
Processing function audio_init3
Processing function audio_init
Processing function init_synth0
Processing function init_synth1
Processing function init_synth
Processing function init_holmes0
Processing function init_holmes1
Processing function init_holmes2
Processing function init_holmes3
Processing function init_holmes
Processing function dict_init
Processing function file_init0
Processing function file_init1
Processing function wblong0
Processing function wblong
Processing function au_header0
Processing function au_header
Processing function file_init2
Processing function file_init3
Processing function file_init4
Processing function file_init5
Processing function file_init
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function audio_term0
Processing function audio_term1
Processing function audio_term
Processing function term_holmes0
Processing function term_holmes1
Processing function term_holmes
Processing function dict_term
Processing function main
Processing function xlate_ordinal0
Processing function xlate_ordinal1
Processing function xlate_ordinal2
Processing function xlate_ordinal3
Processing function xlate_ordinal4
Processing function xlate_ordinal5
Processing function xlate_ordinal6
Processing function xlate_ordinal7
Processing function xlate_ordinal8
Processing function xlate_ordinal9
Processing function xlate_ordinal10
Processing function xlate_ordinal11
Processing function xlate_ordinal
Processing function darray_find.730
Processing function darray_find.731
Processing function darray_find.73
Processing function darray_delete0
Processing function darray_delete1
Processing function darray_delete
Processing function phone_cat0
Processing function phone_cat1
Processing function phone_cat
Processing function show_parms0
Processing function show_parms1
Processing function show_parms
Processing function aufile_write0
Processing function aufile_write1
Processing function aufile_write2
Processing function aufile_write3
Processing function aufile_write4
Processing function aufile_write5
Processing function aufile_write6
Processing function aufile_write
Processing function aufile_term0
Processing function aufile_term1
Processing function aufile_term2
Processing function aufile_term
Finalizing aufile_term
Finalizing aufile_term2
Finalizing aufile_term1
Mark Input dependent function aufile_term1
Finalizing aufile_term0
Mark Input dependent function aufile_term0
Finalizing aufile_write
Finalizing aufile_write6
Mark Input dependent function aufile_write6
Finalizing aufile_write5
Mark Input dependent function aufile_write5
Finalizing aufile_write4
Mark Input dependent function aufile_write4
Finalizing aufile_write3
Mark Input dependent function aufile_write3
Finalizing aufile_write2
Mark Input dependent function aufile_write2
Finalizing aufile_write1
Mark Input dependent function aufile_write1
Finalizing aufile_write0
Mark Input dependent function aufile_write0
Finalizing show_parms
Finalizing show_parms1
Mark Input dependent function show_parms1
Finalizing show_parms0
Mark Input dependent function show_parms0
Finalizing phone_cat
Finalizing phone_cat1
Mark Input dependent function phone_cat1
Finalizing phone_cat0
Finalizing darray_delete
Finalizing darray_delete1
Mark Input dependent function darray_delete1
Finalizing darray_delete0
Mark Input dependent function darray_delete0
Finalizing darray_find.73
Mark Input dependent function darray_find.73
Finalizing darray_find.731
Mark Input dependent function darray_find.731
Finalizing darray_find.730
Mark Input dependent function darray_find.730
Finalizing xlate_ordinal
Finalizing xlate_ordinal11
Mark Input dependent function xlate_ordinal11
Finalizing xlate_ordinal10
Mark Input dependent function xlate_ordinal10
Finalizing xlate_ordinal9
Mark Input dependent function xlate_ordinal9
Finalizing xlate_ordinal8
Mark Input dependent function xlate_ordinal8
Finalizing xlate_ordinal7
Mark Input dependent function xlate_ordinal7
Finalizing xlate_ordinal6
Mark Input dependent function xlate_ordinal6
Finalizing xlate_ordinal5
Mark Input dependent function xlate_ordinal5
Finalizing xlate_ordinal4
Mark Input dependent function xlate_ordinal4
Finalizing xlate_ordinal3
Mark Input dependent function xlate_ordinal3
Finalizing xlate_ordinal2
Mark Input dependent function xlate_ordinal2
Finalizing xlate_ordinal1
Mark Input dependent function xlate_ordinal1
Finalizing xlate_ordinal0
Mark Input dependent function xlate_ordinal0
Finalizing main
Finalizing dict_term
Mark Input dependent function dict_term
Finalizing term_holmes
Mark Input dependent function term_holmes
Finalizing term_holmes1
Mark Input dependent function term_holmes1
Finalizing term_holmes0
Mark Input dependent function term_holmes0
Finalizing audio_term
Mark Input dependent function audio_term
Finalizing audio_term1
Mark Input dependent function audio_term1
Finalizing audio_term0
Mark Input dependent function audio_term0
Finalizing main3
Mark Input dependent function main3
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.10 = private unnamed_addr constant [6 x i8] c"(%s)\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.9 = private unnamed_addr constant [44 x i8] c"or     %s [options as above] < file-to-say\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.8 = private unnamed_addr constant [43 x i8] c"Usage: %s [options as above] words to say\0A\00", align 1
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing file_init
Finalizing file_init5
Mark Input dependent function file_init5
Finalizing file_init4
Mark Input dependent function file_init4
Finalizing file_init3
Mark Input dependent function file_init3
Finalizing file_init2
Mark Input dependent function file_init2
Finalizing au_header
Mark Input dependent function au_header
Finalizing au_header0
Mark Input dependent function au_header0
Finalizing wblong
Mark Input dependent function wblong
Finalizing wblong0
Mark Input dependent function wblong0
Finalizing file_init1
Mark Input dependent function file_init1
Finalizing file_init0
Mark Input dependent function file_init0
Finalizing dict_init
Finalizing init_holmes
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @frac = global double 1.000000e+00, align 8
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @speed = global i32 1, align 4
Finalizing init_holmes3
Mark Input dependent function init_holmes3
Finalizing init_holmes2
Mark Input dependent function init_holmes2
Finalizing init_holmes1
Mark Input dependent function init_holmes1
Finalizing init_holmes0
Mark Input dependent function init_holmes0
Finalizing init_synth
Finalizing init_synth1
Mark Input dependent function init_synth1
Finalizing init_synth0
Mark Input dependent function init_synth0
Finalizing audio_init
Finalizing audio_init3
Mark Input dependent function audio_init3
Finalizing audio_init2
Mark Input dependent function audio_init2
Finalizing audio_init1
Mark Input dependent function audio_init1
Finalizing audio_open
Mark Input dependent function audio_open
Finalizing audio_open0
Mark Input dependent function audio_open0
Finalizing audio_init0
Mark Input dependent function audio_init0
Finalizing getargs
Finalizing getargs23
Mark Input dependent function getargs23
Finalizing getargs22
Mark Input dependent function getargs22
Finalizing getargs21
Mark Input dependent function getargs21
Finalizing getargs20
Mark Input dependent function getargs20
Finalizing getargs19
Mark Input dependent function getargs19
Finalizing getargs18
Mark Input dependent function getargs18
Finalizing getargs17
Mark Input dependent function getargs17
Finalizing getargs16
Mark Input dependent function getargs16
Finalizing getargs15
Mark Input dependent function getargs15
Finalizing getargs14
Mark Input dependent function getargs14
Finalizing getargs13
Mark Input dependent function getargs13
Finalizing getargs12
Mark Input dependent function getargs12
Finalizing getargs11
Mark Input dependent function getargs11
Finalizing getargs10
Mark Input dependent function getargs10
Finalizing getargs9
Mark Input dependent function getargs9
Finalizing getargs8
Mark Input dependent function getargs8
Finalizing getargs7
Mark Input dependent function getargs7
Finalizing getargs6
Mark Input dependent function getargs6
Finalizing getargs5
Mark Input dependent function getargs5
Finalizing getargs4
Mark Input dependent function getargs4
Finalizing getargs3
Mark Input dependent function getargs3
Finalizing getargs2
Mark Input dependent function getargs2
Finalizing getargs1
Mark Input dependent function getargs1
Finalizing getargs0
Mark Input dependent function getargs0
Finalizing say_file
Mark Input dependent function say_file
Finalizing say_file1
Mark Input dependent function say_file1
Finalizing say_file0
Mark Input dependent function say_file0
Finalizing darray_fget
Mark Input dependent function darray_fget
Finalizing say_string
Mark Input dependent function say_string
Finalizing say_string0
Mark Input dependent function say_string0
Finalizing concat_args
Mark Input dependent function concat_args
Finalizing concat_args6
Mark Input dependent function concat_args6
Finalizing concat_args5
Mark Input dependent function concat_args5
Finalizing concat_args4
Mark Input dependent function concat_args4
Finalizing concat_args3
Mark Input dependent function concat_args3
Finalizing concat_args2
Mark Input dependent function concat_args2
Finalizing concat_args1
Mark Input dependent function concat_args1
Finalizing concat_args0
Mark Input dependent function concat_args0
Finalizing spell_out
Mark Input dependent function spell_out
Finalizing spell_out1
Mark Input dependent function spell_out1
Finalizing xlate_string
Mark Input dependent function xlate_string
Finalizing xlate_string3
Mark Input dependent function xlate_string3
Finalizing xlate_word
Mark Input dependent function xlate_word
Finalizing xlate_word5
Mark Input dependent function xlate_word5
Finalizing xlate_word7
Mark Input dependent function xlate_word7
Finalizing xlate_string5
Mark Input dependent function xlate_string5
Finalizing xlate_string9
Mark Input dependent function xlate_string9
Finalizing xlate_cardinal
Mark Input dependent function xlate_cardinal
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.7.21 = private unnamed_addr constant [8 x i8] c"hundred\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.3.17 = private unnamed_addr constant [8 x i8] c"billion\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.5.19 = private unnamed_addr constant [8 x i8] c"million\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.6.20 = private unnamed_addr constant [9 x i8] c"thousand\00", align 1
Finalizing xlate_cardinal0
Mark Input dependent function xlate_cardinal0
Finalizing xlate_cardinal2
Mark Input dependent function xlate_cardinal2
Finalizing xlate_cardinal4
Mark Input dependent function xlate_cardinal4
Finalizing xlate_cardinal6
Mark Input dependent function xlate_cardinal6
Finalizing xlate_cardinal9
Mark Input dependent function xlate_cardinal9
Finalizing xlate_string11
Mark Input dependent function xlate_string11
Finalizing xlate_string12
Mark Input dependent function xlate_string12
Finalizing xlate_string14
Mark Input dependent function xlate_string14
Finalizing xlate_string19
Mark Input dependent function xlate_string19
Finalizing xlate_string21
Mark Input dependent function xlate_string21
Finalizing xlate_string22
Mark Input dependent function xlate_string22
Finalizing xlate_string20
Mark Input dependent function xlate_string20
Finalizing xlate_string18
Mark Input dependent function xlate_string18
Finalizing xlate_string17
Mark Input dependent function xlate_string17
Finalizing xlate_string16
Mark Input dependent function xlate_string16
Finalizing xlate_string15
Mark Input dependent function xlate_string15
Finalizing say_phones
Mark Input dependent function say_phones
Finalizing darray_free
Mark Input dependent function darray_free
Finalizing darray_free1
Mark Input dependent function darray_free1
Finalizing darray_free0
Mark Input dependent function darray_free0
Finalizing say_phones2
Mark Input dependent function say_phones2
Finalizing say_phones1
Mark Input dependent function say_phones1
Finalizing audio_play
Mark Input dependent function audio_play
Finalizing audio_play3
Mark Input dependent function audio_play3
Finalizing audio_play2
Mark Input dependent function audio_play2
Finalizing audio_play1
Mark Input dependent function audio_play1
Finalizing audio_play0
Mark Input dependent function audio_play0
Finalizing holmes
Mark Input dependent function holmes
Finalizing holmes22
Mark Input dependent function holmes22
Finalizing holmes21
Mark Input dependent function holmes21
Finalizing holmes20
Mark Input dependent function holmes20
Finalizing holmes19
Mark Input dependent function holmes19
Finalizing holmes18
Mark Input dependent function holmes18
Finalizing jsru_save
Mark Input dependent function jsru_save
Finalizing jsru_save0
Mark Input dependent function jsru_save0
Finalizing jsru_amp
Mark Input dependent function jsru_amp
Finalizing jsru_freq
Mark Input dependent function jsru_freq
Finalizing holmes17
Mark Input dependent function holmes17
Finalizing parwave
Mark Input dependent function parwave
Finalizing parwave18
Mark Input dependent function parwave18
Finalizing parwave17
Mark Input dependent function parwave17
Finalizing clip
Mark Input dependent function clip
Finalizing clip1
Mark Input dependent function clip1
Finalizing clip0
Mark Input dependent function clip0
Finalizing overload_warning
Mark Input dependent function overload_warning
Finalizing overload_warning0
Mark Input dependent function overload_warning0
Finalizing dBconvert
Mark Input dependent function dBconvert
Finalizing parwave16
Mark Input dependent function parwave16
Finalizing parwave15
Mark Input dependent function parwave15
Finalizing parwave14
Mark Input dependent function parwave14
Finalizing parwave13
Mark Input dependent function parwave13
Finalizing parwave12
Mark Input dependent function parwave12
Finalizing parwave11
Mark Input dependent function parwave11
Finalizing parwave10
Mark Input dependent function parwave10
Finalizing parwave9
Mark Input dependent function parwave9
Finalizing parwave8
Mark Input dependent function parwave8
Finalizing antiresonator
Mark Input dependent function antiresonator
Finalizing parwave7
Mark Input dependent function parwave7
Finalizing parwave6
Mark Input dependent function parwave6
Finalizing parwave5
Mark Input dependent function parwave5
Finalizing pitch_synch_par_reset
Mark Input dependent function pitch_synch_par_reset
Finalizing pitch_synch_par_reset8
Mark Input dependent function pitch_synch_par_reset8
Finalizing pitch_synch_par_reset7
Mark Input dependent function pitch_synch_par_reset7
Finalizing pitch_synch_par_reset6
Mark Input dependent function pitch_synch_par_reset6
Finalizing pitch_synch_par_reset5
Mark Input dependent function pitch_synch_par_reset5
Finalizing pitch_synch_par_reset4
Mark Input dependent function pitch_synch_par_reset4
Finalizing pitch_synch_par_reset3
Mark Input dependent function pitch_synch_par_reset3
Finalizing pitch_synch_par_reset2
Mark Input dependent function pitch_synch_par_reset2
Finalizing pitch_synch_par_reset1
Mark Input dependent function pitch_synch_par_reset1
Finalizing pitch_synch_par_reset0
Mark Input dependent function pitch_synch_par_reset0
Finalizing parwave4
Mark Input dependent function parwave4
Finalizing natural_source
Mark Input dependent function natural_source
Finalizing natural_source1
Mark Input dependent function natural_source1
Finalizing natural_source0
Mark Input dependent function natural_source0
Finalizing parwave3
Mark Input dependent function parwave3
Finalizing impulsive_source
Mark Input dependent function impulsive_source
Finalizing resonator
Mark Input dependent function resonator
Finalizing impulsive_source0
Mark Input dependent function impulsive_source0
Finalizing parwave2
Mark Input dependent function parwave2
Finalizing parwave1
Mark Input dependent function parwave1
Finalizing parwave0
Mark Input dependent function parwave0
Finalizing flutter
Mark Input dependent function flutter
Finalizing flutter0
Mark Input dependent function flutter0
Finalizing frame_init
Mark Input dependent function frame_init
Finalizing frame_init4
Mark Input dependent function frame_init4
Finalizing setabcg
Mark Input dependent function setabcg
Finalizing setabcg0
Mark Input dependent function setabcg0
Finalizing setzeroabc
Mark Input dependent function setzeroabc
Finalizing setzeroabc0
Mark Input dependent function setzeroabc0
Finalizing frame_init3
Mark Input dependent function frame_init3
Finalizing frame_init2
Mark Input dependent function frame_init2
Finalizing frame_init1
Mark Input dependent function frame_init1
Finalizing frame_init0
Mark Input dependent function frame_init0
Finalizing DBtoLIN
Mark Input dependent function DBtoLIN
Finalizing DBtoLIN0
Mark Input dependent function DBtoLIN0
Finalizing filter
Mark Input dependent function filter
Finalizing interpolate
Mark Input dependent function interpolate
Finalizing interpolate3
Mark Input dependent function interpolate3
Finalizing interpolate2
Mark Input dependent function interpolate2
Finalizing interpolate1
Mark Input dependent function interpolate1
Finalizing interpolate0
Mark Input dependent function interpolate0
Finalizing linear
Mark Input dependent function linear
Finalizing linear2
Mark Input dependent function linear2
Finalizing linear1
Mark Input dependent function linear1
Finalizing linear0
Mark Input dependent function linear0
Finalizing holmes16
Mark Input dependent function holmes16
Finalizing holmes15
Mark Input dependent function holmes15
Finalizing holmes14
Mark Input dependent function holmes14
Finalizing holmes13
Mark Input dependent function holmes13
Finalizing holmes12
Mark Input dependent function holmes12
Finalizing holmes11
Mark Input dependent function holmes11
Finalizing holmes10
Mark Input dependent function holmes10
Finalizing holmes9
Mark Input dependent function holmes9
Finalizing holmes8
Mark Input dependent function holmes8
Finalizing holmes7
Mark Input dependent function holmes7
Finalizing holmes6
Mark Input dependent function holmes6
Finalizing holmes5
Mark Input dependent function holmes5
Finalizing holmes4
Mark Input dependent function holmes4
Finalizing set_trans
Mark Input dependent function set_trans
Finalizing set_trans1
Mark Input dependent function set_trans1
Finalizing set_trans0
Mark Input dependent function set_trans0
Finalizing holmes3
Mark Input dependent function holmes3
Finalizing holmes2
Mark Input dependent function holmes2
Finalizing parwave_init
Mark Input dependent function parwave_init
Finalizing parwave_init0
Mark Input dependent function parwave_init0
Finalizing setabc
Mark Input dependent function setabc
Finalizing setabc0
Mark Input dependent function setabc0
Finalizing holmes1
Mark Input dependent function holmes1
Finalizing holmes0
Mark Input dependent function holmes0
Finalizing say_phones0
Mark Input dependent function say_phones0
Finalizing phone_to_elm
Mark Input dependent function phone_to_elm
Finalizing phone_to_elm2
Mark Input dependent function phone_to_elm2
Finalizing phone_to_elm1
Mark Input dependent function phone_to_elm1
Finalizing trie_lookup
Mark Input dependent function trie_lookup
Finalizing trie_lookup3
Mark Input dependent function trie_lookup3
Finalizing trie_lookup2
Mark Input dependent function trie_lookup2
Finalizing trie_lookup1
Mark Input dependent function trie_lookup1
Finalizing trie_lookup0
Mark Input dependent function trie_lookup0
Finalizing enter_phonemes
Mark Input dependent function enter_phonemes
Finalizing enter
Mark Input dependent function enter
Finalizing enter2
Mark Input dependent function enter2
Finalizing trie_insert
Mark Input dependent function trie_insert
Finalizing trie_insert3
Mark Input dependent function trie_insert3
Finalizing trie_insert2
Mark Input dependent function trie_insert2
Finalizing trie_insert1
Mark Input dependent function trie_insert1
Finalizing trie_insert0
Mark Input dependent function trie_insert0
Finalizing enter1
Mark Input dependent function enter1
Finalizing enter0
Mark Input dependent function enter0
Finalizing find_elm
Mark Input dependent function find_elm
Finalizing find_elm1
Mark Input dependent function find_elm1
Finalizing find_elm0
Mark Input dependent function find_elm0
Finalizing phone_to_elm0
Mark Input dependent function phone_to_elm0
Finalizing darray_init
Mark Input dependent function darray_init
Finalizing darray_init0
Mark Input dependent function darray_init0
Finalizing darray_find
Mark Input dependent function darray_find
Finalizing darray_find1
Mark Input dependent function darray_find1
Finalizing darray_find0
Mark Input dependent function darray_find0
Finalizing xlate_string13
Mark Input dependent function xlate_string13
Finalizing xlate_string10
Mark Input dependent function xlate_string10
Finalizing xlate_cardinal8
Mark Input dependent function xlate_cardinal8
Finalizing xlate_cardinal7
Mark Input dependent function xlate_cardinal7
Finalizing xlate_cardinal5
Mark Input dependent function xlate_cardinal5
Finalizing xlate_cardinal3
Mark Input dependent function xlate_cardinal3
Finalizing xlate_cardinal1
Mark Input dependent function xlate_cardinal1
Finalizing xlate_string8
Mark Input dependent function xlate_string8
Finalizing xlate_string7
Mark Input dependent function xlate_string7
Finalizing xlate_string6
Mark Input dependent function xlate_string6
Finalizing xlate_string4
Mark Input dependent function xlate_string4
Finalizing xlate_word12
Mark Input dependent function xlate_word12
Finalizing xlate_word11
Mark Input dependent function xlate_word11
Finalizing xlate_word10
Mark Input dependent function xlate_word10
Finalizing xlate_word9
Mark Input dependent function xlate_word9
Finalizing NRL
Mark Input dependent function NRL
Finalizing guess_word
Mark Input dependent function guess_word
Finalizing guess_word1
Mark Input dependent function guess_word1
Finalizing find_rule
Mark Input dependent function find_rule
Finalizing find_rule3
Mark Input dependent function find_rule3
Finalizing rightmatch
Mark Input dependent function rightmatch
Finalizing rightmatch13
Mark Input dependent function rightmatch13
Finalizing rightmatch12
Mark Input dependent function rightmatch12
Finalizing rightmatch11
Mark Input dependent function rightmatch11
Finalizing rightmatch10
Mark Input dependent function rightmatch10
Finalizing rightmatch9
Mark Input dependent function rightmatch9
Finalizing rightmatch8
Mark Input dependent function rightmatch8
Finalizing rightmatch7
Mark Input dependent function rightmatch7
Finalizing rightmatch6
Mark Input dependent function rightmatch6
Finalizing rightmatch5
Mark Input dependent function rightmatch5
Finalizing rightmatch4
Mark Input dependent function rightmatch4
Finalizing rightmatch3
Mark Input dependent function rightmatch3
Finalizing rightmatch2
Mark Input dependent function rightmatch2
Finalizing rightmatch1
Mark Input dependent function rightmatch1
Finalizing rightmatch0
Mark Input dependent function rightmatch0
Finalizing leftmatch
Mark Input dependent function leftmatch
Finalizing leftmatch9
Mark Input dependent function leftmatch9
Finalizing leftmatch8
Mark Input dependent function leftmatch8
Finalizing leftmatch7
Mark Input dependent function leftmatch7
Finalizing leftmatch6
Mark Input dependent function leftmatch6
Finalizing leftmatch5
Mark Input dependent function leftmatch5
Finalizing leftmatch4
Mark Input dependent function leftmatch4
Finalizing isconsonant
Mark Input dependent function isconsonant
Finalizing leftmatch3
Mark Input dependent function leftmatch3
Finalizing leftmatch2
Mark Input dependent function leftmatch2
Finalizing isvowel
Mark Input dependent function isvowel
Finalizing leftmatch1
Mark Input dependent function leftmatch1
Finalizing leftmatch0
Mark Input dependent function leftmatch0
Finalizing find_rule2
Mark Input dependent function find_rule2
Finalizing find_rule1
Mark Input dependent function find_rule1
Finalizing find_rule0
Mark Input dependent function find_rule0
Finalizing guess_word0
Mark Input dependent function guess_word0
Finalizing NRL3
Mark Input dependent function NRL3
Finalizing NRL2
Mark Input dependent function NRL2
Finalizing NRL1
Mark Input dependent function NRL1
Finalizing NRL0
Mark Input dependent function NRL0
Finalizing xlate_word8
Mark Input dependent function xlate_word8
Finalizing xlate_word6
Mark Input dependent function xlate_word6
Finalizing xlate_word4
Mark Input dependent function xlate_word4
Finalizing xlate_word3
Mark Input dependent function xlate_word3
Finalizing xlate_word2
Mark Input dependent function xlate_word2
Finalizing phone_append
Mark Input dependent function phone_append
Finalizing darray_find.446
Mark Input dependent function darray_find.446
Finalizing darray_find.4461
Mark Input dependent function darray_find.4461
Finalizing Darray_find
Mark Input dependent function Darray_find
Finalizing Darray_find4
Mark Input dependent function Darray_find4
Finalizing Darray_find3
Mark Input dependent function Darray_find3
Finalizing Darray_find2
Mark Input dependent function Darray_find2
Finalizing Darray_find1
Mark Input dependent function Darray_find1
Finalizing Darray_find0
Mark Input dependent function Darray_find0
Finalizing darray_find.4460
Mark Input dependent function darray_find.4460
Finalizing xlate_word1
Mark Input dependent function xlate_word1
Finalizing xlate_word0
Mark Input dependent function xlate_word0
Finalizing dict_find
Mark Input dependent function dict_find
Finalizing suspect_word
Mark Input dependent function suspect_word
Finalizing suspect_word2
Mark Input dependent function suspect_word2
Finalizing suspect_word1
Mark Input dependent function suspect_word1
Finalizing suspect_word0
Mark Input dependent function suspect_word0
Finalizing xlate_string2
Mark Input dependent function xlate_string2
Finalizing xlate_string1
Mark Input dependent function xlate_string1
Finalizing xlate_string0
Mark Input dependent function xlate_string0
Finalizing spell_out0
Mark Input dependent function spell_out0
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/say.x.bc/25/0
here!:xlate_ordinal2
here!:leftmatch6
here!:jsru_save
here!:rightmatch
here!:holmes9
here!:rightmatch12
here!:xlate_string0
here!:overload_warning0
here!:enter0
here!:getargs18
here!:parwave12
here!:rightmatch13
here!:parwave6
here!:xlate_string12
here!:darray_find.4461
here!:antiresonator
here!:darray_find0
here!:Darray_find
here!:main1
here!:parwave1
here!:getargs21
here!:concat_args4
here!:audio_open0
here!:parwave3
here!:natural_source
here!:rightmatch8
here!:init_synth1
here!:isvowel
here!:pitch_synch_par_reset5
here!:holmes15
here!:jsru_freq
here!:audio_init3
here!:pitch_synch_par_reset8
here!:holmes1
here!:getargs22
here!:xlate_ordinal
here!:Darray_find4
here!:wblong0
here!:darray_find.731
here!:audio_term
here!:init_holmes1
here!:darray_free1
here!:xlate_cardinal6
here!:say_file
here!:flutter
here!:parwave11
here!:find_elm
here!:parwave10
here!:xlate_cardinal5
here!:NRL3
here!:rightmatch5
here!:trie_lookup3
here!:audio_init1
here!:darray_find.73
here!:suspect_word0
here!:linear0
here!:darray_fget
here!:interpolate1
here!:leftmatch9
here!:xlate_word3
here!:holmes13
here!:spell_out0
here!:file_init1
here!:parwave_init0
here!:xlate_string13
here!:say_phones0
here!:set_trans1
here!:impulsive_source
here!:aufile_write3
here!:xlate_string18
here!:linear
here!:spell_out
here!:overload_warning
here!:show_parms
here!:xlate_string8
here!:parwave2
here!:set_trans
here!:NRL2
here!:xlate_ordinal9
here!:main3
here!:init_holmes0
here!:audio_term1
here!:say_string0
here!:getargs
here!:file_init2
here!:darray_free
here!:xlate_cardinal2
here!:setabc0
here!:xlate_cardinal3
here!:file_init5
here!:parwave_init
here!:parwave_init
got filter function names
Add filter function spell_out
FunctionInfo. Adding function:spell_out
did not find fprintf demangled to fprintf
did not find xlate_string demangled to xlate_string
did not find __ctype_b_loc demangled to __ctype_b_loc
did not find suspect_word demangled to suspect_word
did not find xlate_word demangled to xlate_word
did not find strchr demangled to strchr
did not find darray_find demangled to darray_find
did not find say_phones demangled to say_phones
did not find darray_init demangled to darray_init
did not find malloc demangled to malloc
did not find free demangled to free
did not find toupper demangled to toupper
did not find concat_args demangled to concat_args
did not find strlen demangled to strlen
did not find say_string demangled to say_string
Add filter function darray_fget
FunctionInfo. Adding function:darray_fget
did not find fgetc demangled to fgetc
Add filter function say_file
FunctionInfo. Adding function:say_file
did not find main demangled to main
did not find xlate_cardinal demangled to xlate_cardinal
Add filter function xlate_ordinal
FunctionInfo. Adding function:xlate_ordinal
Add filter function darray_free
FunctionInfo. Adding function:darray_free
Add filter function Darray_find
FunctionInfo. Adding function:Darray_find
did not find abort demangled to abort
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
did not find darray_delete demangled to darray_delete
Add filter function darray_find.73
FunctionInfo. Adding function:darray_find.73
Add filter function isvowel
FunctionInfo. Adding function:isvowel
did not find isconsonant demangled to isconsonant
did not find NRL demangled to NRL
did not find phone_cat demangled to phone_cat
did not find guess_word demangled to guess_word
did not find find_rule demangled to find_rule
did not find leftmatch demangled to leftmatch
Add filter function rightmatch
FunctionInfo. Adding function:rightmatch
did not find trie_insert demangled to trie_insert
did not find trie_lookup demangled to trie_lookup
did not find phone_append demangled to phone_append
did not find darray_find.446 demangled to darray_find.446
did not find phone_to_elm demangled to phone_to_elm
did not find enter_phonemes demangled to enter_phonemes
did not find enter demangled to enter
did not find llvm.va_start demangled to llvm.va_start
Add filter function find_elm
FunctionInfo. Adding function:find_elm
did not find llvm.va_end demangled to llvm.va_end
did not find strcmp demangled to strcmp
did not find holmes demangled to holmes
Add filter function set_trans
FunctionInfo. Adding function:set_trans
did not find interpolate demangled to interpolate
did not find filter demangled to filter
Add filter function jsru_save
FunctionInfo. Adding function:jsru_save
did not find log demangled to log
Add filter function jsru_freq
FunctionInfo. Adding function:jsru_freq
did not find fputc demangled to fputc
did not find jsru_amp demangled to jsru_amp
Add filter function linear
FunctionInfo. Adding function:linear
did not find init_holmes demangled to init_holmes
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find term_holmes demangled to term_holmes
did not find fclose demangled to fclose
Add filter function show_parms
FunctionInfo. Adding function:show_parms
did not find printf demangled to printf
did not find parwave demangled to parwave
did not find frame_init demangled to frame_init
Add filter function flutter
FunctionInfo. Adding function:flutter
Add filter function impulsive_source
FunctionInfo. Adding function:impulsive_source
Add filter function natural_source
FunctionInfo. Adding function:natural_source
did not find pitch_synch_par_reset demangled to pitch_synch_par_reset
did not find resonator demangled to resonator
Add filter function antiresonator
FunctionInfo. Adding function:antiresonator
did not find clip demangled to clip
Add filter function overload_warning
FunctionInfo. Adding function:overload_warning
did not find dBconvert demangled to dBconvert
did not find log10 demangled to log10
did not find DBtoLIN demangled to DBtoLIN
did not find setabc demangled to setabc
did not find exp demangled to exp
did not find cos demangled to cos
did not find sin demangled to sin
did not find setzeroabc demangled to setzeroabc
did not find setabcg demangled to setabcg
Add filter function parwave_init
FunctionInfo. Adding function:parwave_init
did not find init_synth demangled to init_synth
did not find au_header demangled to au_header
did not find wblong demangled to wblong
did not find write demangled to write
did not find file_init demangled to file_init
did not find open demangled to open
did not find aufile_write demangled to aufile_write
did not find aufile_term demangled to aufile_term
did not find lseek demangled to lseek
did not find ftruncate demangled to ftruncate
did not find close demangled to close
did not find dict_find demangled to dict_find
did not find dict_init demangled to dict_init
did not find dict_term demangled to dict_term
Add filter function getargs
FunctionInfo. Adding function:getargs
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find audio_init demangled to audio_init
did not find audio_open demangled to audio_open
did not find ioctl demangled to ioctl
Add filter function audio_term
FunctionInfo. Adding function:audio_term
did not find audio_play demangled to audio_play
did not find exit demangled to exit
Add filter function spell_out0
FunctionInfo. Adding function:spell_out0
did not find spell_out1 demangled to spell_out1
Add filter function xlate_string0
FunctionInfo. Adding function:xlate_string0
did not find xlate_string1 demangled to xlate_string1
did not find xlate_string2 demangled to xlate_string2
did not find xlate_string3 demangled to xlate_string3
did not find xlate_string4 demangled to xlate_string4
did not find xlate_string5 demangled to xlate_string5
did not find xlate_string6 demangled to xlate_string6
did not find xlate_string7 demangled to xlate_string7
Add filter function xlate_string8
FunctionInfo. Adding function:xlate_string8
did not find xlate_string9 demangled to xlate_string9
did not find xlate_string10 demangled to xlate_string10
did not find xlate_string11 demangled to xlate_string11
Add filter function xlate_string12
FunctionInfo. Adding function:xlate_string12
Add filter function xlate_string13
FunctionInfo. Adding function:xlate_string13
did not find xlate_string14 demangled to xlate_string14
did not find xlate_string15 demangled to xlate_string15
did not find xlate_string16 demangled to xlate_string16
did not find xlate_string17 demangled to xlate_string17
Add filter function xlate_string18
FunctionInfo. Adding function:xlate_string18
did not find xlate_string19 demangled to xlate_string19
did not find xlate_string20 demangled to xlate_string20
did not find xlate_string21 demangled to xlate_string21
did not find xlate_string22 demangled to xlate_string22
Add filter function suspect_word0
FunctionInfo. Adding function:suspect_word0
did not find suspect_word1 demangled to suspect_word1
did not find suspect_word2 demangled to suspect_word2
did not find xlate_word0 demangled to xlate_word0
did not find xlate_word1 demangled to xlate_word1
did not find xlate_word2 demangled to xlate_word2
Add filter function xlate_word3
FunctionInfo. Adding function:xlate_word3
did not find xlate_word4 demangled to xlate_word4
did not find xlate_word5 demangled to xlate_word5
did not find xlate_word6 demangled to xlate_word6
did not find xlate_word7 demangled to xlate_word7
did not find xlate_word8 demangled to xlate_word8
did not find xlate_word9 demangled to xlate_word9
did not find xlate_word10 demangled to xlate_word10
did not find xlate_word11 demangled to xlate_word11
did not find xlate_word12 demangled to xlate_word12
Add filter function darray_find0
FunctionInfo. Adding function:darray_find0
did not find darray_find1 demangled to darray_find1
Add filter function say_phones0
FunctionInfo. Adding function:say_phones0
did not find say_phones1 demangled to say_phones1
did not find say_phones2 demangled to say_phones2
did not find darray_init0 demangled to darray_init0
did not find concat_args0 demangled to concat_args0
did not find concat_args1 demangled to concat_args1
did not find concat_args2 demangled to concat_args2
did not find concat_args3 demangled to concat_args3
Add filter function concat_args4
FunctionInfo. Adding function:concat_args4
did not find concat_args5 demangled to concat_args5
did not find concat_args6 demangled to concat_args6
Add filter function say_string0
FunctionInfo. Adding function:say_string0
did not find say_file0 demangled to say_file0
did not find say_file1 demangled to say_file1
did not find main0 demangled to main0
Add filter function main1
FunctionInfo. Adding function:main1
did not find main2 demangled to main2
Add filter function main3
FunctionInfo. Adding function:main3
did not find xlate_cardinal0 demangled to xlate_cardinal0
did not find xlate_cardinal1 demangled to xlate_cardinal1
Add filter function xlate_cardinal2
FunctionInfo. Adding function:xlate_cardinal2
Add filter function xlate_cardinal3
FunctionInfo. Adding function:xlate_cardinal3
did not find xlate_cardinal4 demangled to xlate_cardinal4
Add filter function xlate_cardinal5
FunctionInfo. Adding function:xlate_cardinal5
Add filter function xlate_cardinal6
FunctionInfo. Adding function:xlate_cardinal6
did not find xlate_cardinal7 demangled to xlate_cardinal7
did not find xlate_cardinal8 demangled to xlate_cardinal8
did not find xlate_cardinal9 demangled to xlate_cardinal9
did not find xlate_ordinal0 demangled to xlate_ordinal0
did not find xlate_ordinal1 demangled to xlate_ordinal1
Add filter function xlate_ordinal2
FunctionInfo. Adding function:xlate_ordinal2
did not find xlate_ordinal3 demangled to xlate_ordinal3
did not find xlate_ordinal4 demangled to xlate_ordinal4
did not find xlate_ordinal5 demangled to xlate_ordinal5
did not find xlate_ordinal6 demangled to xlate_ordinal6
did not find xlate_ordinal7 demangled to xlate_ordinal7
did not find xlate_ordinal8 demangled to xlate_ordinal8
Add filter function xlate_ordinal9
FunctionInfo. Adding function:xlate_ordinal9
did not find xlate_ordinal10 demangled to xlate_ordinal10
did not find xlate_ordinal11 demangled to xlate_ordinal11
did not find darray_free0 demangled to darray_free0
Add filter function darray_free1
FunctionInfo. Adding function:darray_free1
did not find Darray_find0 demangled to Darray_find0
did not find Darray_find1 demangled to Darray_find1
did not find Darray_find2 demangled to Darray_find2
did not find Darray_find3 demangled to Darray_find3
Add filter function Darray_find4
FunctionInfo. Adding function:Darray_find4
did not find darray_delete0 demangled to darray_delete0
did not find darray_delete1 demangled to darray_delete1
did not find darray_find.730 demangled to darray_find.730
Add filter function darray_find.731
FunctionInfo. Adding function:darray_find.731
did not find NRL0 demangled to NRL0
did not find NRL1 demangled to NRL1
Add filter function NRL2
FunctionInfo. Adding function:NRL2
Add filter function NRL3
FunctionInfo. Adding function:NRL3
did not find phone_cat0 demangled to phone_cat0
did not find phone_cat1 demangled to phone_cat1
did not find guess_word0 demangled to guess_word0
did not find guess_word1 demangled to guess_word1
did not find find_rule0 demangled to find_rule0
did not find find_rule1 demangled to find_rule1
did not find find_rule2 demangled to find_rule2
did not find find_rule3 demangled to find_rule3
did not find leftmatch0 demangled to leftmatch0
did not find leftmatch1 demangled to leftmatch1
did not find leftmatch2 demangled to leftmatch2
did not find leftmatch3 demangled to leftmatch3
did not find leftmatch4 demangled to leftmatch4
did not find leftmatch5 demangled to leftmatch5
Add filter function leftmatch6
FunctionInfo. Adding function:leftmatch6
did not find leftmatch7 demangled to leftmatch7
did not find leftmatch8 demangled to leftmatch8
Add filter function leftmatch9
FunctionInfo. Adding function:leftmatch9
did not find rightmatch0 demangled to rightmatch0
did not find rightmatch1 demangled to rightmatch1
did not find rightmatch2 demangled to rightmatch2
did not find rightmatch3 demangled to rightmatch3
did not find rightmatch4 demangled to rightmatch4
Add filter function rightmatch5
FunctionInfo. Adding function:rightmatch5
did not find rightmatch6 demangled to rightmatch6
did not find rightmatch7 demangled to rightmatch7
Add filter function rightmatch8
FunctionInfo. Adding function:rightmatch8
did not find rightmatch9 demangled to rightmatch9
did not find rightmatch10 demangled to rightmatch10
did not find rightmatch11 demangled to rightmatch11
Add filter function rightmatch12
FunctionInfo. Adding function:rightmatch12
Add filter function rightmatch13
FunctionInfo. Adding function:rightmatch13
did not find trie_insert0 demangled to trie_insert0
did not find trie_insert1 demangled to trie_insert1
did not find trie_insert2 demangled to trie_insert2
did not find trie_insert3 demangled to trie_insert3
did not find trie_lookup0 demangled to trie_lookup0
did not find trie_lookup1 demangled to trie_lookup1
did not find trie_lookup2 demangled to trie_lookup2
Add filter function trie_lookup3
FunctionInfo. Adding function:trie_lookup3
did not find darray_find.4460 demangled to darray_find.4460
Add filter function darray_find.4461
FunctionInfo. Adding function:darray_find.4461
did not find phone_to_elm0 demangled to phone_to_elm0
did not find phone_to_elm1 demangled to phone_to_elm1
did not find phone_to_elm2 demangled to phone_to_elm2
Add filter function enter0
FunctionInfo. Adding function:enter0
did not find enter1 demangled to enter1
did not find enter2 demangled to enter2
did not find find_elm0 demangled to find_elm0
did not find find_elm1 demangled to find_elm1
did not find holmes0 demangled to holmes0
Add filter function holmes1
FunctionInfo. Adding function:holmes1
did not find holmes2 demangled to holmes2
did not find holmes3 demangled to holmes3
did not find holmes4 demangled to holmes4
did not find holmes5 demangled to holmes5
did not find holmes6 demangled to holmes6
did not find holmes7 demangled to holmes7
did not find holmes8 demangled to holmes8
Add filter function holmes9
FunctionInfo. Adding function:holmes9
did not find holmes10 demangled to holmes10
did not find holmes11 demangled to holmes11
did not find holmes12 demangled to holmes12
Add filter function holmes13
FunctionInfo. Adding function:holmes13
did not find holmes14 demangled to holmes14
Add filter function holmes15
FunctionInfo. Adding function:holmes15
did not find holmes16 demangled to holmes16
did not find holmes17 demangled to holmes17
did not find holmes18 demangled to holmes18
did not find holmes19 demangled to holmes19
did not find holmes20 demangled to holmes20
did not find holmes21 demangled to holmes21
did not find holmes22 demangled to holmes22
did not find set_trans0 demangled to set_trans0
Add filter function set_trans1
FunctionInfo. Adding function:set_trans1
did not find interpolate0 demangled to interpolate0
Add filter function interpolate1
FunctionInfo. Adding function:interpolate1
did not find interpolate2 demangled to interpolate2
did not find interpolate3 demangled to interpolate3
did not find jsru_save0 demangled to jsru_save0
Add filter function linear0
FunctionInfo. Adding function:linear0
did not find linear1 demangled to linear1
did not find linear2 demangled to linear2
Add filter function init_holmes0
FunctionInfo. Adding function:init_holmes0
Add filter function init_holmes1
FunctionInfo. Adding function:init_holmes1
did not find init_holmes2 demangled to init_holmes2
did not find init_holmes3 demangled to init_holmes3
did not find term_holmes0 demangled to term_holmes0
did not find term_holmes1 demangled to term_holmes1
did not find show_parms0 demangled to show_parms0
did not find show_parms1 demangled to show_parms1
did not find parwave0 demangled to parwave0
Add filter function parwave1
FunctionInfo. Adding function:parwave1
Add filter function parwave2
FunctionInfo. Adding function:parwave2
Add filter function parwave3
FunctionInfo. Adding function:parwave3
did not find parwave4 demangled to parwave4
did not find parwave5 demangled to parwave5
Add filter function parwave6
FunctionInfo. Adding function:parwave6
did not find parwave7 demangled to parwave7
did not find parwave8 demangled to parwave8
did not find parwave9 demangled to parwave9
Add filter function parwave10
FunctionInfo. Adding function:parwave10
Add filter function parwave11
FunctionInfo. Adding function:parwave11
Add filter function parwave12
FunctionInfo. Adding function:parwave12
did not find parwave13 demangled to parwave13
did not find parwave14 demangled to parwave14
did not find parwave15 demangled to parwave15
did not find parwave16 demangled to parwave16
did not find parwave17 demangled to parwave17
did not find parwave18 demangled to parwave18
did not find frame_init0 demangled to frame_init0
did not find frame_init1 demangled to frame_init1
did not find frame_init2 demangled to frame_init2
did not find frame_init3 demangled to frame_init3
did not find frame_init4 demangled to frame_init4
did not find flutter0 demangled to flutter0
did not find impulsive_source0 demangled to impulsive_source0
did not find natural_source0 demangled to natural_source0
did not find natural_source1 demangled to natural_source1
did not find pitch_synch_par_reset0 demangled to pitch_synch_par_reset0
did not find pitch_synch_par_reset1 demangled to pitch_synch_par_reset1
did not find pitch_synch_par_reset2 demangled to pitch_synch_par_reset2
did not find pitch_synch_par_reset3 demangled to pitch_synch_par_reset3
did not find pitch_synch_par_reset4 demangled to pitch_synch_par_reset4
Add filter function pitch_synch_par_reset5
FunctionInfo. Adding function:pitch_synch_par_reset5
did not find pitch_synch_par_reset6 demangled to pitch_synch_par_reset6
did not find pitch_synch_par_reset7 demangled to pitch_synch_par_reset7
Add filter function pitch_synch_par_reset8
FunctionInfo. Adding function:pitch_synch_par_reset8
did not find clip0 demangled to clip0
did not find clip1 demangled to clip1
Add filter function overload_warning0
FunctionInfo. Adding function:overload_warning0
did not find DBtoLIN0 demangled to DBtoLIN0
Add filter function setabc0
FunctionInfo. Adding function:setabc0
did not find setzeroabc0 demangled to setzeroabc0
did not find setabcg0 demangled to setabcg0
Add filter function parwave_init0
FunctionInfo. Adding function:parwave_init0
did not find init_synth0 demangled to init_synth0
Add filter function init_synth1
FunctionInfo. Adding function:init_synth1
did not find au_header0 demangled to au_header0
Add filter function wblong0
FunctionInfo. Adding function:wblong0
did not find file_init0 demangled to file_init0
Add filter function file_init1
FunctionInfo. Adding function:file_init1
Add filter function file_init2
FunctionInfo. Adding function:file_init2
did not find file_init3 demangled to file_init3
did not find file_init4 demangled to file_init4
Add filter function file_init5
FunctionInfo. Adding function:file_init5
did not find aufile_write0 demangled to aufile_write0
did not find aufile_write1 demangled to aufile_write1
did not find aufile_write2 demangled to aufile_write2
Add filter function aufile_write3
FunctionInfo. Adding function:aufile_write3
did not find aufile_write4 demangled to aufile_write4
did not find aufile_write5 demangled to aufile_write5
did not find aufile_write6 demangled to aufile_write6
did not find aufile_term0 demangled to aufile_term0
did not find aufile_term1 demangled to aufile_term1
did not find aufile_term2 demangled to aufile_term2
did not find getargs0 demangled to getargs0
did not find getargs1 demangled to getargs1
did not find getargs2 demangled to getargs2
did not find getargs3 demangled to getargs3
did not find getargs4 demangled to getargs4
did not find getargs5 demangled to getargs5
did not find getargs6 demangled to getargs6
did not find getargs7 demangled to getargs7
did not find getargs8 demangled to getargs8
did not find getargs9 demangled to getargs9
did not find getargs10 demangled to getargs10
did not find getargs11 demangled to getargs11
did not find getargs12 demangled to getargs12
did not find getargs13 demangled to getargs13
did not find getargs14 demangled to getargs14
did not find getargs15 demangled to getargs15
did not find getargs16 demangled to getargs16
did not find getargs17 demangled to getargs17
Add filter function getargs18
FunctionInfo. Adding function:getargs18
did not find getargs19 demangled to getargs19
did not find getargs20 demangled to getargs20
Add filter function getargs21
FunctionInfo. Adding function:getargs21
Add filter function getargs22
FunctionInfo. Adding function:getargs22
did not find getargs23 demangled to getargs23
did not find audio_init0 demangled to audio_init0
Add filter function audio_init1
FunctionInfo. Adding function:audio_init1
did not find audio_init2 demangled to audio_init2
Add filter function audio_init3
FunctionInfo. Adding function:audio_init3
Add filter function audio_open0
FunctionInfo. Adding function:audio_open0
did not find audio_term0 demangled to audio_term0
Add filter function audio_term1
FunctionInfo. Adding function:audio_term1
did not find audio_play0 demangled to audio_play0
did not find audio_play1 demangled to audio_play1
did not find audio_play2 demangled to audio_play2
did not find audio_play3 demangled to audio_play3
Adding spell_out other functions, ExtractedOnly mode uses other functions
Adding xlate_string other functions, ExtractedOnly mode uses other functions
Adding suspect_word other functions, ExtractedOnly mode uses other functions
Adding xlate_word other functions, ExtractedOnly mode uses other functions
Adding darray_find other functions, ExtractedOnly mode uses other functions
Adding say_phones other functions, ExtractedOnly mode uses other functions
Adding darray_init other functions, ExtractedOnly mode uses other functions
Adding concat_args other functions, ExtractedOnly mode uses other functions
Adding say_string other functions, ExtractedOnly mode uses other functions
Adding darray_fget other functions, ExtractedOnly mode uses other functions
Adding say_file other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal other functions, ExtractedOnly mode uses other functions
Adding darray_free other functions, ExtractedOnly mode uses other functions
Adding Darray_find other functions, ExtractedOnly mode uses other functions
Adding darray_delete other functions, ExtractedOnly mode uses other functions
Adding darray_find.73 other functions, ExtractedOnly mode uses other functions
Adding isvowel other functions, ExtractedOnly mode uses other functions
Adding isconsonant other functions, ExtractedOnly mode uses other functions
Adding NRL other functions, ExtractedOnly mode uses other functions
Adding phone_cat other functions, ExtractedOnly mode uses other functions
Adding guess_word other functions, ExtractedOnly mode uses other functions
Adding find_rule other functions, ExtractedOnly mode uses other functions
Adding leftmatch other functions, ExtractedOnly mode uses other functions
Adding rightmatch other functions, ExtractedOnly mode uses other functions
Adding trie_insert other functions, ExtractedOnly mode uses other functions
Adding trie_lookup other functions, ExtractedOnly mode uses other functions
Adding phone_append other functions, ExtractedOnly mode uses other functions
Adding darray_find.446 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm other functions, ExtractedOnly mode uses other functions
Adding enter_phonemes other functions, ExtractedOnly mode uses other functions
Adding enter other functions, ExtractedOnly mode uses other functions
Adding find_elm other functions, ExtractedOnly mode uses other functions
Adding holmes other functions, ExtractedOnly mode uses other functions
Adding set_trans other functions, ExtractedOnly mode uses other functions
Adding interpolate other functions, ExtractedOnly mode uses other functions
Adding filter other functions, ExtractedOnly mode uses other functions
Adding jsru_save other functions, ExtractedOnly mode uses other functions
Adding jsru_freq other functions, ExtractedOnly mode uses other functions
Adding jsru_amp other functions, ExtractedOnly mode uses other functions
Adding linear other functions, ExtractedOnly mode uses other functions
Adding init_holmes other functions, ExtractedOnly mode uses other functions
Adding term_holmes other functions, ExtractedOnly mode uses other functions
Adding show_parms other functions, ExtractedOnly mode uses other functions
Adding parwave other functions, ExtractedOnly mode uses other functions
Adding frame_init other functions, ExtractedOnly mode uses other functions
Adding flutter other functions, ExtractedOnly mode uses other functions
Adding impulsive_source other functions, ExtractedOnly mode uses other functions
Adding natural_source other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset other functions, ExtractedOnly mode uses other functions
Adding resonator other functions, ExtractedOnly mode uses other functions
Adding antiresonator other functions, ExtractedOnly mode uses other functions
Adding clip other functions, ExtractedOnly mode uses other functions
Adding overload_warning other functions, ExtractedOnly mode uses other functions
Adding dBconvert other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN other functions, ExtractedOnly mode uses other functions
Adding setabc other functions, ExtractedOnly mode uses other functions
Adding setzeroabc other functions, ExtractedOnly mode uses other functions
Adding setabcg other functions, ExtractedOnly mode uses other functions
Adding parwave_init other functions, ExtractedOnly mode uses other functions
Adding init_synth other functions, ExtractedOnly mode uses other functions
Adding au_header other functions, ExtractedOnly mode uses other functions
Adding wblong other functions, ExtractedOnly mode uses other functions
Adding file_init other functions, ExtractedOnly mode uses other functions
Adding aufile_write other functions, ExtractedOnly mode uses other functions
Adding aufile_term other functions, ExtractedOnly mode uses other functions
Adding dict_find other functions, ExtractedOnly mode uses other functions
Adding dict_init other functions, ExtractedOnly mode uses other functions
Adding dict_term other functions, ExtractedOnly mode uses other functions
Adding getargs other functions, ExtractedOnly mode uses other functions
Adding audio_init other functions, ExtractedOnly mode uses other functions
Adding audio_open other functions, ExtractedOnly mode uses other functions
Adding audio_term other functions, ExtractedOnly mode uses other functions
Adding audio_play other functions, ExtractedOnly mode uses other functions
Adding spell_out0 other functions, ExtractedOnly mode uses other functions
Adding spell_out1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string0 other functions, ExtractedOnly mode uses other functions
Adding xlate_string1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string2 other functions, ExtractedOnly mode uses other functions
Adding xlate_string3 other functions, ExtractedOnly mode uses other functions
Adding xlate_string4 other functions, ExtractedOnly mode uses other functions
Adding xlate_string5 other functions, ExtractedOnly mode uses other functions
Adding xlate_string6 other functions, ExtractedOnly mode uses other functions
Adding xlate_string7 other functions, ExtractedOnly mode uses other functions
Adding xlate_string8 other functions, ExtractedOnly mode uses other functions
Adding xlate_string9 other functions, ExtractedOnly mode uses other functions
Adding xlate_string10 other functions, ExtractedOnly mode uses other functions
Adding xlate_string11 other functions, ExtractedOnly mode uses other functions
Adding xlate_string12 other functions, ExtractedOnly mode uses other functions
Adding xlate_string13 other functions, ExtractedOnly mode uses other functions
Adding xlate_string14 other functions, ExtractedOnly mode uses other functions
Adding xlate_string15 other functions, ExtractedOnly mode uses other functions
Adding xlate_string16 other functions, ExtractedOnly mode uses other functions
Adding xlate_string17 other functions, ExtractedOnly mode uses other functions
Adding xlate_string18 other functions, ExtractedOnly mode uses other functions
Adding xlate_string19 other functions, ExtractedOnly mode uses other functions
Adding xlate_string20 other functions, ExtractedOnly mode uses other functions
Adding xlate_string21 other functions, ExtractedOnly mode uses other functions
Adding xlate_string22 other functions, ExtractedOnly mode uses other functions
Adding suspect_word0 other functions, ExtractedOnly mode uses other functions
Adding suspect_word1 other functions, ExtractedOnly mode uses other functions
Adding suspect_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word0 other functions, ExtractedOnly mode uses other functions
Adding xlate_word1 other functions, ExtractedOnly mode uses other functions
Adding xlate_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word3 other functions, ExtractedOnly mode uses other functions
Adding xlate_word4 other functions, ExtractedOnly mode uses other functions
Adding xlate_word5 other functions, ExtractedOnly mode uses other functions
Adding xlate_word6 other functions, ExtractedOnly mode uses other functions
Adding xlate_word7 other functions, ExtractedOnly mode uses other functions
Adding xlate_word8 other functions, ExtractedOnly mode uses other functions
Adding xlate_word9 other functions, ExtractedOnly mode uses other functions
Adding xlate_word10 other functions, ExtractedOnly mode uses other functions
Adding xlate_word11 other functions, ExtractedOnly mode uses other functions
Adding xlate_word12 other functions, ExtractedOnly mode uses other functions
Adding darray_find0 other functions, ExtractedOnly mode uses other functions
Adding darray_find1 other functions, ExtractedOnly mode uses other functions
Adding say_phones0 other functions, ExtractedOnly mode uses other functions
Adding say_phones1 other functions, ExtractedOnly mode uses other functions
Adding say_phones2 other functions, ExtractedOnly mode uses other functions
Adding darray_init0 other functions, ExtractedOnly mode uses other functions
Adding concat_args0 other functions, ExtractedOnly mode uses other functions
Adding concat_args1 other functions, ExtractedOnly mode uses other functions
Adding concat_args2 other functions, ExtractedOnly mode uses other functions
Adding concat_args3 other functions, ExtractedOnly mode uses other functions
Adding concat_args4 other functions, ExtractedOnly mode uses other functions
Adding concat_args5 other functions, ExtractedOnly mode uses other functions
Adding concat_args6 other functions, ExtractedOnly mode uses other functions
Adding say_string0 other functions, ExtractedOnly mode uses other functions
Adding say_file0 other functions, ExtractedOnly mode uses other functions
Adding say_file1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal10 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal11 other functions, ExtractedOnly mode uses other functions
Adding darray_free0 other functions, ExtractedOnly mode uses other functions
Adding darray_free1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find0 other functions, ExtractedOnly mode uses other functions
Adding Darray_find1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find2 other functions, ExtractedOnly mode uses other functions
Adding Darray_find3 other functions, ExtractedOnly mode uses other functions
Adding Darray_find4 other functions, ExtractedOnly mode uses other functions
Adding darray_delete0 other functions, ExtractedOnly mode uses other functions
Adding darray_delete1 other functions, ExtractedOnly mode uses other functions
Adding darray_find.730 other functions, ExtractedOnly mode uses other functions
Adding darray_find.731 other functions, ExtractedOnly mode uses other functions
Adding NRL0 other functions, ExtractedOnly mode uses other functions
Adding NRL1 other functions, ExtractedOnly mode uses other functions
Adding NRL2 other functions, ExtractedOnly mode uses other functions
Adding NRL3 other functions, ExtractedOnly mode uses other functions
Adding phone_cat0 other functions, ExtractedOnly mode uses other functions
Adding phone_cat1 other functions, ExtractedOnly mode uses other functions
Adding guess_word0 other functions, ExtractedOnly mode uses other functions
Adding guess_word1 other functions, ExtractedOnly mode uses other functions
Adding find_rule0 other functions, ExtractedOnly mode uses other functions
Adding find_rule1 other functions, ExtractedOnly mode uses other functions
Adding find_rule2 other functions, ExtractedOnly mode uses other functions
Adding find_rule3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch0 other functions, ExtractedOnly mode uses other functions
Adding leftmatch1 other functions, ExtractedOnly mode uses other functions
Adding leftmatch2 other functions, ExtractedOnly mode uses other functions
Adding leftmatch3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch4 other functions, ExtractedOnly mode uses other functions
Adding leftmatch5 other functions, ExtractedOnly mode uses other functions
Adding leftmatch6 other functions, ExtractedOnly mode uses other functions
Adding leftmatch7 other functions, ExtractedOnly mode uses other functions
Adding leftmatch8 other functions, ExtractedOnly mode uses other functions
Adding leftmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch0 other functions, ExtractedOnly mode uses other functions
Adding rightmatch1 other functions, ExtractedOnly mode uses other functions
Adding rightmatch2 other functions, ExtractedOnly mode uses other functions
Adding rightmatch3 other functions, ExtractedOnly mode uses other functions
Adding rightmatch4 other functions, ExtractedOnly mode uses other functions
Adding rightmatch5 other functions, ExtractedOnly mode uses other functions
Adding rightmatch6 other functions, ExtractedOnly mode uses other functions
Adding rightmatch7 other functions, ExtractedOnly mode uses other functions
Adding rightmatch8 other functions, ExtractedOnly mode uses other functions
Adding rightmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch10 other functions, ExtractedOnly mode uses other functions
Adding rightmatch11 other functions, ExtractedOnly mode uses other functions
Adding rightmatch12 other functions, ExtractedOnly mode uses other functions
Adding rightmatch13 other functions, ExtractedOnly mode uses other functions
Adding trie_insert0 other functions, ExtractedOnly mode uses other functions
Adding trie_insert1 other functions, ExtractedOnly mode uses other functions
Adding trie_insert2 other functions, ExtractedOnly mode uses other functions
Adding trie_insert3 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup0 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup1 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup2 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup3 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4460 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4461 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm0 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm1 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm2 other functions, ExtractedOnly mode uses other functions
Adding enter0 other functions, ExtractedOnly mode uses other functions
Adding enter1 other functions, ExtractedOnly mode uses other functions
Adding enter2 other functions, ExtractedOnly mode uses other functions
Adding find_elm0 other functions, ExtractedOnly mode uses other functions
Adding find_elm1 other functions, ExtractedOnly mode uses other functions
Adding holmes0 other functions, ExtractedOnly mode uses other functions
Adding holmes1 other functions, ExtractedOnly mode uses other functions
Adding holmes2 other functions, ExtractedOnly mode uses other functions
Adding holmes3 other functions, ExtractedOnly mode uses other functions
Adding holmes4 other functions, ExtractedOnly mode uses other functions
Adding holmes5 other functions, ExtractedOnly mode uses other functions
Adding holmes6 other functions, ExtractedOnly mode uses other functions
Adding holmes7 other functions, ExtractedOnly mode uses other functions
Adding holmes8 other functions, ExtractedOnly mode uses other functions
Adding holmes9 other functions, ExtractedOnly mode uses other functions
Adding holmes10 other functions, ExtractedOnly mode uses other functions
Adding holmes11 other functions, ExtractedOnly mode uses other functions
Adding holmes12 other functions, ExtractedOnly mode uses other functions
Adding holmes13 other functions, ExtractedOnly mode uses other functions
Adding holmes14 other functions, ExtractedOnly mode uses other functions
Adding holmes15 other functions, ExtractedOnly mode uses other functions
Adding holmes16 other functions, ExtractedOnly mode uses other functions
Adding holmes17 other functions, ExtractedOnly mode uses other functions
Adding holmes18 other functions, ExtractedOnly mode uses other functions
Adding holmes19 other functions, ExtractedOnly mode uses other functions
Adding holmes20 other functions, ExtractedOnly mode uses other functions
Adding holmes21 other functions, ExtractedOnly mode uses other functions
Adding holmes22 other functions, ExtractedOnly mode uses other functions
Adding set_trans0 other functions, ExtractedOnly mode uses other functions
Adding set_trans1 other functions, ExtractedOnly mode uses other functions
Adding interpolate0 other functions, ExtractedOnly mode uses other functions
Adding interpolate1 other functions, ExtractedOnly mode uses other functions
Adding interpolate2 other functions, ExtractedOnly mode uses other functions
Adding interpolate3 other functions, ExtractedOnly mode uses other functions
Adding jsru_save0 other functions, ExtractedOnly mode uses other functions
Adding linear0 other functions, ExtractedOnly mode uses other functions
Adding linear1 other functions, ExtractedOnly mode uses other functions
Adding linear2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes0 other functions, ExtractedOnly mode uses other functions
Adding init_holmes1 other functions, ExtractedOnly mode uses other functions
Adding init_holmes2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes3 other functions, ExtractedOnly mode uses other functions
Adding term_holmes0 other functions, ExtractedOnly mode uses other functions
Adding term_holmes1 other functions, ExtractedOnly mode uses other functions
Adding show_parms0 other functions, ExtractedOnly mode uses other functions
Adding show_parms1 other functions, ExtractedOnly mode uses other functions
Adding parwave0 other functions, ExtractedOnly mode uses other functions
Adding parwave1 other functions, ExtractedOnly mode uses other functions
Adding parwave2 other functions, ExtractedOnly mode uses other functions
Adding parwave3 other functions, ExtractedOnly mode uses other functions
Adding parwave4 other functions, ExtractedOnly mode uses other functions
Adding parwave5 other functions, ExtractedOnly mode uses other functions
Adding parwave6 other functions, ExtractedOnly mode uses other functions
Adding parwave7 other functions, ExtractedOnly mode uses other functions
Adding parwave8 other functions, ExtractedOnly mode uses other functions
Adding parwave9 other functions, ExtractedOnly mode uses other functions
Adding parwave10 other functions, ExtractedOnly mode uses other functions
Adding parwave11 other functions, ExtractedOnly mode uses other functions
Adding parwave12 other functions, ExtractedOnly mode uses other functions
Adding parwave13 other functions, ExtractedOnly mode uses other functions
Adding parwave14 other functions, ExtractedOnly mode uses other functions
Adding parwave15 other functions, ExtractedOnly mode uses other functions
Adding parwave16 other functions, ExtractedOnly mode uses other functions
Adding parwave17 other functions, ExtractedOnly mode uses other functions
Adding parwave18 other functions, ExtractedOnly mode uses other functions
Adding frame_init0 other functions, ExtractedOnly mode uses other functions
Adding frame_init1 other functions, ExtractedOnly mode uses other functions
Adding frame_init2 other functions, ExtractedOnly mode uses other functions
Adding frame_init3 other functions, ExtractedOnly mode uses other functions
Adding frame_init4 other functions, ExtractedOnly mode uses other functions
Adding flutter0 other functions, ExtractedOnly mode uses other functions
Adding impulsive_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset0 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset2 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset3 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset4 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset5 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset6 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset7 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset8 other functions, ExtractedOnly mode uses other functions
Adding clip0 other functions, ExtractedOnly mode uses other functions
Adding clip1 other functions, ExtractedOnly mode uses other functions
Adding overload_warning0 other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN0 other functions, ExtractedOnly mode uses other functions
Adding setabc0 other functions, ExtractedOnly mode uses other functions
Adding setzeroabc0 other functions, ExtractedOnly mode uses other functions
Adding setabcg0 other functions, ExtractedOnly mode uses other functions
Adding parwave_init0 other functions, ExtractedOnly mode uses other functions
Adding init_synth0 other functions, ExtractedOnly mode uses other functions
Adding init_synth1 other functions, ExtractedOnly mode uses other functions
Adding au_header0 other functions, ExtractedOnly mode uses other functions
Adding wblong0 other functions, ExtractedOnly mode uses other functions
Adding file_init0 other functions, ExtractedOnly mode uses other functions
Adding file_init1 other functions, ExtractedOnly mode uses other functions
Adding file_init2 other functions, ExtractedOnly mode uses other functions
Adding file_init3 other functions, ExtractedOnly mode uses other functions
Adding file_init4 other functions, ExtractedOnly mode uses other functions
Adding file_init5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write0 other functions, ExtractedOnly mode uses other functions
Adding aufile_write1 other functions, ExtractedOnly mode uses other functions
Adding aufile_write2 other functions, ExtractedOnly mode uses other functions
Adding aufile_write3 other functions, ExtractedOnly mode uses other functions
Adding aufile_write4 other functions, ExtractedOnly mode uses other functions
Adding aufile_write5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write6 other functions, ExtractedOnly mode uses other functions
Adding aufile_term0 other functions, ExtractedOnly mode uses other functions
Adding aufile_term1 other functions, ExtractedOnly mode uses other functions
Adding aufile_term2 other functions, ExtractedOnly mode uses other functions
Adding getargs0 other functions, ExtractedOnly mode uses other functions
Adding getargs1 other functions, ExtractedOnly mode uses other functions
Adding getargs2 other functions, ExtractedOnly mode uses other functions
Adding getargs3 other functions, ExtractedOnly mode uses other functions
Adding getargs4 other functions, ExtractedOnly mode uses other functions
Adding getargs5 other functions, ExtractedOnly mode uses other functions
Adding getargs6 other functions, ExtractedOnly mode uses other functions
Adding getargs7 other functions, ExtractedOnly mode uses other functions
Adding getargs8 other functions, ExtractedOnly mode uses other functions
Adding getargs9 other functions, ExtractedOnly mode uses other functions
Adding getargs10 other functions, ExtractedOnly mode uses other functions
Adding getargs11 other functions, ExtractedOnly mode uses other functions
Adding getargs12 other functions, ExtractedOnly mode uses other functions
Adding getargs13 other functions, ExtractedOnly mode uses other functions
Adding getargs14 other functions, ExtractedOnly mode uses other functions
Adding getargs15 other functions, ExtractedOnly mode uses other functions
Adding getargs16 other functions, ExtractedOnly mode uses other functions
Adding getargs17 other functions, ExtractedOnly mode uses other functions
Adding getargs18 other functions, ExtractedOnly mode uses other functions
Adding getargs19 other functions, ExtractedOnly mode uses other functions
Adding getargs20 other functions, ExtractedOnly mode uses other functions
Adding getargs21 other functions, ExtractedOnly mode uses other functions
Adding getargs22 other functions, ExtractedOnly mode uses other functions
Adding getargs23 other functions, ExtractedOnly mode uses other functions
Adding audio_init0 other functions, ExtractedOnly mode uses other functions
Adding audio_init1 other functions, ExtractedOnly mode uses other functions
Adding audio_init2 other functions, ExtractedOnly mode uses other functions
Adding audio_init3 other functions, ExtractedOnly mode uses other functions
Adding audio_open0 other functions, ExtractedOnly mode uses other functions
Adding audio_term0 other functions, ExtractedOnly mode uses other functions
Adding audio_term1 other functions, ExtractedOnly mode uses other functions
Adding audio_play0 other functions, ExtractedOnly mode uses other functions
Adding audio_play1 other functions, ExtractedOnly mode uses other functions
Adding audio_play2 other functions, ExtractedOnly mode uses other functions
Adding audio_play3 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:364
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
jsru_save0
xlate_string6
trie_lookup
parwave18
enter2
audio_play2
dict_init
isconsonant
find_elm
DBtoLIN
xlate_string5
darray_init0
guess_word0
natural_source
holmes1
say_phones2
phone_cat0
setabc0
darray_find1
xlate_ordinal7
xlate_ordinal11
parwave5
NRL2
say_string0
show_parms1
say_phones0
getargs9
darray_find
phone_cat1
xlate_word0
pitch_synch_par_reset4
au_header
holmes11
Darray_find4
NRL
spell_out1
init_synth1
xlate_ordinal3
interpolate0
frame_init4
leftmatch5
say_file0
init_holmes
impulsive_source
aufile_write6
file_init4
pitch_synch_par_reset0
leftmatch8
suspect_word2
xlate_ordinal9
rightmatch
file_init5
set_trans0
audio_init3
frame_init0
xlate_word7
xlate_string18
parwave4
xlate_word6
trie_insert1
xlate_ordinal0
xlate_word3
xlate_string3
leftmatch0
guess_word1
pitch_synch_par_reset5
dict_term
xlate_string4
xlate_cardinal1
setabcg0
NRL1
darray_find.730
xlate_word12
xlate_ordinal4
parwave10
pitch_synch_par_reset2
find_rule
Darray_find2
parwave12
parwave16
xlate_cardinal7
linear2
leftmatch1
xlate_cardinal5
xlate_ordinal2
getargs2
getargs11
trie_lookup1
xlate_string10
holmes22
rightmatch0
rightmatch5
audio_open
darray_free
getargs8
init_synth
linear
rightmatch1
parwave_init0
audio_play3
say_file
aufile_term1
aufile_write5
holmes0
file_init2
parwave6
parwave9
init_holmes0
xlate_string1
xlate_string7
holmes3
trie_insert2
getargs20
show_parms
holmes20
flutter0
rightmatch2
find_elm1
parwave15
xlate_cardinal4
concat_args5
leftmatch4
trie_lookup2
audio_term0
holmes17
getargs10
term_holmes
holmes10
flutter
Darray_find0
getargs7
getargs4
xlate_word4
audio_term
phone_to_elm
setzeroabc
xlate_cardinal6
audio_play
main1
rightmatch10
find_rule2
xlate_string21
audio_init0
xlate_cardinal9
xlate_string14
xlate_string13
xlate_string2
xlate_ordinal6
rightmatch4
getargs5
darray_delete1
xlate_word
holmes4
NRL3
interpolate2
aufile_write0
holmes5
interpolate1
parwave
getargs6
getargs18
getargs21
file_init
enter1
wblong0
rightmatch9
xlate_string0
darray_find.446
parwave2
xlate_string20
getargs0
leftmatch7
aufile_term0
file_init0
impulsive_source0
trie_insert0
getargs14
jsru_save
darray_find.731
aufile_write3
xlate_cardinal3
Darray_find3
getargs22
setzeroabc0
suspect_word
file_init1
trie_lookup3
phone_to_elm0
audio_play0
pitch_synch_par_reset6
concat_args0
parwave11
spell_out0
aufile_term2
set_trans
audio_term1
linear0
holmes21
xlate_word5
dBconvert
holmes8
rightmatch12
interpolate
overload_warning0
leftmatch2
clip
guess_word
holmes9
pitch_synch_par_reset7
xlate_cardinal8
clip0
holmes7
Darray_find1
holmes18
darray_find0
audio_init1
init_synth0
show_parms0
parwave14
xlate_word10
darray_delete0
main2
file_init3
darray_free0
jsru_amp
NRL0
darray_init
xlate_cardinal2
clip1
getargs12
aufile_term
getargs13
setabcg
getargs23
holmes13
frame_init3
xlate_string16
au_header0
holmes12
audio_open0
jsru_freq
natural_source1
holmes15
xlate_string17
pitch_synch_par_reset
xlate_string12
main3
set_trans1
enter_phonemes
getargs16
enter0
getargs15
interpolate3
find_elm0
xlate_ordinal
phone_append
trie_insert3
xlate_string11
parwave8
xlate_cardinal0
concat_args6
aufile_write2
xlate_string15
find_rule1
trie_lookup0
xlate_string19
filter
Darray_find
parwave3
parwave0
say_string
init_holmes1
parwave7
holmes19
xlate_string8
concat_args4
aufile_write1
overload_warning
term_holmes0
antiresonator
frame_init1
suspect_word1
concat_args3
parwave17
frame_init
wblong
phone_cat
resonator
setabc
phone_to_elm2
pitch_synch_par_reset1
darray_find.73
say_phones
holmes14
holmes16
frame_init2
xlate_ordinal8
aufile_write
darray_delete
xlate_word8
audio_play1
rightmatch8
darray_find.4461
parwave1
holmes
darray_fget
xlate_word9
pitch_synch_par_reset3
xlate_ordinal10
xlate_string
audio_init
concat_args2
leftmatch9
xlate_word2
term_holmes1
dict_find
say_file1
holmes6
natural_source0
phone_to_elm1
parwave_init
linear1
xlate_cardinal
pitch_synch_par_reset8
xlate_word11
spell_out
leftmatch3
getargs17
getargs19
xlate_ordinal5
rightmatch11
say_phones1
isvowel
xlate_word1
concat_args
rightmatch3
suspect_word0
darray_find.4460
xlate_string22
rightmatch7
main0
find_rule0
main
init_holmes2
concat_args1
xlate_ordinal1
xlate_string9
leftmatch
DBtoLIN0
enter
holmes2
audio_init2
leftmatch6
getargs1
parwave13
find_rule3
init_holmes3
aufile_write4
getargs3
rightmatch13
rightmatch6
trie_insert
getargs
darray_free1
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 364 function, while filter count is 91
Functions called in loop
Function call numbers
dict_init -- 1
getargs -- 5
main -- 0
file_init -- 1
audio_init -- 1
init_synth -- 1
init_holmes -- 1
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 6822
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6823
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6824
  - operands: []
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 9537
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14784
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14876
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17387
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17405
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17644
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %e.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %p = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %p.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %samp.el = alloca i16*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nsize = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %nsize.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %s.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %ap = alloca [1 x %struct.__va_list_tag], align 16, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   call void @llvm.va_start(i8* %arraydecay12), !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 18446744073709551615
No reaching definition for:   %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca %struct.Elm_s*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   store i32 %add44, i32* %nph, align 4, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %d.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 91
Collecting defining blocks for spell_out
 Skipping function per FilterFunctionPass:xlate_string
 Skipping function per FilterFunctionPass:suspect_word
 Skipping function per FilterFunctionPass:xlate_word
 Skipping function per FilterFunctionPass:darray_find
 Skipping function per FilterFunctionPass:say_phones
 Skipping function per FilterFunctionPass:darray_init
 Skipping function per FilterFunctionPass:concat_args
 Skipping function per FilterFunctionPass:say_string
Collecting defining blocks for darray_fget
Collecting defining blocks for say_file
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
Collecting defining blocks for darray_free
Collecting defining blocks for Darray_find
 Skipping function per FilterFunctionPass:darray_delete
Skip. No dependence graph for function darray_find.73
Collecting defining blocks for isvowel
 Skipping function per FilterFunctionPass:isconsonant
 Skipping function per FilterFunctionPass:NRL
 Skipping function per FilterFunctionPass:phone_cat
 Skipping function per FilterFunctionPass:guess_word
 Skipping function per FilterFunctionPass:find_rule
 Skipping function per FilterFunctionPass:leftmatch
Collecting defining blocks for rightmatch
 Skipping function per FilterFunctionPass:trie_insert
 Skipping function per FilterFunctionPass:trie_lookup
 Skipping function per FilterFunctionPass:phone_append
 Skipping function per FilterFunctionPass:darray_find.446
 Skipping function per FilterFunctionPass:phone_to_elm
 Skipping function per FilterFunctionPass:enter_phonemes
 Skipping function per FilterFunctionPass:enter
Collecting defining blocks for find_elm
 Skipping function per FilterFunctionPass:holmes
Collecting defining blocks for set_trans
 Skipping function per FilterFunctionPass:interpolate
 Skipping function per FilterFunctionPass:filter
Collecting defining blocks for jsru_save
Collecting defining blocks for jsru_freq
 Skipping function per FilterFunctionPass:jsru_amp
Collecting defining blocks for linear
 Skipping function per FilterFunctionPass:init_holmes
 Skipping function per FilterFunctionPass:term_holmes
Skip. No dependence graph for function show_parms
 Skipping function per FilterFunctionPass:parwave
 Skipping function per FilterFunctionPass:frame_init
Collecting defining blocks for flutter
Collecting defining blocks for impulsive_source
Collecting defining blocks for natural_source
 Skipping function per FilterFunctionPass:pitch_synch_par_reset
 Skipping function per FilterFunctionPass:resonator
Collecting defining blocks for antiresonator
 Skipping function per FilterFunctionPass:clip
Collecting defining blocks for overload_warning
 Skipping function per FilterFunctionPass:dBconvert
 Skipping function per FilterFunctionPass:DBtoLIN
 Skipping function per FilterFunctionPass:setabc
 Skipping function per FilterFunctionPass:setzeroabc
 Skipping function per FilterFunctionPass:setabcg
Collecting defining blocks for parwave_init
 Skipping function per FilterFunctionPass:init_synth
 Skipping function per FilterFunctionPass:au_header
 Skipping function per FilterFunctionPass:wblong
 Skipping function per FilterFunctionPass:file_init
 Skipping function per FilterFunctionPass:aufile_write
 Skipping function per FilterFunctionPass:aufile_term
 Skipping function per FilterFunctionPass:dict_find
 Skipping function per FilterFunctionPass:dict_init
 Skipping function per FilterFunctionPass:dict_term
Collecting defining blocks for getargs
 Skipping function per FilterFunctionPass:audio_init
 Skipping function per FilterFunctionPass:audio_open
Collecting defining blocks for audio_term
 Skipping function per FilterFunctionPass:audio_play
 Processing function:spell_out
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @spell_out0(i8** %word.addr, i32* %n.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @spell_out0(i8** %word.addr, i32* %n.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
 Skipping function per FilterFunctionPass:xlate_string
 Skipping function per FilterFunctionPass:suspect_word
 Skipping function per FilterFunctionPass:xlate_word
 Skipping function per FilterFunctionPass:darray_find
 Skipping function per FilterFunctionPass:say_phones
 Skipping function per FilterFunctionPass:darray_init
 Skipping function per FilterFunctionPass:concat_args
 Skipping function per FilterFunctionPass:say_string
 Processing function:darray_fget
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
No oh has been applied in the path
 Processing function:say_file
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %line = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %line, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %phone, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_file1(%struct.darray_t* %phone), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %phone), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %line = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %line), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
 Processing function:darray_free
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free1(%struct.darray_t** %a.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !13, !data_indep_instr !10
 Processing function:Darray_find
Short range hashing enabled.
Processing path: entry  if.then  if.end  if.then8  cond.true  
After path modifications process path
entry  if.then  if.end  if.then8  cond.true  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find0(%struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
Processing call instruction..
Can't handle this operand   %add = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %ndata = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.else  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.else  
Non numeric pointers (int and float) are skipped:  %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
Processing path: entry  if.then  if.end  if.then8  cond.false  
After path modifications process path
entry  if.then  if.end  if.then8  cond.false  
Processing path: entry  if.then  if.end  if.end38  if.then42  
After path modifications process path
entry  if.then  if.end  if.end38  if.then42  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.then  if.end  if.end38  if.end47  
After path modifications process path
entry  if.then  if.end  if.end38  if.end47  
Processing path: entry  if.then  if.end  if.else33  
After path modifications process path
entry  if.then  if.end  if.else33  
Processing path: entry  if.then  if.then4  
After path modifications process path
entry  if.then  if.then4  
Processing path: entry  if.end48  
After path modifications process path
entry  if.end48  
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  
After path modifications process path
entry  lor.lhs.false  
 Skipping function per FilterFunctionPass:darray_delete
Skip. No dependence graph for function darray_find.73
 Processing function:isvowel
Short range hashing enabled.
Processing path: entry  lor.end  
After path modifications process path
entry  lor.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
 Skipping function per FilterFunctionPass:isconsonant
 Skipping function per FilterFunctionPass:NRL
 Skipping function per FilterFunctionPass:phone_cat
 Skipping function per FilterFunctionPass:guess_word
 Skipping function per FilterFunctionPass:find_rule
 Skipping function per FilterFunctionPass:leftmatch
 Processing function:rightmatch
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.then19  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %10 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then19  
After path modifications process path
entry  if.end  if.then19  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.else  
After path modifications process path
for.body  if.else  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %12 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %16 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.default  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %20 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  sw.default  
After path modifications process path
entry  if.end  sw.default  
Processing call instruction..
Can't handle this operand   %pat = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch12(i8** %pat), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  
Hash path invariants only
Invariants are
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %22 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  while.end  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  while.end  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %26 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.then25  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %30 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then25  
After path modifications process path
entry  if.end  if.then25  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.epilog  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.epilog  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %32 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  while.body37  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  
Hash path invariants only
Invariants are
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %36 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  while.end39  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  while.end39  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %40 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.end45  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end45  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %44 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.then44  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %48 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then44  
After path modifications process path
entry  if.end  if.then44  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  land.lhs.true86  if.then90  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %50 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then90  
After path modifications process path
entry  if.end  if.then90  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  if.end91  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  if.end91  
Hash path invariants only
Invariants are
  call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  %52 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  land.lhs.true97  land.lhs.true101  if.then105  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  land.lhs.true97  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %56 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then105  
After path modifications process path
entry  if.end  if.then105  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  if.end106  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  if.end106  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %58 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.then122  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.then122  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %62 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.else124  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.else124  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %66 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.then138  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.then138  
Hash path invariants only
Invariants are
  call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end140, !control_dep_instr !7, !data_indep_instr !10
  %70 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.end140  if.end141  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.end140  if.end141  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end141, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %74 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %78 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.then156  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then156  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %82 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.end158  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %86 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end158  
After path modifications process path
entry  if.end  if.end158  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.end159  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %88 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end159  
After path modifications process path
entry  if.end  if.end159  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.else160  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %90 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.else160  
After path modifications process path
entry  if.end  if.else160  
Processing path: entry  if.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  for.end  
After path modifications process path
entry  if.end  for.end  
 Skipping function per FilterFunctionPass:trie_insert
 Skipping function per FilterFunctionPass:trie_lookup
 Skipping function per FilterFunctionPass:phone_append
 Skipping function per FilterFunctionPass:darray_find.446
 Skipping function per FilterFunctionPass:phone_to_elm
 Skipping function per FilterFunctionPass:enter_phonemes
 Skipping function per FilterFunctionPass:enter
 Processing function:find_elm
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
No oh has been applied in the path
Processing path: entry  while.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Non numeric pointers (int and float) are skipped:  %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.Elm_s*
No oh has been applied in the path
 Skipping function per FilterFunctionPass:holmes
 Processing function:set_trans
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.then  
After path modifications process path
for.body  cond.end  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
  call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %t.addr = alloca %struct.slope_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %b.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %a.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.end  for.inc  
After path modifications process path
for.body  cond.end  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.else  
After path modifications process path
for.body  cond.end  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
  call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %t.addr = alloca %struct.slope_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %b.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:interpolate
 Skipping function per FilterFunctionPass:filter
 Processing function:jsru_save
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %tp.addr = alloca float*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %f0.addr = alloca double, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:jsru_freq
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:jsru_amp
 Processing function:linear
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  if.then2  
After path modifications process path
entry  if.else  if.then2  
Processing path: entry  if.else  if.else3  
After path modifications process path
entry  if.else  if.else3  
 Skipping function per FilterFunctionPass:init_holmes
 Skipping function per FilterFunctionPass:term_holmes
Skip. No dependence graph for function show_parms
 Skipping function per FilterFunctionPass:parwave
 Skipping function per FilterFunctionPass:frame_init
 Processing function:flutter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %pars.addr = alloca %struct.klatt_frame_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @flutter0(%struct.klatt_frame_t** %pars.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @flutter0(%struct.klatt_frame_t** %pars.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:impulsive_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Processing function:natural_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Skipping function per FilterFunctionPass:pitch_synch_par_reset
 Skipping function per FilterFunctionPass:resonator
 Processing function:antiresonator
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:clip
 Processing function:overload_warning
Short range hashing enabled.
Processing path: entry  if.then  if.end  
After path modifications process path
entry  if.then  if.end  
Processing path: entry  if.then  if.then1  
After path modifications process path
entry  if.then  if.then1  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
 Skipping function per FilterFunctionPass:dBconvert
 Skipping function per FilterFunctionPass:DBtoLIN
 Skipping function per FilterFunctionPass:setabc
 Skipping function per FilterFunctionPass:setzeroabc
 Skipping function per FilterFunctionPass:setabcg
 Processing function:parwave_init
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave_init0(%struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Skipping function per FilterFunctionPass:init_synth
 Skipping function per FilterFunctionPass:au_header
 Skipping function per FilterFunctionPass:wblong
 Skipping function per FilterFunctionPass:file_init
 Skipping function per FilterFunctionPass:aufile_write
 Skipping function per FilterFunctionPass:aufile_term
 Skipping function per FilterFunctionPass:dict_find
 Skipping function per FilterFunctionPass:dict_init
 Skipping function per FilterFunctionPass:dict_term
 Processing function:getargs
Short range hashing enabled.
Processing path: entry  while.cond10  vaarg.in_reg  
After path modifications process path
vaarg.in_reg  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Non numeric pointers (int and float) are skipped:  %module.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.in_reg19  
After path modifications process path
while.body13  vaarg.in_reg19  
Hash path invariants only
Invariants are
  br label %vaarg.end25, !control_dep_instr !11, !data_indep_instr !9
  %34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.in_reg31  
After path modifications process path
while.body13  vaarg.end25  vaarg.in_reg31  
Hash path invariants only
Invariants are
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %vaarg.end37, !control_dep_instr !11, !data_indep_instr !9
  %53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.in_reg43  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.in_reg43  
Hash path invariants only
Invariants are
  br label %vaarg.end49, !control_dep_instr !11, !data_indep_instr !9
  %73 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  if.end132  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  if.end132  
Hash path invariants only
Invariants are
  br label %if.end183, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.then108  if.then112  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.then108  if.then112  
Hash path invariants only
Invariants are
  br label %if.end115, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x101 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.then108  if.end115  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.then108  if.end115  
Hash path invariants only
Invariants are
  br label %if.end117, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.end117  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.end117  
Hash path invariants only
Invariants are
  br label %if.end121, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.else116  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.else116  
Hash path invariants only
Invariants are
  br label %if.end117, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x101 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.end121  
After path modifications process path
while.body8  if.then95  if.then97  if.end121  
Hash path invariants only
Invariants are
  br label %if.end129, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.else118  
After path modifications process path
while.body8  if.then95  if.then97  if.else118  
Hash path invariants only
Invariants are
  br label %if.end121, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.end129  
After path modifications process path
while.body8  if.then95  if.end129  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %l = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %count = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.then125  
After path modifications process path
while.body8  if.then95  if.else122  if.then125  
Hash path invariants only
Invariants are
  br label %if.end128, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs9(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs9(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.end128  
After path modifications process path
while.body8  if.then95  if.else122  if.end128  
Hash path invariants only
Invariants are
  br label %if.end129, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.else126  
After path modifications process path
while.body8  if.then95  if.else122  if.else126  
Hash path invariants only
Invariants are
  br label %if.end128, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs10(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs10(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end183  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end183  
Hash path invariants only
Invariants are
  br label %if.end184, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.then152  if.then156  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.then152  if.then156  
Hash path invariants only
Invariants are
  br label %if.end159, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x145 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.then152  if.end159  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.then152  if.end159  
Hash path invariants only
Invariants are
  br label %if.end161, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.end161  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.end161  
Hash path invariants only
Invariants are
  br label %if.end165, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.else160  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.else160  
Hash path invariants only
Invariants are
  br label %if.end161, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x145 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.end165  
After path modifications process path
while.body8  if.then138  if.then140  if.end165  
Hash path invariants only
Invariants are
  br label %if.end179, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.else162  
After path modifications process path
while.body8  if.then138  if.then140  if.else162  
Hash path invariants only
Invariants are
  br label %if.end165, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.end179  
After path modifications process path
while.body8  if.then138  if.end179  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %count = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  if.then171  
After path modifications process path
while.body8  if.then138  if.else166  if.then171  
Hash path invariants only
Invariants are
  br label %if.end178, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %flag = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  if.end178  
After path modifications process path
while.body8  if.then138  if.else166  if.end178  
Hash path invariants only
Invariants are
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  br label %if.end179, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  lor.lhs.false168  if.else174  
After path modifications process path
while.body8  if.then138  if.else166  lor.lhs.false168  if.else174  
Hash path invariants only
Invariants are
  br label %if.end178, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs16(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs16(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  if.end182  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end182  
Hash path invariants only
Invariants are
  br label %if.end183, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.end184  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.epilog  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end81, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs4(i8** %desc), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %desc = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs4(i8** %desc), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb  
Hash path invariants only
Invariants are
  call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %sw.epilog, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.then73  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.then73  
Hash path invariants only
Invariants are
  br label %if.end76, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.end76  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.end76  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.else  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.else  
Hash path invariants only
Invariants are
  call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %if.end76, !control_dep_instr !11, !data_indep_instr !9
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.end81  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.end81  
Hash path invariants only
Invariants are
  br label %if.end86, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.true  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.end  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.end  
Hash path invariants only
Invariants are
  br label %if.end81, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.false  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.end86  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.end86  
Hash path invariants only
Invariants are
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %if.end184, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.else82  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.else82  
Hash path invariants only
Invariants are
  br label %if.end86, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %desc = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.then55  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.then55  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs0(i8** %module.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %module.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs0(i8** %module.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.in_mem45  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.in_mem45  
Hash path invariants only
Invariants are
  %overflow_arg_area_p46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %vaarg.end49, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.in_mem33  
After path modifications process path
while.body13  vaarg.end25  vaarg.in_mem33  
Hash path invariants only
Invariants are
  br label %vaarg.end37, !control_dep_instr !11, !data_indep_instr !9
  %overflow_arg_area_p34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.in_mem21  
After path modifications process path
while.body13  vaarg.in_mem21  
Hash path invariants only
Invariants are
  br label %vaarg.end25, !control_dep_instr !11, !data_indep_instr !9
  %overflow_arg_area_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  
After path modifications process path is empty
Processing path: entry  while.cond6  while.body8  while.end  if.end189  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  
After path modifications process path is empty
Processing path: entry  while.cond6  while.body8  while.end  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  if.then188  
After path modifications process path
while.body  land.lhs.true  if.then  if.then188  
Hash path invariants only
Invariants are
  br label %while.end190, !control_dep_instr !11, !data_indep_instr !9
  store i32 0, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.in_mem  
After path modifications process path
vaarg.in_mem  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.then193  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.then193  
Hash path invariants only
Invariants are
  br label %for.cond, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  for.cond  
After path modifications process path is empty
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.then193  for.end  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.then193  for.end  
Hash path invariants only
Invariants are
  br label %if.end204, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %for.cond, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.end204  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.end204  
Hash path invariants only
Invariants are
  br label %if.end207, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.else202  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.else202  
Hash path invariants only
Invariants are
  br label %if.end204, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs21(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs21(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  lor.lhs.false  
After path modifications process path
while.body  land.lhs.true  lor.lhs.false  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end207  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  if.else205  
After path modifications process path
while.body  if.else205  
Hash path invariants only
Invariants are
  br label %if.end207, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs22(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs22(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.end208  land.lhs.true210  if.then212  
After path modifications process path is empty
Processing path: entry  while.end208  land.lhs.true210  if.then212  
After path modifications process path
entry  while.end208  land.lhs.true210  if.then212  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Processing path: entry  while.cond  while.end208  if.end214  
After path modifications process path is empty
Processing path: entry  while.end208  if.end214  
After path modifications process path
entry  while.end208  if.end214  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
 Skipping function per FilterFunctionPass:audio_init
 Skipping function per FilterFunctionPass:audio_open
 Processing function:audio_term
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then3  
After path modifications process path
entry  if.end  if.then3  
Processing path: entry  if.end  if.end7  
After path modifications process path
entry  if.end  if.end7  
 Skipping function per FilterFunctionPass:audio_play
Extract path function for assertion assert_audio_term_path_0
Extract path function for assertion assert_audio_term_path_1
Extract path function for assertion assert_audio_term_path_2
Extract path function for assertion assert_getargs_path_1
Extract path function for assertion assert_getargs_path_2
Extract path function for assertion assert_getargs_path_4
Extract path function for assertion assert_getargs_path_5
Extract path function for assertion assert_getargs_path_6
Extract path function for assertion assert_getargs_path_8
Extract path function for assertion assert_getargs_path_9
Extract path function for assertion assert_getargs_path_10
Extract path function for assertion assert_getargs_path_12
Extract path function for assertion assert_getargs_path_13
Extract path function for assertion assert_getargs_path_14
Extract path function for assertion assert_getargs_path_16
Extract path function for assertion assert_getargs_path_17
Extract path function for assertion assert_getargs_path_18
Extract path function for assertion assert_getargs_path_20
Extract path function for assertion assert_getargs_path_21
Extract path function for assertion assert_getargs_path_22
Extract path function for assertion assert_getargs_path_24
Extract path function for assertion assert_getargs_path_25
Extract path function for assertion assert_getargs_path_26
Extract path function for assertion assert_getargs_path_28
Extract path function for assertion assert_getargs_path_29
Extract path function for assertion assert_getargs_path_30
Extract path function for assertion assert_getargs_path_32
Extract path function for assertion assert_getargs_path_33
Extract path function for assertion assert_getargs_path_34
Extract path function for assertion assert_getargs_path_36
Extract path function for assertion assert_getargs_path_37
Extract path function for assertion assert_getargs_path_38
Extract path function for assertion assert_getargs_path_40
Extract path function for assertion assert_getargs_path_41
Extract path function for assertion assert_getargs_path_42
Extract path function for assertion assert_getargs_path_44
Extract path function for assertion assert_getargs_path_45
Extract path function for assertion assert_getargs_path_46
Extract path function for assertion assert_getargs_path_48
Extract path function for assertion assert_getargs_path_49
Extract path function for assertion assert_getargs_path_50
Extract path function for assertion assert_getargs_path_52
Extract path function for assertion assert_getargs_path_53
Extract path function for assertion assert_getargs_path_54
Extract path function for assertion assert_getargs_path_56
Extract path function for assertion assert_getargs_path_57
Extract path function for assertion assert_getargs_path_58
Extract path function for assertion assert_getargs_path_60
Extract path function for assertion assert_getargs_path_61
Extract path function for assertion assert_getargs_path_62
Extract path function for assertion assert_getargs_path_64
Extract path function for assertion assert_getargs_path_65
Extract path function for assertion assert_getargs_path_66
Extract path function for assertion assert_getargs_path_68
Extract path function for assertion assert_getargs_path_69
Extract path function for assertion assert_getargs_path_70
Extract path function for assertion assert_getargs_path_72
Extract path function for assertion assert_getargs_path_73
Extract path function for assertion assert_getargs_path_74
Extract path function for assertion assert_getargs_path_76
Extract path function for assertion assert_getargs_path_77
Extract path function for assertion assert_getargs_path_78
Extract path function for assertion assert_getargs_path_80
Extract path function for assertion assert_getargs_path_81
Extract path function for assertion assert_getargs_path_82
Extract path function for assertion assert_getargs_path_84
Extract path function for assertion assert_getargs_path_85
Extract path function for assertion assert_getargs_path_86
Extract path function for assertion assert_getargs_path_88
Extract path function for assertion assert_getargs_path_89
Extract path function for assertion assert_getargs_path_90
Extract path function for assertion assert_getargs_path_92
Extract path function for assertion assert_getargs_path_93
Extract path function for assertion assert_getargs_path_94
Extract path function for assertion assert_getargs_path_96
Extract path function for assertion assert_getargs_path_97
Extract path function for assertion assert_getargs_path_98
Extract path function for assertion assert_getargs_path_100
Extract path function for assertion assert_getargs_path_101
Extract path function for assertion assert_getargs_path_102
Extract path function for assertion assert_getargs_path_104
Extract path function for assertion assert_getargs_path_105
Extract path function for assertion assert_getargs_path_106
Extract path function for assertion assert_getargs_path_108
Extract path function for assertion assert_getargs_path_109
Extract path function for assertion assert_getargs_path_110
Extract path function for assertion assert_getargs_path_112
Extract path function for assertion assert_getargs_path_113
Extract path function for assertion assert_getargs_path_114
Extract path function for assertion assert_getargs_path_116
Extract path function for assertion assert_getargs_path_117
Extract path function for assertion assert_getargs_path_118
Extract path function for assertion assert_getargs_path_120
Extract path function for assertion assert_getargs_path_121
Extract path function for assertion assert_getargs_path_122
Extract path function for assertion assert_getargs_path_124
Extract path function for assertion assert_getargs_path_125
Extract path function for assertion assert_getargs_path_126
Extract path function for assertion assert_getargs_path_128
Extract path function for assertion assert_getargs_path_129
Extract path function for assertion assert_getargs_path_130
Extract path function for assertion assert_getargs_path_132
Extract path function for assertion assert_getargs_path_133
Extract path function for assertion assert_getargs_path_134
Extract path function for assertion assert_getargs_path_136
Extract path function for assertion assert_getargs_path_137
Extract path function for assertion assert_getargs_path_138
Extract path function for assertion assert_getargs_path_140
Extract path function for assertion assert_getargs_path_141
Extract path function for assertion assert_getargs_path_142
Extract path function for assertion assert_getargs_path_144
Extract path function for assertion assert_getargs_path_145
Extract path function for assertion assert_getargs_path_146
Extract path function for assertion assert_getargs_path_148
Extract path function for assertion assert_getargs_path_149
Extract path function for assertion assert_getargs_path_150
Extract path function for assertion assert_getargs_path_152
Extract path function for assertion assert_getargs_path_153
Extract path function for assertion assert_getargs_path_154
Extract path function for assertion assert_getargs_path_156
Extract path function for assertion assert_getargs_path_157
Extract path function for assertion assert_getargs_path_158
Extract path function for assertion assert_getargs_path_160
Extract path function for assertion assert_getargs_path_161
Extract path function for assertion assert_getargs_path_162
Extract path function for assertion assert_getargs_path_164
Extract path function for assertion assert_getargs_path_165
Extract path function for assertion assert_getargs_path_166
Extract path function for assertion assert_getargs_path_168
Extract path function for assertion assert_getargs_path_169
Extract path function for assertion assert_getargs_path_170
Extract path function for assertion assert_getargs_path_173
Extract path function for assertion assert_getargs_path_174
Extract path function for assertion assert_getargs_path_177
Extract path function for assertion assert_getargs_path_178
Extract path function for assertion assert_getargs_path_181
Extract path function for assertion assert_getargs_path_182
Extract path function for assertion assert_getargs_path_186
Extract path function for assertion assert_getargs_path_190
Extract path function for assertion assert_getargs_path_193
Extract path function for assertion assert_getargs_path_196
Extract path function for assertion assert_getargs_path_202
Extract path function for assertion assert_getargs_path_205
Extract path function for assertion assert_natural_source_path_0
Extract path function for assertion assert_natural_source_path_1
Extract path function for assertion assert_natural_source_path_2
Extract path function for assertion assert_impulsive_source_path_0
Extract path function for assertion assert_impulsive_source_path_1
Extract path function for assertion assert_impulsive_source_path_2
Extract path function for assertion assert_linear_path_0
Extract path function for assertion assert_linear_path_1
Extract path function for assertion assert_linear_path_2
Extract path function for assertion assert_linear_path_3
Extract path function for assertion assert_jsru_freq_path_0
Extract path function for assertion assert_jsru_freq_path_1
Extract path function for assertion assert_rightmatch_path_0
Extract path function for assertion assert_rightmatch_path_1
Extract path function for assertion assert_rightmatch_path_2
Extract path function for assertion assert_rightmatch_path_3
Extract path function for assertion assert_rightmatch_path_4
Extract path function for assertion assert_rightmatch_path_5
Extract path function for assertion assert_rightmatch_path_6
Extract path function for assertion assert_rightmatch_path_7
Extract path function for assertion assert_rightmatch_path_8
Extract path function for assertion assert_rightmatch_path_9
Extract path function for assertion assert_rightmatch_path_11
Extract path function for assertion assert_rightmatch_path_12
Extract path function for assertion assert_rightmatch_path_14
Extract path function for assertion assert_rightmatch_path_15
Extract path function for assertion assert_rightmatch_path_16
Extract path function for assertion assert_rightmatch_path_17
Extract path function for assertion assert_rightmatch_path_18
Extract path function for assertion assert_rightmatch_path_19
Extract path function for assertion assert_rightmatch_path_21
Extract path function for assertion assert_rightmatch_path_22
Extract path function for assertion assert_rightmatch_path_24
Extract path function for assertion assert_rightmatch_path_25
Extract path function for assertion assert_rightmatch_path_26
Extract path function for assertion assert_rightmatch_path_27
Extract path function for assertion assert_rightmatch_path_28
Extract path function for assertion assert_rightmatch_path_29
Extract path function for assertion assert_rightmatch_path_30
Extract path function for assertion assert_rightmatch_path_31
Extract path function for assertion assert_rightmatch_path_32
Extract path function for assertion assert_rightmatch_path_33
Extract path function for assertion assert_rightmatch_path_34
Extract path function for assertion assert_rightmatch_path_35
Extract path function for assertion assert_rightmatch_path_36
Extract path function for assertion assert_rightmatch_path_37
Extract path function for assertion assert_rightmatch_path_38
Extract path function for assertion assert_rightmatch_path_39
Extract path function for assertion assert_rightmatch_path_40
Extract path function for assertion assert_rightmatch_path_41
Extract path function for assertion assert_rightmatch_path_42
Extract path function for assertion assert_rightmatch_path_43
Extract path function for assertion assert_rightmatch_path_44
Extract path function for assertion assert_rightmatch_path_45
Extract path function for assertion assert_rightmatch_path_46
Extract path function for assertion assert_rightmatch_path_47
Extract path function for assertion assert_rightmatch_path_48
Extract path function for assertion assert_rightmatch_path_49
Extract path function for assertion assert_rightmatch_path_50
Extract path function for assertion assert_rightmatch_path_51
Extract path function for assertion assert_rightmatch_path_52
Extract path function for assertion assert_rightmatch_path_53
Extract path function for assertion assert_rightmatch_path_54
Extract path function for assertion assert_rightmatch_path_55
Extract path function for assertion assert_rightmatch_path_57
Extract path function for assertion assert_spell_out_path_1
Extract path function for assertion assert_spell_out_path_3
Extract path function for assertion assert_say_file_path_1
Extract path function for assertion assert_say_file_path_3
Extract path function for assertion assert_say_file_path_5
Extract path function for assertion assert_set_trans_path_0
Extract path function for assertion assert_set_trans_path_1
Extract path function for assertion assert_set_trans_path_2
Extract path function for assertion assert_set_trans_path_3
Extract path function for assertion assert_set_trans_path_4
Extract path function for assertion assert_set_trans_path_5
Extract path function for assertion assert_set_trans_path_6
Extract path function for assertion assert_set_trans_path_7
Extract path function for assertion assert_set_trans_path_8
Extract path function for assertion assert_set_trans_path_9
Extract path function for assertion assert_set_trans_path_11
Extract path function for assertion assert_Darray_find_path_0
Extract path function for assertion assert_Darray_find_path_1
Extract path function for assertion assert_Darray_find_path_2
Extract path function for assertion assert_Darray_find_path_3
Extract path function for assertion assert_Darray_find_path_4
Extract path function for assertion assert_Darray_find_path_5
Extract path function for assertion assert_Darray_find_path_6
Extract path function for assertion assert_Darray_find_path_7
Extract path function for assertion assert_Darray_find_path_8
Extract path function for assertion assert_Darray_find_path_9
Extract path function for assertion assert_Darray_find_path_10
Extract path function for assertion assert_Darray_find_path_11
Extract path function for assertion assert_Darray_find_path_12
Extract path function for assertion assert_overload_warning_path_0
Extract path function for assertion assert_overload_warning_path_1
Extract path function for assertion assert_overload_warning_path_2
Extract path function for assertion assert_isvowel_path_0
Extract path function for assertion assert_isvowel_path_1
Extract path function for assertion assert_darray_free_path_0
Extract path function for assertion assert_darray_free_path_1
OH stats is requested, dumping stat file...
Processed instructions number 5223
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 50,
    "numberOfDataDependentInstructions": 573,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 3857,
    "numberOfInstructionsInFunctionsWithNoDG": 214,
    "numberOfNonHashableBlocks": 24,
    "numberOfNonHashableInstructions": 158,
    "numberOfOHProcessedInstr": 1152,
    "numberOfOtherUnprotectedInstructions": 2,
    "numberOfOtherUnprotectedLoopVariantInstructions": 0,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 14,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 2,
    "numberOfSensitiveBlocks": 257,
    "numberOfSensitiveFunctions": 20,
    "numberOfShortRangeAssertCalls": 244,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 4,
    "numberOfShortRangeProtectedBlocks": 192,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 151,
    "numberOfUnprotectedArgumentReachableInstructions": 33,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 40,
    "numberOfUnprotectedGlobalReachableInstructions": 59,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 174
}
ERR. processed 20 function, while filter count is 91
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 206.6136 seconds (206.6141 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  197.2427 ( 95.9%)   0.9241 ( 95.8%)  198.1668 ( 95.9%)  198.1674 ( 95.9%)  Instruments bitcode with hashing and logging functions
   7.8931 (  3.8%)   0.0293 (  3.0%)   7.9224 (  3.8%)   7.9224 (  3.8%)  runs input dependency analysis
   0.3556 (  0.2%)   0.0001 (  0.0%)   0.3557 (  0.2%)   0.3553 (  0.2%)  Memory SSA
   0.0526 (  0.0%)   0.0036 (  0.4%)   0.0562 (  0.0%)   0.0562 (  0.0%)  Bitcode Writer
   0.0426 (  0.0%)   0.0000 (  0.0%)   0.0426 (  0.0%)   0.0430 (  0.0%)  Dominator Tree Construction
   0.0299 (  0.0%)   0.0000 (  0.0%)   0.0299 (  0.0%)   0.0299 (  0.0%)  Natural Loop Information
   0.0126 (  0.0%)   0.0004 (  0.0%)   0.0129 (  0.0%)   0.0129 (  0.0%)  Module Verifier
   0.0056 (  0.0%)   0.0001 (  0.0%)   0.0057 (  0.0%)   0.0057 (  0.0%)  Post-Dominator Tree Construction
   0.0051 (  0.0%)   0.0001 (  0.0%)   0.0051 (  0.0%)   0.0053 (  0.0%)  Dominator Tree Construction
   0.0036 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)   0.0036 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0025 (  0.3%)   0.0025 (  0.0%)   0.0025 (  0.0%)  Instruments bitcode with guards
   0.0021 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Include functions in a given file in any transformation
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Function Alias Analysis Results
   0.0015 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0014 (  0.1%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Call site information
   0.0000 (  0.0%)   0.0013 (  0.1%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0007 (  0.1%)   0.0007 (  0.0%)   0.0007 (  0.0%)  runs indirect and virtual calls analysis
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove unreachable blocks from the CFG
   0.0001 (  0.0%)   0.0005 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Marks functions in a given file as assert functions
  205.6492 (100.0%)   0.9643 (100.0%)  206.6136 (100.0%)  206.6141 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0326 seconds (0.0327 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0238 (100.0%)   0.0088 (100.0%)   0.0326 (100.0%)   0.0327 (100.0%)  Parse IR
   0.0238 (100.0%)   0.0088 (100.0%)   0.0326 (100.0%)   0.0327 (100.0%)  Total

Running input dependency analysis pass
Processing function spell_out0
Processing function xlate_string0
Processing function xlate_string1
Processing function xlate_string2
Processing function suspect_word0
Processing function suspect_word1
Processing function suspect_word2
Processing function suspect_word
Processing function dict_find
Processing function xlate_word0
Processing function xlate_word1
Processing function darray_find.4460
Processing function Darray_find0
Processing function Darray_find1
Processing function Darray_find2
Processing function Darray_find3
Processing function Darray_find4
Processing function Darray_find
Processing function darray_find.4461
Processing function darray_find.446
Processing function phone_append
Processing function xlate_word2
Processing function xlate_word3
Processing function xlate_word4
Processing function xlate_word6
Processing function xlate_word8
Processing function NRL0
Processing function NRL1
Processing function NRL2
Processing function NRL3
Processing function guess_word0
Processing function find_rule0
Processing function find_rule1
Processing function find_rule2
Processing function leftmatch0
Processing function leftmatch1
Processing function isvowel
Processing function leftmatch2
Processing function leftmatch3
Processing function isconsonant
Processing function leftmatch4
Processing function leftmatch5
Processing function leftmatch6
Processing function leftmatch7
Processing function leftmatch8
Processing function leftmatch9
Processing function leftmatch
Processing function rightmatch0
Processing function rightmatch1
Processing function rightmatch2
Processing function rightmatch3
Processing function rightmatch4
Processing function rightmatch5
Processing function rightmatch6
Processing function rightmatch7
Processing function rightmatch8
Processing function rightmatch9
Processing function rightmatch10
Processing function rightmatch11
Processing function rightmatch12
Processing function rightmatch13
Processing function rightmatch
Processing function find_rule3
Processing function find_rule
Processing function guess_word1
Processing function guess_word
Processing function NRL
Processing function xlate_word9
Processing function xlate_word10
Processing function xlate_word11
Processing function xlate_word12
Processing function xlate_string4
Processing function xlate_string6
Processing function xlate_string7
Processing function xlate_string8
Processing function xlate_cardinal1
Processing function xlate_cardinal3
Processing function xlate_cardinal5
Processing function xlate_cardinal7
Processing function xlate_cardinal8
Processing function xlate_string10
Processing function xlate_string13
Processing function darray_find0
Processing function darray_find1
Processing function darray_find
Processing function darray_init0
Processing function darray_init
Processing function phone_to_elm0
Processing function find_elm0
Processing function find_elm1
Processing function find_elm
Processing function enter0
Processing function enter1
Processing function trie_insert0
Processing function trie_insert1
Processing function trie_insert2
Processing function trie_insert3
Processing function trie_insert
Processing function enter2
Processing function enter
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function enter_phonemes
Processing function trie_lookup0
Processing function trie_lookup1
Processing function trie_lookup2
Processing function trie_lookup3
Processing function trie_lookup
Processing function phone_to_elm1
Processing function phone_to_elm2
Processing function phone_to_elm
Processing function say_phones0
Processing function holmes0
Processing function holmes1
Processing function setabc0
Processing function setabc
Processing function parwave_init0
Processing function parwave_init
Processing function holmes2
Processing function holmes3
Processing function set_trans0
Processing function set_trans1
Processing function set_trans
Processing function holmes4
Processing function holmes5
Processing function holmes6
Processing function holmes7
Processing function holmes8
Processing function holmes9
Processing function holmes10
Processing function holmes11
Processing function holmes12
Processing function holmes13
Processing function holmes14
Processing function holmes15
Processing function holmes16
Processing function linear0
Processing function linear1
Processing function linear2
Processing function linear
Processing function interpolate0
Processing function interpolate1
Processing function interpolate2
Processing function interpolate3
Processing function interpolate
Processing function filter
Processing function DBtoLIN0
Processing function DBtoLIN
Processing function frame_init0
Processing function frame_init1
Processing function frame_init2
Processing function frame_init3
Processing function setzeroabc0
Processing function setzeroabc
Processing function setabcg0
Processing function setabcg
Processing function frame_init4
Processing function frame_init
Processing function flutter0
Processing function flutter
Processing function parwave0
Processing function parwave1
Processing function parwave2
Processing function impulsive_source0
Processing function resonator
Processing function impulsive_source
Processing function parwave3
Processing function natural_source0
Processing function natural_source1
Processing function natural_source
Processing function parwave4
Processing function pitch_synch_par_reset0
Processing function pitch_synch_par_reset1
Processing function pitch_synch_par_reset2
Processing function pitch_synch_par_reset3
Processing function pitch_synch_par_reset4
Processing function pitch_synch_par_reset5
Processing function pitch_synch_par_reset6
Processing function pitch_synch_par_reset7
Processing function pitch_synch_par_reset8
Processing function pitch_synch_par_reset
Processing function parwave5
Processing function parwave6
Processing function parwave7
Processing function antiresonator
Processing function parwave8
Processing function parwave9
Processing function parwave10
Processing function parwave11
Processing function parwave12
Processing function parwave13
Processing function parwave14
Processing function parwave15
Processing function parwave16
Processing function dBconvert
Processing function overload_warning0
Processing function overload_warning
Processing function clip0
Processing function clip1
Processing function clip
Processing function parwave17
Processing function parwave18
Processing function parwave
Processing function holmes17
Processing function jsru_freq
Processing function jsru_amp
Processing function jsru_save0
Processing function jsru_save
Processing function holmes18
Processing function holmes19
Processing function holmes20
Processing function holmes21
Processing function holmes22
Processing function holmes
Processing function audio_play0
Processing function audio_play1
Processing function audio_play2
Processing function audio_play3
Processing function audio_play
Processing function say_phones1
Processing function say_phones2
Processing function darray_free0
Processing function darray_free1
Processing function darray_free
Processing function say_phones
Processing function xlate_string15
Processing function xlate_string16
Processing function xlate_string17
Processing function xlate_string18
Processing function xlate_string20
Processing function xlate_string22
Processing function xlate_string21
Processing function xlate_string19
Processing function xlate_string14
Processing function xlate_string12
Processing function xlate_string11
Processing function xlate_cardinal9
Processing function xlate_cardinal6
Processing function xlate_cardinal4
Processing function xlate_cardinal2
Processing function xlate_cardinal0
Processing function xlate_cardinal
Processing function xlate_string9
Processing function xlate_string5
Processing function xlate_word7
Processing function xlate_word5
Processing function xlate_word
Processing function xlate_string3
Processing function xlate_string
Processing function spell_out1
Processing function spell_out
Processing function concat_args0
Processing function concat_args1
Processing function concat_args2
Processing function concat_args3
Processing function concat_args4
Processing function concat_args5
Processing function concat_args6
Processing function concat_args
Processing function say_string0
Processing function say_string
Processing function darray_fget
Processing function say_file0
Processing function say_file1
Processing function say_file
Processing function getargs0
Processing function getargs1
Processing function getargs2
Processing function getargs3
Processing function getargs4
Processing function getargs5
Processing function getargs6
Processing function getargs7
Processing function getargs8
Processing function getargs9
Processing function getargs10
Processing function getargs11
Processing function getargs12
Processing function getargs13
Processing function getargs14
Processing function getargs15
Processing function getargs16
Processing function getargs17
Processing function getargs18
Processing function getargs19
Processing function getargs20
Processing function getargs21
Processing function getargs22
Processing function getargs23
Processing function getargs
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_start
Non registered intrinsic llvm.va_end
Non registered intrinsic llvm.va_end
Processing function audio_init0
Processing function audio_open0
Processing function audio_open
Processing function audio_init1
Processing function audio_init2
Processing function audio_init3
Processing function audio_init
Processing function init_synth0
Processing function init_synth1
Processing function init_synth
Processing function init_holmes0
Processing function init_holmes1
Processing function init_holmes2
Processing function init_holmes3
Processing function init_holmes
Processing function dict_init
Processing function file_init0
Processing function file_init1
Processing function wblong0
Processing function wblong
Processing function au_header0
Processing function au_header
Processing function file_init2
Processing function file_init3
Processing function file_init4
Processing function file_init5
Processing function file_init
Processing function main0
Processing function main1
Processing function main2
Processing function main3
Processing function audio_term0
Processing function audio_term1
Processing function audio_term
Processing function term_holmes0
Processing function term_holmes1
Processing function term_holmes
Processing function dict_term
Processing function main
Processing function xlate_ordinal0
Processing function xlate_ordinal1
Processing function xlate_ordinal2
Processing function xlate_ordinal3
Processing function xlate_ordinal4
Processing function xlate_ordinal5
Processing function xlate_ordinal6
Processing function xlate_ordinal7
Processing function xlate_ordinal8
Processing function xlate_ordinal9
Processing function xlate_ordinal10
Processing function xlate_ordinal11
Processing function xlate_ordinal
Processing function darray_find.730
Processing function darray_find.731
Processing function darray_find.73
Processing function darray_delete0
Processing function darray_delete1
Processing function darray_delete
Processing function phone_cat0
Processing function phone_cat1
Processing function phone_cat
Processing function show_parms0
Processing function show_parms1
Processing function show_parms
Processing function aufile_write0
Processing function aufile_write1
Processing function aufile_write2
Processing function aufile_write3
Processing function aufile_write4
Processing function aufile_write5
Processing function aufile_write6
Processing function aufile_write
Processing function aufile_term0
Processing function aufile_term1
Processing function aufile_term2
Processing function aufile_term
Finalizing aufile_term
Finalizing aufile_term2
Finalizing aufile_term1
Mark Input dependent function aufile_term1
Finalizing aufile_term0
Mark Input dependent function aufile_term0
Finalizing aufile_write
Finalizing aufile_write6
Mark Input dependent function aufile_write6
Finalizing aufile_write5
Mark Input dependent function aufile_write5
Finalizing aufile_write4
Mark Input dependent function aufile_write4
Finalizing aufile_write3
Mark Input dependent function aufile_write3
Finalizing aufile_write2
Mark Input dependent function aufile_write2
Finalizing aufile_write1
Mark Input dependent function aufile_write1
Finalizing aufile_write0
Mark Input dependent function aufile_write0
Finalizing show_parms
Finalizing show_parms1
Mark Input dependent function show_parms1
Finalizing show_parms0
Mark Input dependent function show_parms0
Finalizing phone_cat
Finalizing phone_cat1
Mark Input dependent function phone_cat1
Finalizing phone_cat0
Finalizing darray_delete
Finalizing darray_delete1
Mark Input dependent function darray_delete1
Finalizing darray_delete0
Mark Input dependent function darray_delete0
Finalizing darray_find.73
Mark Input dependent function darray_find.73
Finalizing darray_find.731
Mark Input dependent function darray_find.731
Finalizing darray_find.730
Mark Input dependent function darray_find.730
Finalizing xlate_ordinal
Finalizing xlate_ordinal11
Mark Input dependent function xlate_ordinal11
Finalizing xlate_ordinal10
Mark Input dependent function xlate_ordinal10
Finalizing xlate_ordinal9
Mark Input dependent function xlate_ordinal9
Finalizing xlate_ordinal8
Mark Input dependent function xlate_ordinal8
Finalizing xlate_ordinal7
Mark Input dependent function xlate_ordinal7
Finalizing xlate_ordinal6
Mark Input dependent function xlate_ordinal6
Finalizing xlate_ordinal5
Mark Input dependent function xlate_ordinal5
Finalizing xlate_ordinal4
Mark Input dependent function xlate_ordinal4
Finalizing xlate_ordinal3
Mark Input dependent function xlate_ordinal3
Finalizing xlate_ordinal2
Mark Input dependent function xlate_ordinal2
Finalizing xlate_ordinal1
Mark Input dependent function xlate_ordinal1
Finalizing xlate_ordinal0
Mark Input dependent function xlate_ordinal0
Finalizing main
Finalizing dict_term
Mark Input dependent function dict_term
Finalizing term_holmes
Mark Input dependent function term_holmes
Finalizing term_holmes1
Mark Input dependent function term_holmes1
Finalizing term_holmes0
Mark Input dependent function term_holmes0
Finalizing audio_term
Mark Input dependent function audio_term
Finalizing audio_term1
Mark Input dependent function audio_term1
Finalizing audio_term0
Mark Input dependent function audio_term0
Finalizing main3
Mark Input dependent function main3
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.10 = private unnamed_addr constant [6 x i8] c"(%s)\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.9 = private unnamed_addr constant [44 x i8] c"or     %s [options as above] < file-to-say\0A\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.8 = private unnamed_addr constant [43 x i8] c"Usage: %s [options as above] words to say\0A\00", align 1
Finalizing main2
Mark Input dependent function main2
Finalizing main1
Mark Input dependent function main1
Finalizing main0
Mark Input dependent function main0
Finalizing file_init
Finalizing file_init5
Mark Input dependent function file_init5
Finalizing file_init4
Mark Input dependent function file_init4
Finalizing file_init3
Mark Input dependent function file_init3
Finalizing file_init2
Mark Input dependent function file_init2
Finalizing au_header
Mark Input dependent function au_header
Finalizing au_header0
Mark Input dependent function au_header0
Finalizing wblong
Mark Input dependent function wblong
Finalizing wblong0
Mark Input dependent function wblong0
Finalizing file_init1
Mark Input dependent function file_init1
Finalizing file_init0
Mark Input dependent function file_init0
Finalizing dict_init
Finalizing init_holmes
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @frac = global double 1.000000e+00, align 8
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @speed = global i32 1, align 4
Finalizing init_holmes3
Mark Input dependent function init_holmes3
Finalizing init_holmes2
Mark Input dependent function init_holmes2
Finalizing init_holmes1
Mark Input dependent function init_holmes1
Finalizing init_holmes0
Mark Input dependent function init_holmes0
Finalizing init_synth
Finalizing init_synth1
Mark Input dependent function init_synth1
Finalizing init_synth0
Mark Input dependent function init_synth0
Finalizing audio_init
Finalizing audio_init3
Mark Input dependent function audio_init3
Finalizing audio_init2
Mark Input dependent function audio_init2
Finalizing audio_init1
Mark Input dependent function audio_init1
Finalizing audio_open
Mark Input dependent function audio_open
Finalizing audio_open0
Mark Input dependent function audio_open0
Finalizing audio_init0
Mark Input dependent function audio_init0
Finalizing getargs
Finalizing getargs23
Mark Input dependent function getargs23
Finalizing getargs22
Mark Input dependent function getargs22
Finalizing getargs21
Mark Input dependent function getargs21
Finalizing getargs20
Mark Input dependent function getargs20
Finalizing getargs19
Mark Input dependent function getargs19
Finalizing getargs18
Mark Input dependent function getargs18
Finalizing getargs17
Mark Input dependent function getargs17
Finalizing getargs16
Mark Input dependent function getargs16
Finalizing getargs15
Mark Input dependent function getargs15
Finalizing getargs14
Mark Input dependent function getargs14
Finalizing getargs13
Mark Input dependent function getargs13
Finalizing getargs12
Mark Input dependent function getargs12
Finalizing getargs11
Mark Input dependent function getargs11
Finalizing getargs10
Mark Input dependent function getargs10
Finalizing getargs9
Mark Input dependent function getargs9
Finalizing getargs8
Mark Input dependent function getargs8
Finalizing getargs7
Mark Input dependent function getargs7
Finalizing getargs6
Mark Input dependent function getargs6
Finalizing getargs5
Mark Input dependent function getargs5
Finalizing getargs4
Mark Input dependent function getargs4
Finalizing getargs3
Mark Input dependent function getargs3
Finalizing getargs2
Mark Input dependent function getargs2
Finalizing getargs1
Mark Input dependent function getargs1
Finalizing getargs0
Mark Input dependent function getargs0
Finalizing say_file
Mark Input dependent function say_file
Finalizing say_file1
Mark Input dependent function say_file1
Finalizing say_file0
Mark Input dependent function say_file0
Finalizing darray_fget
Mark Input dependent function darray_fget
Finalizing say_string
Mark Input dependent function say_string
Finalizing say_string0
Mark Input dependent function say_string0
Finalizing concat_args
Mark Input dependent function concat_args
Finalizing concat_args6
Mark Input dependent function concat_args6
Finalizing concat_args5
Mark Input dependent function concat_args5
Finalizing concat_args4
Mark Input dependent function concat_args4
Finalizing concat_args3
Mark Input dependent function concat_args3
Finalizing concat_args2
Mark Input dependent function concat_args2
Finalizing concat_args1
Mark Input dependent function concat_args1
Finalizing concat_args0
Mark Input dependent function concat_args0
Finalizing spell_out
Mark Input dependent function spell_out
Finalizing spell_out1
Mark Input dependent function spell_out1
Finalizing xlate_string
Mark Input dependent function xlate_string
Finalizing xlate_string3
Mark Input dependent function xlate_string3
Finalizing xlate_word
Mark Input dependent function xlate_word
Finalizing xlate_word5
Mark Input dependent function xlate_word5
Finalizing xlate_word7
Mark Input dependent function xlate_word7
Finalizing xlate_string5
Mark Input dependent function xlate_string5
Finalizing xlate_string9
Mark Input dependent function xlate_string9
Finalizing xlate_cardinal
Mark Input dependent function xlate_cardinal
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.7.21 = private unnamed_addr constant [8 x i8] c"hundred\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.3.17 = private unnamed_addr constant [8 x i8] c"billion\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.5.19 = private unnamed_addr constant [8 x i8] c"million\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.4.18 = private unnamed_addr constant [4 x i8] c"and\00", align 1
Function call info finalization.
    Function argument depends on global for which no input dep info is known. Global is: @.str.6.20 = private unnamed_addr constant [9 x i8] c"thousand\00", align 1
Finalizing xlate_cardinal0
Mark Input dependent function xlate_cardinal0
Finalizing xlate_cardinal2
Mark Input dependent function xlate_cardinal2
Finalizing xlate_cardinal4
Mark Input dependent function xlate_cardinal4
Finalizing xlate_cardinal6
Mark Input dependent function xlate_cardinal6
Finalizing xlate_cardinal9
Mark Input dependent function xlate_cardinal9
Finalizing xlate_string11
Mark Input dependent function xlate_string11
Finalizing xlate_string12
Mark Input dependent function xlate_string12
Finalizing xlate_string14
Mark Input dependent function xlate_string14
Finalizing xlate_string19
Mark Input dependent function xlate_string19
Finalizing xlate_string21
Mark Input dependent function xlate_string21
Finalizing xlate_string22
Mark Input dependent function xlate_string22
Finalizing xlate_string20
Mark Input dependent function xlate_string20
Finalizing xlate_string18
Mark Input dependent function xlate_string18
Finalizing xlate_string17
Mark Input dependent function xlate_string17
Finalizing xlate_string16
Mark Input dependent function xlate_string16
Finalizing xlate_string15
Mark Input dependent function xlate_string15
Finalizing say_phones
Mark Input dependent function say_phones
Finalizing darray_free
Mark Input dependent function darray_free
Finalizing darray_free1
Mark Input dependent function darray_free1
Finalizing darray_free0
Mark Input dependent function darray_free0
Finalizing say_phones2
Mark Input dependent function say_phones2
Finalizing say_phones1
Mark Input dependent function say_phones1
Finalizing audio_play
Mark Input dependent function audio_play
Finalizing audio_play3
Mark Input dependent function audio_play3
Finalizing audio_play2
Mark Input dependent function audio_play2
Finalizing audio_play1
Mark Input dependent function audio_play1
Finalizing audio_play0
Mark Input dependent function audio_play0
Finalizing holmes
Mark Input dependent function holmes
Finalizing holmes22
Mark Input dependent function holmes22
Finalizing holmes21
Mark Input dependent function holmes21
Finalizing holmes20
Mark Input dependent function holmes20
Finalizing holmes19
Mark Input dependent function holmes19
Finalizing holmes18
Mark Input dependent function holmes18
Finalizing jsru_save
Mark Input dependent function jsru_save
Finalizing jsru_save0
Mark Input dependent function jsru_save0
Finalizing jsru_amp
Mark Input dependent function jsru_amp
Finalizing jsru_freq
Mark Input dependent function jsru_freq
Finalizing holmes17
Mark Input dependent function holmes17
Finalizing parwave
Mark Input dependent function parwave
Finalizing parwave18
Mark Input dependent function parwave18
Finalizing parwave17
Mark Input dependent function parwave17
Finalizing clip
Mark Input dependent function clip
Finalizing clip1
Mark Input dependent function clip1
Finalizing clip0
Mark Input dependent function clip0
Finalizing overload_warning
Mark Input dependent function overload_warning
Finalizing overload_warning0
Mark Input dependent function overload_warning0
Finalizing dBconvert
Mark Input dependent function dBconvert
Finalizing parwave16
Mark Input dependent function parwave16
Finalizing parwave15
Mark Input dependent function parwave15
Finalizing parwave14
Mark Input dependent function parwave14
Finalizing parwave13
Mark Input dependent function parwave13
Finalizing parwave12
Mark Input dependent function parwave12
Finalizing parwave11
Mark Input dependent function parwave11
Finalizing parwave10
Mark Input dependent function parwave10
Finalizing parwave9
Mark Input dependent function parwave9
Finalizing parwave8
Mark Input dependent function parwave8
Finalizing antiresonator
Mark Input dependent function antiresonator
Finalizing parwave7
Mark Input dependent function parwave7
Finalizing parwave6
Mark Input dependent function parwave6
Finalizing parwave5
Mark Input dependent function parwave5
Finalizing pitch_synch_par_reset
Mark Input dependent function pitch_synch_par_reset
Finalizing pitch_synch_par_reset8
Mark Input dependent function pitch_synch_par_reset8
Finalizing pitch_synch_par_reset7
Mark Input dependent function pitch_synch_par_reset7
Finalizing pitch_synch_par_reset6
Mark Input dependent function pitch_synch_par_reset6
Finalizing pitch_synch_par_reset5
Mark Input dependent function pitch_synch_par_reset5
Finalizing pitch_synch_par_reset4
Mark Input dependent function pitch_synch_par_reset4
Finalizing pitch_synch_par_reset3
Mark Input dependent function pitch_synch_par_reset3
Finalizing pitch_synch_par_reset2
Mark Input dependent function pitch_synch_par_reset2
Finalizing pitch_synch_par_reset1
Mark Input dependent function pitch_synch_par_reset1
Finalizing pitch_synch_par_reset0
Mark Input dependent function pitch_synch_par_reset0
Finalizing parwave4
Mark Input dependent function parwave4
Finalizing natural_source
Mark Input dependent function natural_source
Finalizing natural_source1
Mark Input dependent function natural_source1
Finalizing natural_source0
Mark Input dependent function natural_source0
Finalizing parwave3
Mark Input dependent function parwave3
Finalizing impulsive_source
Mark Input dependent function impulsive_source
Finalizing resonator
Mark Input dependent function resonator
Finalizing impulsive_source0
Mark Input dependent function impulsive_source0
Finalizing parwave2
Mark Input dependent function parwave2
Finalizing parwave1
Mark Input dependent function parwave1
Finalizing parwave0
Mark Input dependent function parwave0
Finalizing flutter
Mark Input dependent function flutter
Finalizing flutter0
Mark Input dependent function flutter0
Finalizing frame_init
Mark Input dependent function frame_init
Finalizing frame_init4
Mark Input dependent function frame_init4
Finalizing setabcg
Mark Input dependent function setabcg
Finalizing setabcg0
Mark Input dependent function setabcg0
Finalizing setzeroabc
Mark Input dependent function setzeroabc
Finalizing setzeroabc0
Mark Input dependent function setzeroabc0
Finalizing frame_init3
Mark Input dependent function frame_init3
Finalizing frame_init2
Mark Input dependent function frame_init2
Finalizing frame_init1
Mark Input dependent function frame_init1
Finalizing frame_init0
Mark Input dependent function frame_init0
Finalizing DBtoLIN
Mark Input dependent function DBtoLIN
Finalizing DBtoLIN0
Mark Input dependent function DBtoLIN0
Finalizing filter
Mark Input dependent function filter
Finalizing interpolate
Mark Input dependent function interpolate
Finalizing interpolate3
Mark Input dependent function interpolate3
Finalizing interpolate2
Mark Input dependent function interpolate2
Finalizing interpolate1
Mark Input dependent function interpolate1
Finalizing interpolate0
Mark Input dependent function interpolate0
Finalizing linear
Mark Input dependent function linear
Finalizing linear2
Mark Input dependent function linear2
Finalizing linear1
Mark Input dependent function linear1
Finalizing linear0
Mark Input dependent function linear0
Finalizing holmes16
Mark Input dependent function holmes16
Finalizing holmes15
Mark Input dependent function holmes15
Finalizing holmes14
Mark Input dependent function holmes14
Finalizing holmes13
Mark Input dependent function holmes13
Finalizing holmes12
Mark Input dependent function holmes12
Finalizing holmes11
Mark Input dependent function holmes11
Finalizing holmes10
Mark Input dependent function holmes10
Finalizing holmes9
Mark Input dependent function holmes9
Finalizing holmes8
Mark Input dependent function holmes8
Finalizing holmes7
Mark Input dependent function holmes7
Finalizing holmes6
Mark Input dependent function holmes6
Finalizing holmes5
Mark Input dependent function holmes5
Finalizing holmes4
Mark Input dependent function holmes4
Finalizing set_trans
Mark Input dependent function set_trans
Finalizing set_trans1
Mark Input dependent function set_trans1
Finalizing set_trans0
Mark Input dependent function set_trans0
Finalizing holmes3
Mark Input dependent function holmes3
Finalizing holmes2
Mark Input dependent function holmes2
Finalizing parwave_init
Mark Input dependent function parwave_init
Finalizing parwave_init0
Mark Input dependent function parwave_init0
Finalizing setabc
Mark Input dependent function setabc
Finalizing setabc0
Mark Input dependent function setabc0
Finalizing holmes1
Mark Input dependent function holmes1
Finalizing holmes0
Mark Input dependent function holmes0
Finalizing say_phones0
Mark Input dependent function say_phones0
Finalizing phone_to_elm
Mark Input dependent function phone_to_elm
Finalizing phone_to_elm2
Mark Input dependent function phone_to_elm2
Finalizing phone_to_elm1
Mark Input dependent function phone_to_elm1
Finalizing trie_lookup
Mark Input dependent function trie_lookup
Finalizing trie_lookup3
Mark Input dependent function trie_lookup3
Finalizing trie_lookup2
Mark Input dependent function trie_lookup2
Finalizing trie_lookup1
Mark Input dependent function trie_lookup1
Finalizing trie_lookup0
Mark Input dependent function trie_lookup0
Finalizing enter_phonemes
Mark Input dependent function enter_phonemes
Finalizing enter
Mark Input dependent function enter
Finalizing enter2
Mark Input dependent function enter2
Finalizing trie_insert
Mark Input dependent function trie_insert
Finalizing trie_insert3
Mark Input dependent function trie_insert3
Finalizing trie_insert2
Mark Input dependent function trie_insert2
Finalizing trie_insert1
Mark Input dependent function trie_insert1
Finalizing trie_insert0
Mark Input dependent function trie_insert0
Finalizing enter1
Mark Input dependent function enter1
Finalizing enter0
Mark Input dependent function enter0
Finalizing find_elm
Mark Input dependent function find_elm
Finalizing find_elm1
Mark Input dependent function find_elm1
Finalizing find_elm0
Mark Input dependent function find_elm0
Finalizing phone_to_elm0
Mark Input dependent function phone_to_elm0
Finalizing darray_init
Mark Input dependent function darray_init
Finalizing darray_init0
Mark Input dependent function darray_init0
Finalizing darray_find
Mark Input dependent function darray_find
Finalizing darray_find1
Mark Input dependent function darray_find1
Finalizing darray_find0
Mark Input dependent function darray_find0
Finalizing xlate_string13
Mark Input dependent function xlate_string13
Finalizing xlate_string10
Mark Input dependent function xlate_string10
Finalizing xlate_cardinal8
Mark Input dependent function xlate_cardinal8
Finalizing xlate_cardinal7
Mark Input dependent function xlate_cardinal7
Finalizing xlate_cardinal5
Mark Input dependent function xlate_cardinal5
Finalizing xlate_cardinal3
Mark Input dependent function xlate_cardinal3
Finalizing xlate_cardinal1
Mark Input dependent function xlate_cardinal1
Finalizing xlate_string8
Mark Input dependent function xlate_string8
Finalizing xlate_string7
Mark Input dependent function xlate_string7
Finalizing xlate_string6
Mark Input dependent function xlate_string6
Finalizing xlate_string4
Mark Input dependent function xlate_string4
Finalizing xlate_word12
Mark Input dependent function xlate_word12
Finalizing xlate_word11
Mark Input dependent function xlate_word11
Finalizing xlate_word10
Mark Input dependent function xlate_word10
Finalizing xlate_word9
Mark Input dependent function xlate_word9
Finalizing NRL
Mark Input dependent function NRL
Finalizing guess_word
Mark Input dependent function guess_word
Finalizing guess_word1
Mark Input dependent function guess_word1
Finalizing find_rule
Mark Input dependent function find_rule
Finalizing find_rule3
Mark Input dependent function find_rule3
Finalizing rightmatch
Mark Input dependent function rightmatch
Finalizing rightmatch13
Mark Input dependent function rightmatch13
Finalizing rightmatch12
Mark Input dependent function rightmatch12
Finalizing rightmatch11
Mark Input dependent function rightmatch11
Finalizing rightmatch10
Mark Input dependent function rightmatch10
Finalizing rightmatch9
Mark Input dependent function rightmatch9
Finalizing rightmatch8
Mark Input dependent function rightmatch8
Finalizing rightmatch7
Mark Input dependent function rightmatch7
Finalizing rightmatch6
Mark Input dependent function rightmatch6
Finalizing rightmatch5
Mark Input dependent function rightmatch5
Finalizing rightmatch4
Mark Input dependent function rightmatch4
Finalizing rightmatch3
Mark Input dependent function rightmatch3
Finalizing rightmatch2
Mark Input dependent function rightmatch2
Finalizing rightmatch1
Mark Input dependent function rightmatch1
Finalizing rightmatch0
Mark Input dependent function rightmatch0
Finalizing leftmatch
Mark Input dependent function leftmatch
Finalizing leftmatch9
Mark Input dependent function leftmatch9
Finalizing leftmatch8
Mark Input dependent function leftmatch8
Finalizing leftmatch7
Mark Input dependent function leftmatch7
Finalizing leftmatch6
Mark Input dependent function leftmatch6
Finalizing leftmatch5
Mark Input dependent function leftmatch5
Finalizing leftmatch4
Mark Input dependent function leftmatch4
Finalizing isconsonant
Mark Input dependent function isconsonant
Finalizing leftmatch3
Mark Input dependent function leftmatch3
Finalizing leftmatch2
Mark Input dependent function leftmatch2
Finalizing isvowel
Mark Input dependent function isvowel
Finalizing leftmatch1
Mark Input dependent function leftmatch1
Finalizing leftmatch0
Mark Input dependent function leftmatch0
Finalizing find_rule2
Mark Input dependent function find_rule2
Finalizing find_rule1
Mark Input dependent function find_rule1
Finalizing find_rule0
Mark Input dependent function find_rule0
Finalizing guess_word0
Mark Input dependent function guess_word0
Finalizing NRL3
Mark Input dependent function NRL3
Finalizing NRL2
Mark Input dependent function NRL2
Finalizing NRL1
Mark Input dependent function NRL1
Finalizing NRL0
Mark Input dependent function NRL0
Finalizing xlate_word8
Mark Input dependent function xlate_word8
Finalizing xlate_word6
Mark Input dependent function xlate_word6
Finalizing xlate_word4
Mark Input dependent function xlate_word4
Finalizing xlate_word3
Mark Input dependent function xlate_word3
Finalizing xlate_word2
Mark Input dependent function xlate_word2
Finalizing phone_append
Mark Input dependent function phone_append
Finalizing darray_find.446
Mark Input dependent function darray_find.446
Finalizing darray_find.4461
Mark Input dependent function darray_find.4461
Finalizing Darray_find
Mark Input dependent function Darray_find
Finalizing Darray_find4
Mark Input dependent function Darray_find4
Finalizing Darray_find3
Mark Input dependent function Darray_find3
Finalizing Darray_find2
Mark Input dependent function Darray_find2
Finalizing Darray_find1
Mark Input dependent function Darray_find1
Finalizing Darray_find0
Mark Input dependent function Darray_find0
Finalizing darray_find.4460
Mark Input dependent function darray_find.4460
Finalizing xlate_word1
Mark Input dependent function xlate_word1
Finalizing xlate_word0
Mark Input dependent function xlate_word0
Finalizing dict_find
Mark Input dependent function dict_find
Finalizing suspect_word
Mark Input dependent function suspect_word
Finalizing suspect_word2
Mark Input dependent function suspect_word2
Finalizing suspect_word1
Mark Input dependent function suspect_word1
Finalizing suspect_word0
Mark Input dependent function suspect_word0
Finalizing xlate_string2
Mark Input dependent function xlate_string2
Finalizing xlate_string1
Mark Input dependent function xlate_string1
Finalizing xlate_string0
Mark Input dependent function xlate_string0
Finalizing spell_out0
Mark Input dependent function spell_out0
Finished input dependency analysis

In  mark function pass 
In  filter function pass 
Filter file:/home/anahitik/SIP/sip-eval/combination/say.x.bc/50/0
here!:xlate_ordinal2
here!:leftmatch6
here!:jsru_save
here!:rightmatch
here!:holmes9
here!:rightmatch12
here!:xlate_string0
here!:overload_warning0
here!:enter0
here!:getargs18
here!:parwave12
here!:rightmatch13
here!:parwave6
here!:xlate_string12
here!:darray_find.4461
here!:antiresonator
here!:darray_find0
here!:Darray_find
here!:main1
here!:parwave1
here!:getargs21
here!:concat_args4
here!:audio_open0
here!:parwave3
here!:natural_source
here!:rightmatch8
here!:init_synth1
here!:isvowel
here!:pitch_synch_par_reset5
here!:holmes15
here!:jsru_freq
here!:audio_init3
here!:pitch_synch_par_reset8
here!:holmes1
here!:getargs22
here!:xlate_ordinal
here!:Darray_find4
here!:wblong0
here!:darray_find.731
here!:audio_term
here!:init_holmes1
here!:darray_free1
here!:xlate_cardinal6
here!:say_file
here!:flutter
here!:parwave11
here!:find_elm
here!:parwave10
here!:xlate_cardinal5
here!:NRL3
here!:rightmatch5
here!:trie_lookup3
here!:audio_init1
here!:darray_find.73
here!:suspect_word0
here!:linear0
here!:darray_fget
here!:interpolate1
here!:leftmatch9
here!:xlate_word3
here!:holmes13
here!:spell_out0
here!:file_init1
here!:parwave_init0
here!:xlate_string13
here!:say_phones0
here!:set_trans1
here!:impulsive_source
here!:aufile_write3
here!:xlate_string18
here!:linear
here!:spell_out
here!:overload_warning
here!:show_parms
here!:xlate_string8
here!:parwave2
here!:set_trans
here!:NRL2
here!:xlate_ordinal9
here!:main3
here!:init_holmes0
here!:audio_term1
here!:say_string0
here!:getargs
here!:file_init2
here!:darray_free
here!:xlate_cardinal2
here!:setabc0
here!:xlate_cardinal3
here!:file_init5
here!:parwave_init
here!:leftmatch7
here!:parwave13
here!:linear2
here!:holmes8
here!:phone_append
here!:darray_delete
here!:xlate_ordinal11
here!:audio_open
here!:getargs8
here!:pitch_synch_par_reset3
here!:xlate_word4
here!:xlate_cardinal9
here!:xlate_string9
here!:xlate_word12
here!:xlate_string1
here!:concat_args0
here!:concat_args
here!:say_string
here!:file_init0
here!:rightmatch4
here!:aufile_write5
here!:parwave14
here!:dict_term
here!:holmes6
here!:wblong
here!:init_holmes3
here!:rightmatch0
here!:audio_play2
here!:frame_init2
here!:trie_insert2
here!:trie_lookup
here!:leftmatch0
here!:rightmatch7
here!:parwave16
here!:find_elm0
here!:concat_args3
here!:parwave15
here!:Darray_find0
here!:find_rule3
here!:holmes12
here!:suspect_word1
here!:parwave17
here!:audio_play0
here!:frame_init
here!:holmes7
here!:getargs2
here!:trie_insert0
here!:rightmatch6
here!:init_holmes2
here!:xlate_string10
here!:NRL1
here!:xlate_string15
here!:xlate_word
here!:suspect_word
here!:holmes17
here!:xlate_string20
here!:phone_to_elm2
here!:impulsive_source0
here!:getargs5
here!:getargs15
here!:holmes14
here!:enter
here!:init_holmes
here!:getargs9
here!:darray_find.4460
here!:trie_insert1
here!:xlate_string6
here!:rightmatch9
here!:Darray_find1
here!:rightmatch10
here!:dBconvert
here!:flutter0
here!:NRL
here!:Darray_find3
here!:term_holmes0
here!:spell_out1
here!:xlate_ordinal8
here!:audio_term0
here!:darray_delete0
here!:xlate_string3
here!:leftmatch5
here!:phone_to_elm
here!:darray_find
here!:trie_lookup1
here!:getargs10
here!:dict_find
here!:holmes4
here!:find_rule
here!:aufile_write0
here!:parwave4
here!:main2
here!:main2
got filter function names
Add filter function spell_out
FunctionInfo. Adding function:spell_out
did not find fprintf demangled to fprintf
did not find xlate_string demangled to xlate_string
did not find __ctype_b_loc demangled to __ctype_b_loc
Add filter function suspect_word
FunctionInfo. Adding function:suspect_word
Add filter function xlate_word
FunctionInfo. Adding function:xlate_word
did not find strchr demangled to strchr
Add filter function darray_find
FunctionInfo. Adding function:darray_find
did not find say_phones demangled to say_phones
did not find darray_init demangled to darray_init
did not find malloc demangled to malloc
did not find free demangled to free
did not find toupper demangled to toupper
Add filter function concat_args
FunctionInfo. Adding function:concat_args
did not find strlen demangled to strlen
Add filter function say_string
FunctionInfo. Adding function:say_string
Add filter function darray_fget
FunctionInfo. Adding function:darray_fget
did not find fgetc demangled to fgetc
Add filter function say_file
FunctionInfo. Adding function:say_file
did not find main demangled to main
did not find xlate_cardinal demangled to xlate_cardinal
Add filter function xlate_ordinal
FunctionInfo. Adding function:xlate_ordinal
Add filter function darray_free
FunctionInfo. Adding function:darray_free
Add filter function Darray_find
FunctionInfo. Adding function:Darray_find
did not find abort demangled to abort
did not find llvm.memcpy.p0i8.p0i8.i64 demangled to llvm.memcpy.p0i8.p0i8.i64
did not find llvm.memset.p0i8.i64 demangled to llvm.memset.p0i8.i64
Add filter function darray_delete
FunctionInfo. Adding function:darray_delete
Add filter function darray_find.73
FunctionInfo. Adding function:darray_find.73
Add filter function isvowel
FunctionInfo. Adding function:isvowel
did not find isconsonant demangled to isconsonant
Add filter function NRL
FunctionInfo. Adding function:NRL
did not find phone_cat demangled to phone_cat
did not find guess_word demangled to guess_word
Add filter function find_rule
FunctionInfo. Adding function:find_rule
did not find leftmatch demangled to leftmatch
Add filter function rightmatch
FunctionInfo. Adding function:rightmatch
did not find trie_insert demangled to trie_insert
Add filter function trie_lookup
FunctionInfo. Adding function:trie_lookup
Add filter function phone_append
FunctionInfo. Adding function:phone_append
did not find darray_find.446 demangled to darray_find.446
Add filter function phone_to_elm
FunctionInfo. Adding function:phone_to_elm
did not find enter_phonemes demangled to enter_phonemes
Add filter function enter
FunctionInfo. Adding function:enter
did not find llvm.va_start demangled to llvm.va_start
Add filter function find_elm
FunctionInfo. Adding function:find_elm
did not find llvm.va_end demangled to llvm.va_end
did not find strcmp demangled to strcmp
did not find holmes demangled to holmes
Add filter function set_trans
FunctionInfo. Adding function:set_trans
did not find interpolate demangled to interpolate
did not find filter demangled to filter
Add filter function jsru_save
FunctionInfo. Adding function:jsru_save
did not find log demangled to log
Add filter function jsru_freq
FunctionInfo. Adding function:jsru_freq
did not find fputc demangled to fputc
did not find jsru_amp demangled to jsru_amp
Add filter function linear
FunctionInfo. Adding function:linear
Add filter function init_holmes
FunctionInfo. Adding function:init_holmes
did not find fopen demangled to fopen
did not find perror demangled to perror
did not find term_holmes demangled to term_holmes
did not find fclose demangled to fclose
Add filter function show_parms
FunctionInfo. Adding function:show_parms
did not find printf demangled to printf
did not find parwave demangled to parwave
Add filter function frame_init
FunctionInfo. Adding function:frame_init
Add filter function flutter
FunctionInfo. Adding function:flutter
Add filter function impulsive_source
FunctionInfo. Adding function:impulsive_source
Add filter function natural_source
FunctionInfo. Adding function:natural_source
did not find pitch_synch_par_reset demangled to pitch_synch_par_reset
did not find resonator demangled to resonator
Add filter function antiresonator
FunctionInfo. Adding function:antiresonator
did not find clip demangled to clip
Add filter function overload_warning
FunctionInfo. Adding function:overload_warning
Add filter function dBconvert
FunctionInfo. Adding function:dBconvert
did not find log10 demangled to log10
did not find DBtoLIN demangled to DBtoLIN
did not find setabc demangled to setabc
did not find exp demangled to exp
did not find cos demangled to cos
did not find sin demangled to sin
did not find setzeroabc demangled to setzeroabc
did not find setabcg demangled to setabcg
Add filter function parwave_init
FunctionInfo. Adding function:parwave_init
did not find init_synth demangled to init_synth
did not find au_header demangled to au_header
Add filter function wblong
FunctionInfo. Adding function:wblong
did not find write demangled to write
did not find file_init demangled to file_init
did not find open demangled to open
did not find aufile_write demangled to aufile_write
did not find aufile_term demangled to aufile_term
did not find lseek demangled to lseek
did not find ftruncate demangled to ftruncate
did not find close demangled to close
Add filter function dict_find
FunctionInfo. Adding function:dict_find
did not find dict_init demangled to dict_init
Add filter function dict_term
FunctionInfo. Adding function:dict_term
Add filter function getargs
FunctionInfo. Adding function:getargs
did not find __isoc99_sscanf demangled to __isoc99_sscanf
did not find audio_init demangled to audio_init
Add filter function audio_open
FunctionInfo. Adding function:audio_open
did not find ioctl demangled to ioctl
Add filter function audio_term
FunctionInfo. Adding function:audio_term
did not find audio_play demangled to audio_play
did not find exit demangled to exit
Add filter function spell_out0
FunctionInfo. Adding function:spell_out0
Add filter function spell_out1
FunctionInfo. Adding function:spell_out1
Add filter function xlate_string0
FunctionInfo. Adding function:xlate_string0
Add filter function xlate_string1
FunctionInfo. Adding function:xlate_string1
did not find xlate_string2 demangled to xlate_string2
Add filter function xlate_string3
FunctionInfo. Adding function:xlate_string3
did not find xlate_string4 demangled to xlate_string4
did not find xlate_string5 demangled to xlate_string5
Add filter function xlate_string6
FunctionInfo. Adding function:xlate_string6
did not find xlate_string7 demangled to xlate_string7
Add filter function xlate_string8
FunctionInfo. Adding function:xlate_string8
Add filter function xlate_string9
FunctionInfo. Adding function:xlate_string9
Add filter function xlate_string10
FunctionInfo. Adding function:xlate_string10
did not find xlate_string11 demangled to xlate_string11
Add filter function xlate_string12
FunctionInfo. Adding function:xlate_string12
Add filter function xlate_string13
FunctionInfo. Adding function:xlate_string13
did not find xlate_string14 demangled to xlate_string14
Add filter function xlate_string15
FunctionInfo. Adding function:xlate_string15
did not find xlate_string16 demangled to xlate_string16
did not find xlate_string17 demangled to xlate_string17
Add filter function xlate_string18
FunctionInfo. Adding function:xlate_string18
did not find xlate_string19 demangled to xlate_string19
Add filter function xlate_string20
FunctionInfo. Adding function:xlate_string20
did not find xlate_string21 demangled to xlate_string21
did not find xlate_string22 demangled to xlate_string22
Add filter function suspect_word0
FunctionInfo. Adding function:suspect_word0
Add filter function suspect_word1
FunctionInfo. Adding function:suspect_word1
did not find suspect_word2 demangled to suspect_word2
did not find xlate_word0 demangled to xlate_word0
did not find xlate_word1 demangled to xlate_word1
did not find xlate_word2 demangled to xlate_word2
Add filter function xlate_word3
FunctionInfo. Adding function:xlate_word3
Add filter function xlate_word4
FunctionInfo. Adding function:xlate_word4
did not find xlate_word5 demangled to xlate_word5
did not find xlate_word6 demangled to xlate_word6
did not find xlate_word7 demangled to xlate_word7
did not find xlate_word8 demangled to xlate_word8
did not find xlate_word9 demangled to xlate_word9
did not find xlate_word10 demangled to xlate_word10
did not find xlate_word11 demangled to xlate_word11
Add filter function xlate_word12
FunctionInfo. Adding function:xlate_word12
Add filter function darray_find0
FunctionInfo. Adding function:darray_find0
did not find darray_find1 demangled to darray_find1
Add filter function say_phones0
FunctionInfo. Adding function:say_phones0
did not find say_phones1 demangled to say_phones1
did not find say_phones2 demangled to say_phones2
did not find darray_init0 demangled to darray_init0
Add filter function concat_args0
FunctionInfo. Adding function:concat_args0
did not find concat_args1 demangled to concat_args1
did not find concat_args2 demangled to concat_args2
Add filter function concat_args3
FunctionInfo. Adding function:concat_args3
Add filter function concat_args4
FunctionInfo. Adding function:concat_args4
did not find concat_args5 demangled to concat_args5
did not find concat_args6 demangled to concat_args6
Add filter function say_string0
FunctionInfo. Adding function:say_string0
did not find say_file0 demangled to say_file0
did not find say_file1 demangled to say_file1
did not find main0 demangled to main0
Add filter function main1
FunctionInfo. Adding function:main1
Add filter function main2
FunctionInfo. Adding function:main2
Add filter function main3
FunctionInfo. Adding function:main3
did not find xlate_cardinal0 demangled to xlate_cardinal0
did not find xlate_cardinal1 demangled to xlate_cardinal1
Add filter function xlate_cardinal2
FunctionInfo. Adding function:xlate_cardinal2
Add filter function xlate_cardinal3
FunctionInfo. Adding function:xlate_cardinal3
did not find xlate_cardinal4 demangled to xlate_cardinal4
Add filter function xlate_cardinal5
FunctionInfo. Adding function:xlate_cardinal5
Add filter function xlate_cardinal6
FunctionInfo. Adding function:xlate_cardinal6
did not find xlate_cardinal7 demangled to xlate_cardinal7
did not find xlate_cardinal8 demangled to xlate_cardinal8
Add filter function xlate_cardinal9
FunctionInfo. Adding function:xlate_cardinal9
did not find xlate_ordinal0 demangled to xlate_ordinal0
did not find xlate_ordinal1 demangled to xlate_ordinal1
Add filter function xlate_ordinal2
FunctionInfo. Adding function:xlate_ordinal2
did not find xlate_ordinal3 demangled to xlate_ordinal3
did not find xlate_ordinal4 demangled to xlate_ordinal4
did not find xlate_ordinal5 demangled to xlate_ordinal5
did not find xlate_ordinal6 demangled to xlate_ordinal6
did not find xlate_ordinal7 demangled to xlate_ordinal7
Add filter function xlate_ordinal8
FunctionInfo. Adding function:xlate_ordinal8
Add filter function xlate_ordinal9
FunctionInfo. Adding function:xlate_ordinal9
did not find xlate_ordinal10 demangled to xlate_ordinal10
Add filter function xlate_ordinal11
FunctionInfo. Adding function:xlate_ordinal11
did not find darray_free0 demangled to darray_free0
Add filter function darray_free1
FunctionInfo. Adding function:darray_free1
Add filter function Darray_find0
FunctionInfo. Adding function:Darray_find0
Add filter function Darray_find1
FunctionInfo. Adding function:Darray_find1
did not find Darray_find2 demangled to Darray_find2
Add filter function Darray_find3
FunctionInfo. Adding function:Darray_find3
Add filter function Darray_find4
FunctionInfo. Adding function:Darray_find4
Add filter function darray_delete0
FunctionInfo. Adding function:darray_delete0
did not find darray_delete1 demangled to darray_delete1
did not find darray_find.730 demangled to darray_find.730
Add filter function darray_find.731
FunctionInfo. Adding function:darray_find.731
did not find NRL0 demangled to NRL0
Add filter function NRL1
FunctionInfo. Adding function:NRL1
Add filter function NRL2
FunctionInfo. Adding function:NRL2
Add filter function NRL3
FunctionInfo. Adding function:NRL3
did not find phone_cat0 demangled to phone_cat0
did not find phone_cat1 demangled to phone_cat1
did not find guess_word0 demangled to guess_word0
did not find guess_word1 demangled to guess_word1
did not find find_rule0 demangled to find_rule0
did not find find_rule1 demangled to find_rule1
did not find find_rule2 demangled to find_rule2
Add filter function find_rule3
FunctionInfo. Adding function:find_rule3
Add filter function leftmatch0
FunctionInfo. Adding function:leftmatch0
did not find leftmatch1 demangled to leftmatch1
did not find leftmatch2 demangled to leftmatch2
did not find leftmatch3 demangled to leftmatch3
did not find leftmatch4 demangled to leftmatch4
Add filter function leftmatch5
FunctionInfo. Adding function:leftmatch5
Add filter function leftmatch6
FunctionInfo. Adding function:leftmatch6
Add filter function leftmatch7
FunctionInfo. Adding function:leftmatch7
did not find leftmatch8 demangled to leftmatch8
Add filter function leftmatch9
FunctionInfo. Adding function:leftmatch9
Add filter function rightmatch0
FunctionInfo. Adding function:rightmatch0
did not find rightmatch1 demangled to rightmatch1
did not find rightmatch2 demangled to rightmatch2
did not find rightmatch3 demangled to rightmatch3
Add filter function rightmatch4
FunctionInfo. Adding function:rightmatch4
Add filter function rightmatch5
FunctionInfo. Adding function:rightmatch5
Add filter function rightmatch6
FunctionInfo. Adding function:rightmatch6
Add filter function rightmatch7
FunctionInfo. Adding function:rightmatch7
Add filter function rightmatch8
FunctionInfo. Adding function:rightmatch8
Add filter function rightmatch9
FunctionInfo. Adding function:rightmatch9
Add filter function rightmatch10
FunctionInfo. Adding function:rightmatch10
did not find rightmatch11 demangled to rightmatch11
Add filter function rightmatch12
FunctionInfo. Adding function:rightmatch12
Add filter function rightmatch13
FunctionInfo. Adding function:rightmatch13
Add filter function trie_insert0
FunctionInfo. Adding function:trie_insert0
Add filter function trie_insert1
FunctionInfo. Adding function:trie_insert1
Add filter function trie_insert2
FunctionInfo. Adding function:trie_insert2
did not find trie_insert3 demangled to trie_insert3
did not find trie_lookup0 demangled to trie_lookup0
Add filter function trie_lookup1
FunctionInfo. Adding function:trie_lookup1
did not find trie_lookup2 demangled to trie_lookup2
Add filter function trie_lookup3
FunctionInfo. Adding function:trie_lookup3
Add filter function darray_find.4460
FunctionInfo. Adding function:darray_find.4460
Add filter function darray_find.4461
FunctionInfo. Adding function:darray_find.4461
did not find phone_to_elm0 demangled to phone_to_elm0
did not find phone_to_elm1 demangled to phone_to_elm1
Add filter function phone_to_elm2
FunctionInfo. Adding function:phone_to_elm2
Add filter function enter0
FunctionInfo. Adding function:enter0
did not find enter1 demangled to enter1
did not find enter2 demangled to enter2
Add filter function find_elm0
FunctionInfo. Adding function:find_elm0
did not find find_elm1 demangled to find_elm1
did not find holmes0 demangled to holmes0
Add filter function holmes1
FunctionInfo. Adding function:holmes1
did not find holmes2 demangled to holmes2
did not find holmes3 demangled to holmes3
Add filter function holmes4
FunctionInfo. Adding function:holmes4
did not find holmes5 demangled to holmes5
Add filter function holmes6
FunctionInfo. Adding function:holmes6
Add filter function holmes7
FunctionInfo. Adding function:holmes7
Add filter function holmes8
FunctionInfo. Adding function:holmes8
Add filter function holmes9
FunctionInfo. Adding function:holmes9
did not find holmes10 demangled to holmes10
did not find holmes11 demangled to holmes11
Add filter function holmes12
FunctionInfo. Adding function:holmes12
Add filter function holmes13
FunctionInfo. Adding function:holmes13
Add filter function holmes14
FunctionInfo. Adding function:holmes14
Add filter function holmes15
FunctionInfo. Adding function:holmes15
did not find holmes16 demangled to holmes16
Add filter function holmes17
FunctionInfo. Adding function:holmes17
did not find holmes18 demangled to holmes18
did not find holmes19 demangled to holmes19
did not find holmes20 demangled to holmes20
did not find holmes21 demangled to holmes21
did not find holmes22 demangled to holmes22
did not find set_trans0 demangled to set_trans0
Add filter function set_trans1
FunctionInfo. Adding function:set_trans1
did not find interpolate0 demangled to interpolate0
Add filter function interpolate1
FunctionInfo. Adding function:interpolate1
did not find interpolate2 demangled to interpolate2
did not find interpolate3 demangled to interpolate3
did not find jsru_save0 demangled to jsru_save0
Add filter function linear0
FunctionInfo. Adding function:linear0
did not find linear1 demangled to linear1
Add filter function linear2
FunctionInfo. Adding function:linear2
Add filter function init_holmes0
FunctionInfo. Adding function:init_holmes0
Add filter function init_holmes1
FunctionInfo. Adding function:init_holmes1
Add filter function init_holmes2
FunctionInfo. Adding function:init_holmes2
Add filter function init_holmes3
FunctionInfo. Adding function:init_holmes3
Add filter function term_holmes0
FunctionInfo. Adding function:term_holmes0
did not find term_holmes1 demangled to term_holmes1
did not find show_parms0 demangled to show_parms0
did not find show_parms1 demangled to show_parms1
did not find parwave0 demangled to parwave0
Add filter function parwave1
FunctionInfo. Adding function:parwave1
Add filter function parwave2
FunctionInfo. Adding function:parwave2
Add filter function parwave3
FunctionInfo. Adding function:parwave3
Add filter function parwave4
FunctionInfo. Adding function:parwave4
did not find parwave5 demangled to parwave5
Add filter function parwave6
FunctionInfo. Adding function:parwave6
did not find parwave7 demangled to parwave7
did not find parwave8 demangled to parwave8
did not find parwave9 demangled to parwave9
Add filter function parwave10
FunctionInfo. Adding function:parwave10
Add filter function parwave11
FunctionInfo. Adding function:parwave11
Add filter function parwave12
FunctionInfo. Adding function:parwave12
Add filter function parwave13
FunctionInfo. Adding function:parwave13
Add filter function parwave14
FunctionInfo. Adding function:parwave14
Add filter function parwave15
FunctionInfo. Adding function:parwave15
Add filter function parwave16
FunctionInfo. Adding function:parwave16
Add filter function parwave17
FunctionInfo. Adding function:parwave17
did not find parwave18 demangled to parwave18
did not find frame_init0 demangled to frame_init0
did not find frame_init1 demangled to frame_init1
Add filter function frame_init2
FunctionInfo. Adding function:frame_init2
did not find frame_init3 demangled to frame_init3
did not find frame_init4 demangled to frame_init4
Add filter function flutter0
FunctionInfo. Adding function:flutter0
Add filter function impulsive_source0
FunctionInfo. Adding function:impulsive_source0
did not find natural_source0 demangled to natural_source0
did not find natural_source1 demangled to natural_source1
did not find pitch_synch_par_reset0 demangled to pitch_synch_par_reset0
did not find pitch_synch_par_reset1 demangled to pitch_synch_par_reset1
did not find pitch_synch_par_reset2 demangled to pitch_synch_par_reset2
Add filter function pitch_synch_par_reset3
FunctionInfo. Adding function:pitch_synch_par_reset3
did not find pitch_synch_par_reset4 demangled to pitch_synch_par_reset4
Add filter function pitch_synch_par_reset5
FunctionInfo. Adding function:pitch_synch_par_reset5
did not find pitch_synch_par_reset6 demangled to pitch_synch_par_reset6
did not find pitch_synch_par_reset7 demangled to pitch_synch_par_reset7
Add filter function pitch_synch_par_reset8
FunctionInfo. Adding function:pitch_synch_par_reset8
did not find clip0 demangled to clip0
did not find clip1 demangled to clip1
Add filter function overload_warning0
FunctionInfo. Adding function:overload_warning0
did not find DBtoLIN0 demangled to DBtoLIN0
Add filter function setabc0
FunctionInfo. Adding function:setabc0
did not find setzeroabc0 demangled to setzeroabc0
did not find setabcg0 demangled to setabcg0
Add filter function parwave_init0
FunctionInfo. Adding function:parwave_init0
did not find init_synth0 demangled to init_synth0
Add filter function init_synth1
FunctionInfo. Adding function:init_synth1
did not find au_header0 demangled to au_header0
Add filter function wblong0
FunctionInfo. Adding function:wblong0
Add filter function file_init0
FunctionInfo. Adding function:file_init0
Add filter function file_init1
FunctionInfo. Adding function:file_init1
Add filter function file_init2
FunctionInfo. Adding function:file_init2
did not find file_init3 demangled to file_init3
did not find file_init4 demangled to file_init4
Add filter function file_init5
FunctionInfo. Adding function:file_init5
Add filter function aufile_write0
FunctionInfo. Adding function:aufile_write0
did not find aufile_write1 demangled to aufile_write1
did not find aufile_write2 demangled to aufile_write2
Add filter function aufile_write3
FunctionInfo. Adding function:aufile_write3
did not find aufile_write4 demangled to aufile_write4
Add filter function aufile_write5
FunctionInfo. Adding function:aufile_write5
did not find aufile_write6 demangled to aufile_write6
did not find aufile_term0 demangled to aufile_term0
did not find aufile_term1 demangled to aufile_term1
did not find aufile_term2 demangled to aufile_term2
did not find getargs0 demangled to getargs0
did not find getargs1 demangled to getargs1
Add filter function getargs2
FunctionInfo. Adding function:getargs2
did not find getargs3 demangled to getargs3
did not find getargs4 demangled to getargs4
Add filter function getargs5
FunctionInfo. Adding function:getargs5
did not find getargs6 demangled to getargs6
did not find getargs7 demangled to getargs7
Add filter function getargs8
FunctionInfo. Adding function:getargs8
Add filter function getargs9
FunctionInfo. Adding function:getargs9
Add filter function getargs10
FunctionInfo. Adding function:getargs10
did not find getargs11 demangled to getargs11
did not find getargs12 demangled to getargs12
did not find getargs13 demangled to getargs13
did not find getargs14 demangled to getargs14
Add filter function getargs15
FunctionInfo. Adding function:getargs15
did not find getargs16 demangled to getargs16
did not find getargs17 demangled to getargs17
Add filter function getargs18
FunctionInfo. Adding function:getargs18
did not find getargs19 demangled to getargs19
did not find getargs20 demangled to getargs20
Add filter function getargs21
FunctionInfo. Adding function:getargs21
Add filter function getargs22
FunctionInfo. Adding function:getargs22
did not find getargs23 demangled to getargs23
did not find audio_init0 demangled to audio_init0
Add filter function audio_init1
FunctionInfo. Adding function:audio_init1
did not find audio_init2 demangled to audio_init2
Add filter function audio_init3
FunctionInfo. Adding function:audio_init3
Add filter function audio_open0
FunctionInfo. Adding function:audio_open0
Add filter function audio_term0
FunctionInfo. Adding function:audio_term0
Add filter function audio_term1
FunctionInfo. Adding function:audio_term1
Add filter function audio_play0
FunctionInfo. Adding function:audio_play0
did not find audio_play1 demangled to audio_play1
Add filter function audio_play2
FunctionInfo. Adding function:audio_play2
did not find audio_play3 demangled to audio_play3
Adding spell_out other functions, ExtractedOnly mode uses other functions
Adding xlate_string other functions, ExtractedOnly mode uses other functions
Adding suspect_word other functions, ExtractedOnly mode uses other functions
Adding xlate_word other functions, ExtractedOnly mode uses other functions
Adding darray_find other functions, ExtractedOnly mode uses other functions
Adding say_phones other functions, ExtractedOnly mode uses other functions
Adding darray_init other functions, ExtractedOnly mode uses other functions
Adding concat_args other functions, ExtractedOnly mode uses other functions
Adding say_string other functions, ExtractedOnly mode uses other functions
Adding darray_fget other functions, ExtractedOnly mode uses other functions
Adding say_file other functions, ExtractedOnly mode uses other functions
Adding main other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal other functions, ExtractedOnly mode uses other functions
Adding darray_free other functions, ExtractedOnly mode uses other functions
Adding Darray_find other functions, ExtractedOnly mode uses other functions
Adding darray_delete other functions, ExtractedOnly mode uses other functions
Adding darray_find.73 other functions, ExtractedOnly mode uses other functions
Adding isvowel other functions, ExtractedOnly mode uses other functions
Adding isconsonant other functions, ExtractedOnly mode uses other functions
Adding NRL other functions, ExtractedOnly mode uses other functions
Adding phone_cat other functions, ExtractedOnly mode uses other functions
Adding guess_word other functions, ExtractedOnly mode uses other functions
Adding find_rule other functions, ExtractedOnly mode uses other functions
Adding leftmatch other functions, ExtractedOnly mode uses other functions
Adding rightmatch other functions, ExtractedOnly mode uses other functions
Adding trie_insert other functions, ExtractedOnly mode uses other functions
Adding trie_lookup other functions, ExtractedOnly mode uses other functions
Adding phone_append other functions, ExtractedOnly mode uses other functions
Adding darray_find.446 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm other functions, ExtractedOnly mode uses other functions
Adding enter_phonemes other functions, ExtractedOnly mode uses other functions
Adding enter other functions, ExtractedOnly mode uses other functions
Adding find_elm other functions, ExtractedOnly mode uses other functions
Adding holmes other functions, ExtractedOnly mode uses other functions
Adding set_trans other functions, ExtractedOnly mode uses other functions
Adding interpolate other functions, ExtractedOnly mode uses other functions
Adding filter other functions, ExtractedOnly mode uses other functions
Adding jsru_save other functions, ExtractedOnly mode uses other functions
Adding jsru_freq other functions, ExtractedOnly mode uses other functions
Adding jsru_amp other functions, ExtractedOnly mode uses other functions
Adding linear other functions, ExtractedOnly mode uses other functions
Adding init_holmes other functions, ExtractedOnly mode uses other functions
Adding term_holmes other functions, ExtractedOnly mode uses other functions
Adding show_parms other functions, ExtractedOnly mode uses other functions
Adding parwave other functions, ExtractedOnly mode uses other functions
Adding frame_init other functions, ExtractedOnly mode uses other functions
Adding flutter other functions, ExtractedOnly mode uses other functions
Adding impulsive_source other functions, ExtractedOnly mode uses other functions
Adding natural_source other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset other functions, ExtractedOnly mode uses other functions
Adding resonator other functions, ExtractedOnly mode uses other functions
Adding antiresonator other functions, ExtractedOnly mode uses other functions
Adding clip other functions, ExtractedOnly mode uses other functions
Adding overload_warning other functions, ExtractedOnly mode uses other functions
Adding dBconvert other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN other functions, ExtractedOnly mode uses other functions
Adding setabc other functions, ExtractedOnly mode uses other functions
Adding setzeroabc other functions, ExtractedOnly mode uses other functions
Adding setabcg other functions, ExtractedOnly mode uses other functions
Adding parwave_init other functions, ExtractedOnly mode uses other functions
Adding init_synth other functions, ExtractedOnly mode uses other functions
Adding au_header other functions, ExtractedOnly mode uses other functions
Adding wblong other functions, ExtractedOnly mode uses other functions
Adding file_init other functions, ExtractedOnly mode uses other functions
Adding aufile_write other functions, ExtractedOnly mode uses other functions
Adding aufile_term other functions, ExtractedOnly mode uses other functions
Adding dict_find other functions, ExtractedOnly mode uses other functions
Adding dict_init other functions, ExtractedOnly mode uses other functions
Adding dict_term other functions, ExtractedOnly mode uses other functions
Adding getargs other functions, ExtractedOnly mode uses other functions
Adding audio_init other functions, ExtractedOnly mode uses other functions
Adding audio_open other functions, ExtractedOnly mode uses other functions
Adding audio_term other functions, ExtractedOnly mode uses other functions
Adding audio_play other functions, ExtractedOnly mode uses other functions
Adding spell_out0 other functions, ExtractedOnly mode uses other functions
Adding spell_out1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string0 other functions, ExtractedOnly mode uses other functions
Adding xlate_string1 other functions, ExtractedOnly mode uses other functions
Adding xlate_string2 other functions, ExtractedOnly mode uses other functions
Adding xlate_string3 other functions, ExtractedOnly mode uses other functions
Adding xlate_string4 other functions, ExtractedOnly mode uses other functions
Adding xlate_string5 other functions, ExtractedOnly mode uses other functions
Adding xlate_string6 other functions, ExtractedOnly mode uses other functions
Adding xlate_string7 other functions, ExtractedOnly mode uses other functions
Adding xlate_string8 other functions, ExtractedOnly mode uses other functions
Adding xlate_string9 other functions, ExtractedOnly mode uses other functions
Adding xlate_string10 other functions, ExtractedOnly mode uses other functions
Adding xlate_string11 other functions, ExtractedOnly mode uses other functions
Adding xlate_string12 other functions, ExtractedOnly mode uses other functions
Adding xlate_string13 other functions, ExtractedOnly mode uses other functions
Adding xlate_string14 other functions, ExtractedOnly mode uses other functions
Adding xlate_string15 other functions, ExtractedOnly mode uses other functions
Adding xlate_string16 other functions, ExtractedOnly mode uses other functions
Adding xlate_string17 other functions, ExtractedOnly mode uses other functions
Adding xlate_string18 other functions, ExtractedOnly mode uses other functions
Adding xlate_string19 other functions, ExtractedOnly mode uses other functions
Adding xlate_string20 other functions, ExtractedOnly mode uses other functions
Adding xlate_string21 other functions, ExtractedOnly mode uses other functions
Adding xlate_string22 other functions, ExtractedOnly mode uses other functions
Adding suspect_word0 other functions, ExtractedOnly mode uses other functions
Adding suspect_word1 other functions, ExtractedOnly mode uses other functions
Adding suspect_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word0 other functions, ExtractedOnly mode uses other functions
Adding xlate_word1 other functions, ExtractedOnly mode uses other functions
Adding xlate_word2 other functions, ExtractedOnly mode uses other functions
Adding xlate_word3 other functions, ExtractedOnly mode uses other functions
Adding xlate_word4 other functions, ExtractedOnly mode uses other functions
Adding xlate_word5 other functions, ExtractedOnly mode uses other functions
Adding xlate_word6 other functions, ExtractedOnly mode uses other functions
Adding xlate_word7 other functions, ExtractedOnly mode uses other functions
Adding xlate_word8 other functions, ExtractedOnly mode uses other functions
Adding xlate_word9 other functions, ExtractedOnly mode uses other functions
Adding xlate_word10 other functions, ExtractedOnly mode uses other functions
Adding xlate_word11 other functions, ExtractedOnly mode uses other functions
Adding xlate_word12 other functions, ExtractedOnly mode uses other functions
Adding darray_find0 other functions, ExtractedOnly mode uses other functions
Adding darray_find1 other functions, ExtractedOnly mode uses other functions
Adding say_phones0 other functions, ExtractedOnly mode uses other functions
Adding say_phones1 other functions, ExtractedOnly mode uses other functions
Adding say_phones2 other functions, ExtractedOnly mode uses other functions
Adding darray_init0 other functions, ExtractedOnly mode uses other functions
Adding concat_args0 other functions, ExtractedOnly mode uses other functions
Adding concat_args1 other functions, ExtractedOnly mode uses other functions
Adding concat_args2 other functions, ExtractedOnly mode uses other functions
Adding concat_args3 other functions, ExtractedOnly mode uses other functions
Adding concat_args4 other functions, ExtractedOnly mode uses other functions
Adding concat_args5 other functions, ExtractedOnly mode uses other functions
Adding concat_args6 other functions, ExtractedOnly mode uses other functions
Adding say_string0 other functions, ExtractedOnly mode uses other functions
Adding say_file0 other functions, ExtractedOnly mode uses other functions
Adding say_file1 other functions, ExtractedOnly mode uses other functions
Adding main0 other functions, ExtractedOnly mode uses other functions
Adding main1 other functions, ExtractedOnly mode uses other functions
Adding main2 other functions, ExtractedOnly mode uses other functions
Adding main3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_cardinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal0 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal1 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal2 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal3 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal4 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal5 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal6 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal7 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal8 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal9 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal10 other functions, ExtractedOnly mode uses other functions
Adding xlate_ordinal11 other functions, ExtractedOnly mode uses other functions
Adding darray_free0 other functions, ExtractedOnly mode uses other functions
Adding darray_free1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find0 other functions, ExtractedOnly mode uses other functions
Adding Darray_find1 other functions, ExtractedOnly mode uses other functions
Adding Darray_find2 other functions, ExtractedOnly mode uses other functions
Adding Darray_find3 other functions, ExtractedOnly mode uses other functions
Adding Darray_find4 other functions, ExtractedOnly mode uses other functions
Adding darray_delete0 other functions, ExtractedOnly mode uses other functions
Adding darray_delete1 other functions, ExtractedOnly mode uses other functions
Adding darray_find.730 other functions, ExtractedOnly mode uses other functions
Adding darray_find.731 other functions, ExtractedOnly mode uses other functions
Adding NRL0 other functions, ExtractedOnly mode uses other functions
Adding NRL1 other functions, ExtractedOnly mode uses other functions
Adding NRL2 other functions, ExtractedOnly mode uses other functions
Adding NRL3 other functions, ExtractedOnly mode uses other functions
Adding phone_cat0 other functions, ExtractedOnly mode uses other functions
Adding phone_cat1 other functions, ExtractedOnly mode uses other functions
Adding guess_word0 other functions, ExtractedOnly mode uses other functions
Adding guess_word1 other functions, ExtractedOnly mode uses other functions
Adding find_rule0 other functions, ExtractedOnly mode uses other functions
Adding find_rule1 other functions, ExtractedOnly mode uses other functions
Adding find_rule2 other functions, ExtractedOnly mode uses other functions
Adding find_rule3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch0 other functions, ExtractedOnly mode uses other functions
Adding leftmatch1 other functions, ExtractedOnly mode uses other functions
Adding leftmatch2 other functions, ExtractedOnly mode uses other functions
Adding leftmatch3 other functions, ExtractedOnly mode uses other functions
Adding leftmatch4 other functions, ExtractedOnly mode uses other functions
Adding leftmatch5 other functions, ExtractedOnly mode uses other functions
Adding leftmatch6 other functions, ExtractedOnly mode uses other functions
Adding leftmatch7 other functions, ExtractedOnly mode uses other functions
Adding leftmatch8 other functions, ExtractedOnly mode uses other functions
Adding leftmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch0 other functions, ExtractedOnly mode uses other functions
Adding rightmatch1 other functions, ExtractedOnly mode uses other functions
Adding rightmatch2 other functions, ExtractedOnly mode uses other functions
Adding rightmatch3 other functions, ExtractedOnly mode uses other functions
Adding rightmatch4 other functions, ExtractedOnly mode uses other functions
Adding rightmatch5 other functions, ExtractedOnly mode uses other functions
Adding rightmatch6 other functions, ExtractedOnly mode uses other functions
Adding rightmatch7 other functions, ExtractedOnly mode uses other functions
Adding rightmatch8 other functions, ExtractedOnly mode uses other functions
Adding rightmatch9 other functions, ExtractedOnly mode uses other functions
Adding rightmatch10 other functions, ExtractedOnly mode uses other functions
Adding rightmatch11 other functions, ExtractedOnly mode uses other functions
Adding rightmatch12 other functions, ExtractedOnly mode uses other functions
Adding rightmatch13 other functions, ExtractedOnly mode uses other functions
Adding trie_insert0 other functions, ExtractedOnly mode uses other functions
Adding trie_insert1 other functions, ExtractedOnly mode uses other functions
Adding trie_insert2 other functions, ExtractedOnly mode uses other functions
Adding trie_insert3 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup0 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup1 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup2 other functions, ExtractedOnly mode uses other functions
Adding trie_lookup3 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4460 other functions, ExtractedOnly mode uses other functions
Adding darray_find.4461 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm0 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm1 other functions, ExtractedOnly mode uses other functions
Adding phone_to_elm2 other functions, ExtractedOnly mode uses other functions
Adding enter0 other functions, ExtractedOnly mode uses other functions
Adding enter1 other functions, ExtractedOnly mode uses other functions
Adding enter2 other functions, ExtractedOnly mode uses other functions
Adding find_elm0 other functions, ExtractedOnly mode uses other functions
Adding find_elm1 other functions, ExtractedOnly mode uses other functions
Adding holmes0 other functions, ExtractedOnly mode uses other functions
Adding holmes1 other functions, ExtractedOnly mode uses other functions
Adding holmes2 other functions, ExtractedOnly mode uses other functions
Adding holmes3 other functions, ExtractedOnly mode uses other functions
Adding holmes4 other functions, ExtractedOnly mode uses other functions
Adding holmes5 other functions, ExtractedOnly mode uses other functions
Adding holmes6 other functions, ExtractedOnly mode uses other functions
Adding holmes7 other functions, ExtractedOnly mode uses other functions
Adding holmes8 other functions, ExtractedOnly mode uses other functions
Adding holmes9 other functions, ExtractedOnly mode uses other functions
Adding holmes10 other functions, ExtractedOnly mode uses other functions
Adding holmes11 other functions, ExtractedOnly mode uses other functions
Adding holmes12 other functions, ExtractedOnly mode uses other functions
Adding holmes13 other functions, ExtractedOnly mode uses other functions
Adding holmes14 other functions, ExtractedOnly mode uses other functions
Adding holmes15 other functions, ExtractedOnly mode uses other functions
Adding holmes16 other functions, ExtractedOnly mode uses other functions
Adding holmes17 other functions, ExtractedOnly mode uses other functions
Adding holmes18 other functions, ExtractedOnly mode uses other functions
Adding holmes19 other functions, ExtractedOnly mode uses other functions
Adding holmes20 other functions, ExtractedOnly mode uses other functions
Adding holmes21 other functions, ExtractedOnly mode uses other functions
Adding holmes22 other functions, ExtractedOnly mode uses other functions
Adding set_trans0 other functions, ExtractedOnly mode uses other functions
Adding set_trans1 other functions, ExtractedOnly mode uses other functions
Adding interpolate0 other functions, ExtractedOnly mode uses other functions
Adding interpolate1 other functions, ExtractedOnly mode uses other functions
Adding interpolate2 other functions, ExtractedOnly mode uses other functions
Adding interpolate3 other functions, ExtractedOnly mode uses other functions
Adding jsru_save0 other functions, ExtractedOnly mode uses other functions
Adding linear0 other functions, ExtractedOnly mode uses other functions
Adding linear1 other functions, ExtractedOnly mode uses other functions
Adding linear2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes0 other functions, ExtractedOnly mode uses other functions
Adding init_holmes1 other functions, ExtractedOnly mode uses other functions
Adding init_holmes2 other functions, ExtractedOnly mode uses other functions
Adding init_holmes3 other functions, ExtractedOnly mode uses other functions
Adding term_holmes0 other functions, ExtractedOnly mode uses other functions
Adding term_holmes1 other functions, ExtractedOnly mode uses other functions
Adding show_parms0 other functions, ExtractedOnly mode uses other functions
Adding show_parms1 other functions, ExtractedOnly mode uses other functions
Adding parwave0 other functions, ExtractedOnly mode uses other functions
Adding parwave1 other functions, ExtractedOnly mode uses other functions
Adding parwave2 other functions, ExtractedOnly mode uses other functions
Adding parwave3 other functions, ExtractedOnly mode uses other functions
Adding parwave4 other functions, ExtractedOnly mode uses other functions
Adding parwave5 other functions, ExtractedOnly mode uses other functions
Adding parwave6 other functions, ExtractedOnly mode uses other functions
Adding parwave7 other functions, ExtractedOnly mode uses other functions
Adding parwave8 other functions, ExtractedOnly mode uses other functions
Adding parwave9 other functions, ExtractedOnly mode uses other functions
Adding parwave10 other functions, ExtractedOnly mode uses other functions
Adding parwave11 other functions, ExtractedOnly mode uses other functions
Adding parwave12 other functions, ExtractedOnly mode uses other functions
Adding parwave13 other functions, ExtractedOnly mode uses other functions
Adding parwave14 other functions, ExtractedOnly mode uses other functions
Adding parwave15 other functions, ExtractedOnly mode uses other functions
Adding parwave16 other functions, ExtractedOnly mode uses other functions
Adding parwave17 other functions, ExtractedOnly mode uses other functions
Adding parwave18 other functions, ExtractedOnly mode uses other functions
Adding frame_init0 other functions, ExtractedOnly mode uses other functions
Adding frame_init1 other functions, ExtractedOnly mode uses other functions
Adding frame_init2 other functions, ExtractedOnly mode uses other functions
Adding frame_init3 other functions, ExtractedOnly mode uses other functions
Adding frame_init4 other functions, ExtractedOnly mode uses other functions
Adding flutter0 other functions, ExtractedOnly mode uses other functions
Adding impulsive_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source0 other functions, ExtractedOnly mode uses other functions
Adding natural_source1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset0 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset1 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset2 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset3 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset4 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset5 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset6 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset7 other functions, ExtractedOnly mode uses other functions
Adding pitch_synch_par_reset8 other functions, ExtractedOnly mode uses other functions
Adding clip0 other functions, ExtractedOnly mode uses other functions
Adding clip1 other functions, ExtractedOnly mode uses other functions
Adding overload_warning0 other functions, ExtractedOnly mode uses other functions
Adding DBtoLIN0 other functions, ExtractedOnly mode uses other functions
Adding setabc0 other functions, ExtractedOnly mode uses other functions
Adding setzeroabc0 other functions, ExtractedOnly mode uses other functions
Adding setabcg0 other functions, ExtractedOnly mode uses other functions
Adding parwave_init0 other functions, ExtractedOnly mode uses other functions
Adding init_synth0 other functions, ExtractedOnly mode uses other functions
Adding init_synth1 other functions, ExtractedOnly mode uses other functions
Adding au_header0 other functions, ExtractedOnly mode uses other functions
Adding wblong0 other functions, ExtractedOnly mode uses other functions
Adding file_init0 other functions, ExtractedOnly mode uses other functions
Adding file_init1 other functions, ExtractedOnly mode uses other functions
Adding file_init2 other functions, ExtractedOnly mode uses other functions
Adding file_init3 other functions, ExtractedOnly mode uses other functions
Adding file_init4 other functions, ExtractedOnly mode uses other functions
Adding file_init5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write0 other functions, ExtractedOnly mode uses other functions
Adding aufile_write1 other functions, ExtractedOnly mode uses other functions
Adding aufile_write2 other functions, ExtractedOnly mode uses other functions
Adding aufile_write3 other functions, ExtractedOnly mode uses other functions
Adding aufile_write4 other functions, ExtractedOnly mode uses other functions
Adding aufile_write5 other functions, ExtractedOnly mode uses other functions
Adding aufile_write6 other functions, ExtractedOnly mode uses other functions
Adding aufile_term0 other functions, ExtractedOnly mode uses other functions
Adding aufile_term1 other functions, ExtractedOnly mode uses other functions
Adding aufile_term2 other functions, ExtractedOnly mode uses other functions
Adding getargs0 other functions, ExtractedOnly mode uses other functions
Adding getargs1 other functions, ExtractedOnly mode uses other functions
Adding getargs2 other functions, ExtractedOnly mode uses other functions
Adding getargs3 other functions, ExtractedOnly mode uses other functions
Adding getargs4 other functions, ExtractedOnly mode uses other functions
Adding getargs5 other functions, ExtractedOnly mode uses other functions
Adding getargs6 other functions, ExtractedOnly mode uses other functions
Adding getargs7 other functions, ExtractedOnly mode uses other functions
Adding getargs8 other functions, ExtractedOnly mode uses other functions
Adding getargs9 other functions, ExtractedOnly mode uses other functions
Adding getargs10 other functions, ExtractedOnly mode uses other functions
Adding getargs11 other functions, ExtractedOnly mode uses other functions
Adding getargs12 other functions, ExtractedOnly mode uses other functions
Adding getargs13 other functions, ExtractedOnly mode uses other functions
Adding getargs14 other functions, ExtractedOnly mode uses other functions
Adding getargs15 other functions, ExtractedOnly mode uses other functions
Adding getargs16 other functions, ExtractedOnly mode uses other functions
Adding getargs17 other functions, ExtractedOnly mode uses other functions
Adding getargs18 other functions, ExtractedOnly mode uses other functions
Adding getargs19 other functions, ExtractedOnly mode uses other functions
Adding getargs20 other functions, ExtractedOnly mode uses other functions
Adding getargs21 other functions, ExtractedOnly mode uses other functions
Adding getargs22 other functions, ExtractedOnly mode uses other functions
Adding getargs23 other functions, ExtractedOnly mode uses other functions
Adding audio_init0 other functions, ExtractedOnly mode uses other functions
Adding audio_init1 other functions, ExtractedOnly mode uses other functions
Adding audio_init2 other functions, ExtractedOnly mode uses other functions
Adding audio_init3 other functions, ExtractedOnly mode uses other functions
Adding audio_open0 other functions, ExtractedOnly mode uses other functions
Adding audio_term0 other functions, ExtractedOnly mode uses other functions
Adding audio_term1 other functions, ExtractedOnly mode uses other functions
Adding audio_play0 other functions, ExtractedOnly mode uses other functions
Adding audio_play1 other functions, ExtractedOnly mode uses other functions
Adding audio_play2 other functions, ExtractedOnly mode uses other functions
Adding audio_play3 other functions, ExtractedOnly mode uses other functions
Sensitive functions:0 other functions:364
DesiredConnectivity is :1
Other functions to be fed to the network of checkers
jsru_save0
xlate_string6
trie_lookup
parwave18
enter2
audio_play2
dict_init
isconsonant
find_elm
DBtoLIN
xlate_string5
darray_init0
guess_word0
natural_source
holmes1
say_phones2
phone_cat0
setabc0
darray_find1
xlate_ordinal7
xlate_ordinal11
parwave5
NRL2
say_string0
show_parms1
say_phones0
getargs9
darray_find
phone_cat1
xlate_word0
pitch_synch_par_reset4
au_header
holmes11
Darray_find4
NRL
spell_out1
init_synth1
xlate_ordinal3
interpolate0
frame_init4
leftmatch5
say_file0
init_holmes
impulsive_source
aufile_write6
file_init4
pitch_synch_par_reset0
leftmatch8
suspect_word2
xlate_ordinal9
rightmatch
file_init5
set_trans0
audio_init3
frame_init0
xlate_word7
xlate_string18
parwave4
xlate_word6
trie_insert1
xlate_ordinal0
xlate_word3
xlate_string3
leftmatch0
guess_word1
pitch_synch_par_reset5
dict_term
xlate_string4
xlate_cardinal1
setabcg0
NRL1
darray_find.730
xlate_word12
xlate_ordinal4
parwave10
pitch_synch_par_reset2
find_rule
Darray_find2
parwave12
parwave16
xlate_cardinal7
linear2
leftmatch1
xlate_cardinal5
xlate_ordinal2
getargs2
getargs11
trie_lookup1
xlate_string10
holmes22
rightmatch0
rightmatch5
audio_open
darray_free
getargs8
init_synth
linear
rightmatch1
parwave_init0
audio_play3
say_file
aufile_term1
aufile_write5
holmes0
file_init2
parwave6
parwave9
init_holmes0
xlate_string1
xlate_string7
holmes3
trie_insert2
getargs20
show_parms
holmes20
flutter0
rightmatch2
find_elm1
parwave15
xlate_cardinal4
concat_args5
leftmatch4
trie_lookup2
audio_term0
holmes17
getargs10
term_holmes
holmes10
flutter
Darray_find0
getargs7
getargs4
xlate_word4
audio_term
phone_to_elm
setzeroabc
xlate_cardinal6
audio_play
main1
rightmatch10
find_rule2
xlate_string21
audio_init0
xlate_cardinal9
xlate_string14
xlate_string13
xlate_string2
xlate_ordinal6
rightmatch4
getargs5
darray_delete1
xlate_word
holmes4
NRL3
interpolate2
aufile_write0
holmes5
interpolate1
parwave
getargs6
getargs18
getargs21
file_init
enter1
wblong0
rightmatch9
xlate_string0
darray_find.446
parwave2
xlate_string20
getargs0
leftmatch7
aufile_term0
file_init0
impulsive_source0
trie_insert0
getargs14
jsru_save
darray_find.731
aufile_write3
xlate_cardinal3
Darray_find3
getargs22
setzeroabc0
suspect_word
file_init1
trie_lookup3
phone_to_elm0
audio_play0
pitch_synch_par_reset6
concat_args0
parwave11
spell_out0
aufile_term2
set_trans
audio_term1
linear0
holmes21
xlate_word5
dBconvert
holmes8
rightmatch12
interpolate
overload_warning0
leftmatch2
clip
guess_word
holmes9
pitch_synch_par_reset7
xlate_cardinal8
clip0
holmes7
Darray_find1
holmes18
darray_find0
audio_init1
init_synth0
show_parms0
parwave14
xlate_word10
darray_delete0
main2
file_init3
darray_free0
jsru_amp
NRL0
darray_init
xlate_cardinal2
clip1
getargs12
aufile_term
getargs13
setabcg
getargs23
holmes13
frame_init3
xlate_string16
au_header0
holmes12
audio_open0
jsru_freq
natural_source1
holmes15
xlate_string17
pitch_synch_par_reset
xlate_string12
main3
set_trans1
enter_phonemes
getargs16
enter0
getargs15
interpolate3
find_elm0
xlate_ordinal
phone_append
trie_insert3
xlate_string11
parwave8
xlate_cardinal0
concat_args6
aufile_write2
xlate_string15
find_rule1
trie_lookup0
xlate_string19
filter
Darray_find
parwave3
parwave0
say_string
init_holmes1
parwave7
holmes19
xlate_string8
concat_args4
aufile_write1
overload_warning
term_holmes0
antiresonator
frame_init1
suspect_word1
concat_args3
parwave17
frame_init
wblong
phone_cat
resonator
setabc
phone_to_elm2
pitch_synch_par_reset1
darray_find.73
say_phones
holmes14
holmes16
frame_init2
xlate_ordinal8
aufile_write
darray_delete
xlate_word8
audio_play1
rightmatch8
darray_find.4461
parwave1
holmes
darray_fget
xlate_word9
pitch_synch_par_reset3
xlate_ordinal10
xlate_string
audio_init
concat_args2
leftmatch9
xlate_word2
term_holmes1
dict_find
say_file1
holmes6
natural_source0
phone_to_elm1
parwave_init
linear1
xlate_cardinal
pitch_synch_par_reset8
xlate_word11
spell_out
leftmatch3
getargs17
getargs19
xlate_ordinal5
rightmatch11
say_phones1
isvowel
xlate_word1
concat_args
rightmatch3
suspect_word0
darray_find.4460
xlate_string22
rightmatch7
main0
find_rule0
main
init_holmes2
concat_args1
xlate_ordinal1
xlate_string9
leftmatch
DBtoLIN0
enter
holmes2
audio_init2
leftmatch6
getargs1
parwave13
find_rule3
init_holmes3
aufile_write4
getargs3
rightmatch13
rightmatch6
trie_insert
getargs
darray_free1
***
Sensitive functions to be fed to the network of checkers
***
Sensitive functions only checked:0
DAGCheckersNetwork::getReverseTopologicalSort freed visited
Constructed the network of checkers!
Sensitive functions are never checkers as SensitiveOnlyChecked is set to:0
Dumping checkers network info
{
    "allCheckees": [],
    "topologicalsort": []
}
SC stats is requested, dumping stat file...
{
    "avgConnectivity": -nan.0,
    "desiredConnectivity": 1,
    "numberOfGuardInstructions": 0,
    "numberOfGuards": 0,
    "numberOfProtectedFunctions": 0,
    "numberOfProtectedInstructions": 0,
    "numberOfSensitiveInstructions": 0,
    "stdConnectivity": -nan.0
}
Recieved marked functions 0
ERR. processed 364 function, while filter count is 182
Functions called in loop
Function call numbers
dict_init -- 1
getargs -- 5
main -- 0
file_init -- 1
audio_init -- 1
init_synth -- 1
init_holmes -- 1
Insert hash computation
Warning: Empty PHI
PSNodeType::PHI with ID 6822
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6823
  - operands: []
Warning: Empty PHI
PSNodeType::PHI with ID 6824
  - operands: []
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 9537
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14784
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 14876
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17387
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17405
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
Warning: PHI Node contains duplicated operand
PSNodeType::PHI with ID 17644
  - operands: [0 PSNodeType::UNKNOWN_MEM, 0 PSNodeType::UNKNOWN_MEM]
No reaching definition for: @stderr = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for: @stdin = external global %struct._IO_FILE*, align 8 off: 0
No reaching definition for:   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %e.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %p = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %p.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca float, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca float, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %samp = alloca i16*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %samp.el = alloca i16*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nsize = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %nsize.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %s.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %ap = alloca [1 x %struct.__va_list_tag], align 16, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   call void @llvm.va_start(i8* %arraydecay12), !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 18446744073709551615
No reaching definition for:   %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca %struct.Elm_s*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   store i32 %add44, i32* %nph, align 4, !control_dep_instr !7, !data_dep_instr !8 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 in:   %d.el = alloca i8*, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No reaching definition for:   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 in:   %retval.el = alloca i32, !input_dep_instr !7, !control_dep_instr !8, !data_dep_instr !9 off: 0
No tags were supplied to be skipped! 
'guard' metadata was found in the input bitcode
Recieved marked functions 0
Recieved filter functions 182
Collecting defining blocks for spell_out
 Skipping function per FilterFunctionPass:xlate_string
Collecting defining blocks for suspect_word
Collecting defining blocks for xlate_word
Collecting defining blocks for darray_find
 Skipping function per FilterFunctionPass:say_phones
 Skipping function per FilterFunctionPass:darray_init
Collecting defining blocks for concat_args
Collecting defining blocks for say_string
Collecting defining blocks for darray_fget
Collecting defining blocks for say_file
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
Collecting defining blocks for darray_free
Collecting defining blocks for Darray_find
Skip. No dependence graph for function darray_delete
Skip. No dependence graph for function darray_find.73
Collecting defining blocks for isvowel
 Skipping function per FilterFunctionPass:isconsonant
Collecting defining blocks for NRL
 Skipping function per FilterFunctionPass:phone_cat
 Skipping function per FilterFunctionPass:guess_word
Collecting defining blocks for find_rule
 Skipping function per FilterFunctionPass:leftmatch
Collecting defining blocks for rightmatch
 Skipping function per FilterFunctionPass:trie_insert
Collecting defining blocks for trie_lookup
Collecting defining blocks for phone_append
 Skipping function per FilterFunctionPass:darray_find.446
Collecting defining blocks for phone_to_elm
 Skipping function per FilterFunctionPass:enter_phonemes
Collecting defining blocks for enter
Collecting defining blocks for find_elm
 Skipping function per FilterFunctionPass:holmes
Collecting defining blocks for set_trans
 Skipping function per FilterFunctionPass:interpolate
 Skipping function per FilterFunctionPass:filter
Collecting defining blocks for jsru_save
Collecting defining blocks for jsru_freq
 Skipping function per FilterFunctionPass:jsru_amp
Collecting defining blocks for linear
Collecting defining blocks for init_holmes
 Skipping function per FilterFunctionPass:term_holmes
Skip. No dependence graph for function show_parms
 Skipping function per FilterFunctionPass:parwave
Collecting defining blocks for frame_init
Collecting defining blocks for flutter
Collecting defining blocks for impulsive_source
Collecting defining blocks for natural_source
 Skipping function per FilterFunctionPass:pitch_synch_par_reset
 Skipping function per FilterFunctionPass:resonator
Collecting defining blocks for antiresonator
 Skipping function per FilterFunctionPass:clip
Collecting defining blocks for overload_warning
Collecting defining blocks for dBconvert
 Skipping function per FilterFunctionPass:DBtoLIN
 Skipping function per FilterFunctionPass:setabc
 Skipping function per FilterFunctionPass:setzeroabc
 Skipping function per FilterFunctionPass:setabcg
Collecting defining blocks for parwave_init
 Skipping function per FilterFunctionPass:init_synth
 Skipping function per FilterFunctionPass:au_header
Collecting defining blocks for wblong
 Skipping function per FilterFunctionPass:file_init
 Skipping function per FilterFunctionPass:aufile_write
 Skipping function per FilterFunctionPass:aufile_term
Collecting defining blocks for dict_find
 Skipping function per FilterFunctionPass:dict_init
Collecting defining blocks for dict_term
Collecting defining blocks for getargs
 Skipping function per FilterFunctionPass:audio_init
Collecting defining blocks for audio_open
Collecting defining blocks for audio_term
 Skipping function per FilterFunctionPass:audio_play
 Processing function:spell_out
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @spell_out0(i8** %word.addr, i32* %n.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @spell_out0(i8** %word.addr, i32* %n.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
 Skipping function per FilterFunctionPass:xlate_string
 Processing function:suspect_word
Short range hashing enabled.
Processing path: entry  for.cond  for.body  land.lhs.true  land.lhs.true2  if.then  
After path modifications process path
for.body  land.lhs.true  land.lhs.true2  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  %7 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  store i32 1, i32* %seen_upper, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.then12  
After path modifications process path
for.body  if.end  if.then12  
Hash path invariants only
Invariants are
  br label %if.end16, !control_dep_instr !7, !data_indep_instr !11
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  store i32 1, i32* %seen_lower, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %31 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  call void @suspect_word0(i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @suspect_word0(i8* %ch), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.end16  if.then39  
After path modifications process path
for.body  if.end  if.end16  if.then39  
Hash path invariants only
Invariants are
  br label %if.end40, !control_dep_instr !7, !data_indep_instr !11
  store i32 1, i32* %seen_vowel, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  %46 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.end16  if.end40  for.inc  
After path modifications process path
for.body  if.end  if.end16  if.end40  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
  call void @suspect_word1(i32* %last, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !13
  %61 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %last = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @suspect_word1(i32* %last, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !13
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @suspect_word1(i32* %last, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !13
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  if.end  if.end16  lor.lhs.false  lor.lhs.false23  lor.lhs.false27  lor.lhs.false31  lor.lhs.false35  
After path modifications process path
for.body  if.end  if.end16  lor.lhs.false  lor.lhs.false23  lor.lhs.false27  lor.lhs.false31  lor.lhs.false35  
Hash path invariants only
Invariants are
  %call7 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %76 = load i16*, i16** %call7, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  lor.lhs.false43  land.lhs.true45  
After path modifications process path is empty
Processing path: entry  for.end  lor.lhs.false43  land.lhs.true45  
After path modifications process path
entry  for.end  lor.lhs.false43  land.lhs.true45  
Processing path: entry  for.cond  for.end  lor.lhs.false43  lor.rhs  
After path modifications process path is empty
Processing path: entry  for.end  lor.lhs.false43  lor.rhs  
After path modifications process path
entry  for.end  lor.lhs.false43  lor.rhs  
Processing path: entry  for.cond  for.end  lor.end  
After path modifications process path is empty
Processing path: entry  for.end  lor.end  
After path modifications process path
entry  for.end  lor.end  
 Processing function:xlate_word
Short range hashing enabled.
Processing path: entry  if.then  if.then2  if.then4  while.cond7  while.body9  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.then4  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  br label %while.cond7, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
  call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.then4  
After path modifications process path
entry  if.then  if.then2  if.then4  
Processing path: entry  if.then  if.then2  if.then4  while.cond7  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.then4  while.cond  while.body  while.end  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond7, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word1(i8** %x, i8** %s), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.then4  
After path modifications process path
entry  if.then  if.then2  if.then4  
Processing path: entry  if.then  if.then2  if.then4  while.cond  while.end13  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.then4  while.end13  
After path modifications process path
entry  if.then  if.then2  if.then4  while.end13  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word3(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word3(i32* %retval, i32* %nph), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.then  if.then2  if.else  while.cond15  while.body18  if.then25  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.else  if.then25  
After path modifications process path
entry  if.then  if.then2  if.else  if.then25  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %h = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %nph = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word5(i32* %retval, i32* %n.addr, i8** %word.addr, %struct.darray_t** %phone.addr, i8** %h, i32* %nph), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.else  while.cond15  while.body18  lor.lhs.false  if.else38  if.end  
After path modifications process path
if.else38  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
  call void @xlate_word6(i8** %h), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %h = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @xlate_word6(i8** %h), !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  if.then  if.then2  if.else  
After path modifications process path
entry  if.then  if.then2  if.else  
Processing path: entry  if.then  if.then2  if.else  while.cond15  while.end40  if.end41  
After path modifications process path is empty
Processing path: entry  if.then  if.then2  if.else  while.end40  if.end41  
After path modifications process path
entry  if.then  if.then2  if.else  while.end40  if.end41  
Processing path: entry  if.then  if.end42  if.then45  
After path modifications process path
entry  if.then  if.end42  if.then45  
Processing path: entry  if.then  if.end42  if.else47  if.then51  
After path modifications process path
entry  if.then  if.end42  if.else47  if.then51  
Processing path: entry  if.then  if.end42  if.else47  if.end53  if.end56  
After path modifications process path
entry  if.then  if.end42  if.else47  if.end53  if.end56  
Processing path: entry  if.then  if.end42  if.else47  lor.lhs.false49  
After path modifications process path
entry  if.then  if.end42  if.else47  lor.lhs.false49  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end77  
After path modifications process path
entry  if.end77  
Processing path: entry  if.else57  if.then64  
After path modifications process path
entry  if.else57  if.then64  
Processing path: entry  if.else57  if.end66  while.cond67  while.body71  
After path modifications process path is empty
Processing path: entry  if.else57  if.end66  
After path modifications process path
entry  if.else57  if.end66  
Processing path: entry  if.else57  if.end66  while.cond67  while.end76  
After path modifications process path is empty
Processing path: entry  if.else57  if.end66  while.end76  
After path modifications process path
entry  if.else57  if.end66  while.end76  
 Processing function:darray_find
Short range hashing enabled.
Processing path: entry  land.lhs.true  if.then  
After path modifications process path
entry  land.lhs.true  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:say_phones
 Skipping function per FilterFunctionPass:darray_init
 Processing function:concat_args
Short range hashing enabled.
Processing path: entry  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9
  call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %len = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args0(i32* %len, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !argument_dep_instr !9, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.end  if.then  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  
After path modifications process path
for.body8  
Hash path invariants only
Invariants are
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
No oh has been applied in the path
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args2(i8** %d, i8** %buf), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %buf = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args2(i8** %d, i8** %buf), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.end  if.then  while.cond  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  while.end  if.then16  
After path modifications process path
for.body8  while.end  if.then16  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args5(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args5(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing path: entry  for.end  if.then  while.cond  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  while.end  if.end  
After path modifications process path
for.body8  while.end  
Hash path invariants only
Invariants are
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing path: entry  for.end  if.then  while.cond  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.cond5  for.body8  while.end  if.else  
After path modifications process path
for.body8  while.end  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args6(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !11
  call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args3(i8** %s, i8*** %argv.addr, i32* %i), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @concat_args6(i8** %d), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  for.cond  for.end  if.then  
After path modifications process path is empty
Processing path: entry  for.end  if.then  
After path modifications process path
entry  for.end  if.then  
Processing path: entry  for.end  if.then  for.cond5  for.end18  
After path modifications process path is empty
Processing path: entry  for.cond  for.end  if.then  for.end18  
After path modifications process path is empty
Processing path: entry  for.end  if.then  for.end18  
After path modifications process path
entry  for.end  if.then  for.end18  
Processing path: entry  for.cond  for.end  if.end19  
After path modifications process path is empty
Processing path: entry  for.end  if.end19  
After path modifications process path
entry  for.end  if.end19  
 Processing function:say_string
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %phone, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_string0(%struct.darray_t* %phone), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %phone), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Processing function:darray_fget
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
No oh has been applied in the path
 Processing function:say_file
Short range hashing enabled.
Processing path: entry  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %line = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %line, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_init(%struct.darray_t* %phone, i32 1, i32 128), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
***Handling a call instruction***
***Handling a call instruction***
Processing path: entry  while.cond  while.end  if.then  
After path modifications process path is empty
Processing path: entry  while.end  if.then  
After path modifications process path
entry  while.end  if.then  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @say_file1(%struct.darray_t* %phone), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !13
Processing path: entry  while.cond  while.end  if.end  
After path modifications process path is empty
Processing path: entry  while.end  if.end  
After path modifications process path
entry  while.end  if.end  
Processing call instruction..
Can't handle this operand   %phone = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %phone), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %line = alloca %struct.darray_t, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free(%struct.darray_t* %line), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Skipping function per FilterFunctionPass:main
 Skipping function per FilterFunctionPass:xlate_cardinal
Skip. No dependence graph for function xlate_ordinal
 Processing function:darray_free
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @darray_free1(%struct.darray_t** %a.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !13, !data_indep_instr !10
 Processing function:Darray_find
Short range hashing enabled.
Processing path: entry  if.then  if.end  if.then8  cond.true  
After path modifications process path
entry  if.then  if.end  if.then8  cond.true  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.then21  
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.then26  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find0(%struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.then19  if.end23  if.end28  if.end32  
Processing call instruction..
Can't handle this operand   %add = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Can't handle this operand   %ndata = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find1(i32* %add, i32* %n.addr, %struct.darray_t** %a.addr, i8** %ndata), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !10
Processing path: entry  if.then  if.end  if.then8  cond.end  if.else  
After path modifications process path
entry  if.then  if.end  if.then8  cond.end  if.else  
Non numeric pointers (int and float) are skipped:  %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
Processing path: entry  if.then  if.end  if.then8  cond.false  
After path modifications process path
entry  if.then  if.end  if.then8  cond.false  
Processing path: entry  if.then  if.end  if.end38  if.then42  
After path modifications process path
entry  if.then  if.end  if.end38  if.then42  
Processing call instruction..
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find3(%struct.darray_t** %a.addr, i32* %n.addr), !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.then  if.end  if.end38  if.end47  
After path modifications process path
entry  if.then  if.end  if.end38  if.end47  
Processing path: entry  if.then  if.end  if.else33  
After path modifications process path
entry  if.then  if.end  if.else33  
Processing path: entry  if.then  if.then4  
After path modifications process path
entry  if.then  if.then4  
Processing path: entry  if.end48  
After path modifications process path
entry  if.end48  
Processing call instruction..
Can't handle this operand   %retval = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Can't handle this operand   %a.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @Darray_find4(i8** %retval, i32* %n.addr, %struct.darray_t** %a.addr), !control_dep_instr !7, !data_indep_instr !12, !input_dep_block !10
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  lor.lhs.false  
After path modifications process path
entry  lor.lhs.false  
Skip. No dependence graph for function darray_delete
Skip. No dependence graph for function darray_find.73
 Processing function:isvowel
Short range hashing enabled.
Processing path: entry  lor.end  
After path modifications process path
entry  lor.end  
Processing path: entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
After path modifications process path
entry  lor.lhs.false  lor.lhs.false2  lor.lhs.false4  lor.rhs  
 Skipping function per FilterFunctionPass:isconsonant
 Processing function:NRL
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  %4 = load i16*, i16** %call4, align 8, !control_dep_instr !7, !data_dep_instr !8
  call void @NRL1(i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  %call4 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL1(i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %phone.addr = alloca %struct.darray_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %old = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %word = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL0(i8** %d, %struct.darray_t** %phone.addr, i32* %old, i32* %n.addr, i8** %word), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  %call4 = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %4 = load i16*, i16** %call4, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing call instruction..
Can't handle this operand   %d = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @NRL3(i8** %d), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
 Skipping function per FilterFunctionPass:phone_cat
 Skipping function per FilterFunctionPass:guess_word
 Processing function:find_rule
Short range hashing enabled.
Processing path: entry  for.cond  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule0(i32* %retval, i8** %word.addr, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %word.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule0(i32* %retval, i8** %word.addr, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule0(i32* %retval, i8** %word.addr, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  for.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  if.then12  
After path modifications process path
if.end  if.then12  
Hash path invariants only
Invariants are
  br label %for.end, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  for.body  if.end13  for.inc  
After path modifications process path
if.end13  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  for.cond  if.end  
After path modifications process path
if.end  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.then18  
After path modifications process path
if.end  for.end  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  if.end32  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.end19  if.end26  if.end32  
After path modifications process path
if.end  for.end  if.end19  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end32  
After path modifications process path
entry  if.end32  
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %rule = alloca [4 x i8*]*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %arg.addr = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %out.addr = alloca void (i8*, i8*)*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule3(i32* %remainder, i32* %retval, [4 x i8*]** %rule, i8** %arg.addr, void (i8*, i8*)** %out.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.end19  if.end26  if.then31  
After path modifications process path
if.end  for.end  if.end19  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  for.cond2  
After path modifications process path is empty
Processing path: entry  for.cond  if.end  for.end  if.end19  if.then25  
After path modifications process path
if.end  for.end  if.end19  
Hash path invariants only
Invariants are
  call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %for.cond2, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %remainder = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %index.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @find_rule1(i32* %remainder, i32* %index.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:leftmatch
 Processing function:rightmatch
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.then19  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %10 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then19  
After path modifications process path
entry  if.end  if.then19  
Processing path: entry  if.end  for.cond  for.body  if.then14  if.else  
After path modifications process path
for.body  if.else  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %12 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch1(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %16 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.default  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %20 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  sw.default  
After path modifications process path
entry  if.end  sw.default  
Processing call instruction..
Can't handle this operand   %pat = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch12(i8** %pat), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  while.cond  while.body  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  
Hash path invariants only
Invariants are
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %22 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.end26  while.end  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end26  while.end  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond, !control_dep_instr !7, !data_indep_instr !10
  %26 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch2(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb  if.then25  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %30 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then25  
After path modifications process path
entry  if.end  if.then25  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.epilog  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.epilog  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %32 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  while.body37  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  
Hash path invariants only
Invariants are
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %36 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond33  
After path modifications process path is empty
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb32  while.end39  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb32  while.end39  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %while.cond33, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %40 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.end45  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  if.end45  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %44 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch5(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb40  if.then44  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %48 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then44  
After path modifications process path
entry  if.end  if.then44  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  land.lhs.true86  if.then90  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  land.lhs.true  land.lhs.true54  land.lhs.true58  land.lhs.true62  land.lhs.true66  land.lhs.true70  land.lhs.true74  land.lhs.true78  land.lhs.true82  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %50 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then90  
After path modifications process path
entry  if.end  if.then90  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb47  if.end91  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb47  if.end91  
Hash path invariants only
Invariants are
  call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  %52 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch6(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  land.lhs.true97  land.lhs.true101  if.then105  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  land.lhs.true97  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %56 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.then105  
After path modifications process path
entry  if.end  if.then105  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb93  if.end106  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb93  if.end106  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %58 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch7(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.then122  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.then122  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %62 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch8(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.then117  if.else124  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.then117  if.else124  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %66 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch9(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.then138  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.then138  
Hash path invariants only
Invariants are
  call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end140, !control_dep_instr !7, !data_indep_instr !10
  %70 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch10(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  if.end140  if.end141  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  if.end140  if.end141  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  br label %if.end141, !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %74 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then112  if.else126  lor.lhs.false130  lor.lhs.false134  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %78 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.then156  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  if.then156  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !10
  call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
  %82 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
Processing call instruction..
Can't handle this operand   %text = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @rightmatch11(i8** %text), !control_dep_instr !7, !data_indep_instr !10, !input_dep_block !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.then151  if.end158  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %86 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end158  
After path modifications process path
entry  if.end  if.end158  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.then146  if.end159  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %88 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.end159  
After path modifications process path
entry  if.end  if.end159  
Processing path: entry  if.end  for.cond  for.body  lor.lhs.false  lor.lhs.false10  if.end20  sw.bb108  if.else142  if.else160  
After path modifications process path
for.body  lor.lhs.false  lor.lhs.false10  sw.bb108  
Hash path invariants only
Invariants are
  %call = call i16** @__ctype_b_loc() #9, !control_dep_instr !7, !data_dep_instr !8
  %90 = load i16*, i16** %call, align 8, !control_dep_instr !7, !data_dep_instr !8
Processing path: entry  if.end  if.else160  
After path modifications process path
entry  if.end  if.else160  
Processing path: entry  if.end  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  if.end  for.end  
After path modifications process path
entry  if.end  for.end  
 Skipping function per FilterFunctionPass:trie_insert
 Processing function:trie_lookup
Short range hashing enabled.
Processing path: entry  while.cond1  while.body3  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
  br label %while.end, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup0(i8** %s, i8*** %sp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %sp.addr = alloca i8**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup0(i8** %s, i8*** %sp.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond1  while.body3  if.else  if.end  
After path modifications process path
if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_lookup2(%struct.trie_s*** %l, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup2(%struct.trie_s*** %l, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup2(%struct.trie_s*** %l, %struct.trie_s** %p), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  while.cond  while.body  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond1  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  while.end  if.then8  if.end13  
After path modifications process path
while.body  if.then8  
Hash path invariants only
Invariants are
  br label %if.end13, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %p = alloca %struct.trie_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup3(i8** %s, %struct.trie_s** %p, %struct.trie_s*** %r.addr, %struct.trie_s*** %l, i8** %value), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond1  if.else12  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  while.end  if.else12  
After path modifications process path
while.body  
Hash path invariants only
Invariants are
  call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond1, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %l = alloca %struct.trie_s**, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %r.addr = alloca %struct.trie_s**, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @trie_lookup1(%struct.trie_s*** %l, %struct.trie_s*** %r.addr), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  if.else12  
After path modifications process path
entry  if.else12  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
Processing path: entry  while.cond  while.end14  
After path modifications process path is empty
Processing path: entry  while.end14  
After path modifications process path
entry  while.end14  
Non numeric pointers (int and float) are skipped:  %value = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 i8*
No oh has been applied in the path
 Processing function:phone_append
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:darray_find.446
 Processing function:phone_to_elm
Short range hashing enabled.
Processing path: entry  if.end  while.cond  land.rhs  
After path modifications process path
land.rhs  
Hash path invariants only
Invariants are
  br label %land.end, !control_dep_instr !7, !data_indep_instr !11
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm0(i8** %s, i8** %phone.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %phone.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm0(i8** %s, i8** %phone.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  if.end  while.cond6  while.body9  if.end15  
After path modifications process path
while.body9  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  while.cond  land.end  while.body  if.then3  
After path modifications process path
while.body  if.then3  
Hash path invariants only
Invariants are
  br label %while.cond6, !control_dep_instr !7, !data_indep_instr !11
  call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %n4 = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond6  while.body9  if.then14  
After path modifications process path
while.body9  if.then14  
Hash path invariants only
Invariants are
  br label %if.end15, !control_dep_instr !7, !data_indep_instr !11
  store i32 0, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  while.cond  land.end  while.body  if.then3  
After path modifications process path
while.body  if.then3  
Hash path invariants only
Invariants are
  call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !7, !data_indep_instr !11
Processing call instruction..
Can't handle this operand   %n4 = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond6  
After path modifications process path is empty
Processing path: entry  if.end  while.cond  land.end  while.body  if.then3  while.end  
After path modifications process path
while.body  if.then3  while.end  
Hash path invariants only
Invariants are
  br label %if.end28, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !7, !data_indep_instr !11
  call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %n4 = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm1(i32* %n4, i8** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.end28  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.default  
After path modifications process path
while.body  if.else  sw.default  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %phone.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %n.addr = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %ch = alloca i8, align 1, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @phone_to_elm2(i8** %phone.addr, i32* %n.addr, i8* %ch), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.epilog  
After path modifications process path
while.body  if.else  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end28, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb  
After path modifications process path
while.body  if.else  sw.bb  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 3, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb23  
After path modifications process path
while.body  if.else  sw.bb23  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 2, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb24  
After path modifications process path
while.body  if.else  sw.bb24  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11
  store i32 1, i32* %stress, align 4, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.body  if.else  sw.bb25  
After path modifications process path
while.body  if.else  sw.bb25  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.end  while.cond  land.end  while.end29  
After path modifications process path is empty
Processing path: entry  if.end  while.end29  
After path modifications process path
entry  if.end  while.end29  
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
 Skipping function per FilterFunctionPass:enter_phonemes
 Processing function:enter
Short range hashing enabled.
Processing path: entry  while.cond  vaarg.in_reg  
After path modifications process path
vaarg.in_reg  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.body  if.then  
After path modifications process path
while.body  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @enter0(i8** %x, %struct.Elm_s** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter0(i8** %x, %struct.Elm_s** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Can't handle this operand   %e = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter0(i8** %x, %struct.Elm_s** %e), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.body  if.end  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.body  if.else  
After path modifications process path
while.body  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !data_indep_instr !11
  call void @enter1(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter1(i8** %s), !control_dep_instr !7, !data_indep_instr !11, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.end  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Processing call instruction..
Can't handle this operand   %x = alloca i8*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter2(i8** %x, i8** %p.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %p.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @enter2(i8** %x, i8** %p.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  while.cond  vaarg.in_mem  
After path modifications process path
vaarg.in_mem  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !7, !data_indep_instr !11
No oh has been applied in the path
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:find_elm
Short range hashing enabled.
Processing path: entry  while.cond  while.body  if.end  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
Processing path: entry  while.cond  while.body  if.then  
After path modifications process path is empty
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
No oh has been applied in the path
Processing path: entry  while.cond  return  
After path modifications process path is empty
Processing path: entry  return  
After path modifications process path
entry  return  
No oh has been applied in the path
Processing path: entry  while.cond  while.end  
After path modifications process path is empty
Processing path: entry  while.end  
After path modifications process path
entry  while.end  
Non numeric pointers (int and float) are skipped:  %retval = alloca %struct.Elm_s*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 %struct.Elm_s*
No oh has been applied in the path
 Skipping function per FilterFunctionPass:holmes
 Processing function:set_trans
Short range hashing enabled.
Processing path: entry  for.cond  for.body  cond.true  
After path modifications process path
for.body  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !global_dep_instr !12, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.then  
After path modifications process path
for.body  cond.end  if.then  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
  call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %t.addr = alloca %struct.slope_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %b.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %a.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans0(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, %struct.Elm_s** %a.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.end  for.inc  
After path modifications process path
for.body  cond.end  if.end  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.end  if.else  
After path modifications process path
for.body  cond.end  if.else  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
  call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing call instruction..
Can't handle this operand   %t.addr = alloca %struct.slope_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %b.addr = alloca %struct.Elm_s*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @set_trans1(%struct.slope_t** %t.addr, %struct.Elm_s** %b.addr, i32* %i), !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11, !input_dep_block !14
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.body  cond.false  
After path modifications process path
for.body  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !7, !global_dep_instr !13, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
After path modifications process path is empty
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:interpolate
 Skipping function per FilterFunctionPass:filter
 Processing function:jsru_save
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %tp.addr = alloca float*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %f0.addr = alloca double, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @jsru_save0(float** %tp.addr, double* %f0.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:jsru_freq
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Skipping function per FilterFunctionPass:jsru_amp
 Processing function:linear
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  if.then2  
After path modifications process path
entry  if.else  if.then2  
Processing path: entry  if.else  if.else3  
After path modifications process path
entry  if.else  if.else3  
 Processing function:init_holmes
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Non numeric pointers (int and float) are skipped:  %par_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Non numeric pointers (int and float) are skipped:  %jsru_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes0(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes0(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  return  
After path modifications process path
entry  return  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  if.end  if.then2  if.end6  
After path modifications process path
entry  if.end  if.then2  if.end6  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing path: entry  if.end  if.then2  if.then5  
After path modifications process path
entry  if.end  if.then2  if.then5  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %par_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes1(i8** %par_name), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Processing path: entry  if.end  if.end7  if.then9  if.end13  
After path modifications process path
entry  if.end  if.end7  if.then9  if.end13  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing path: entry  if.end  if.end7  if.then9  if.then12  
After path modifications process path
entry  if.end  if.end7  if.then9  if.then12  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %jsru_name = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes2(i8** %jsru_name), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Processing path: entry  if.end  if.end7  if.end14  
After path modifications process path
entry  if.end  if.end7  if.end14  
Insert assertion evaluating function:init_holmes callsites detected =1
Insert assertion included function:init_holmes because it is not in the skip  assert list!
Processing call instruction..
Can't handle this operand   %retval = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes3(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @init_holmes3(i32* %retval, i32* %argc.addr), !control_dep_instr !11, !data_indep_instr !10, !input_dep_block !12
 Skipping function per FilterFunctionPass:term_holmes
Skip. No dependence graph for function show_parms
 Skipping function per FilterFunctionPass:parwave
 Processing function:frame_init
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then41  if.then44  
After path modifications process path
entry  if.end  if.then41  if.then44  
Processing path: entry  if.end  if.then41  if.end46  
After path modifications process path
entry  if.end  if.then41  if.end46  
Processing path: entry  if.end  if.then41  if.else  
After path modifications process path
entry  if.end  if.then41  if.else  
Processing path: entry  if.end  if.end47  if.then51  if.then55  
After path modifications process path
entry  if.end  if.end47  if.then51  if.then55  
Processing path: entry  if.end  if.end47  if.then51  if.end58  
After path modifications process path
entry  if.end  if.end47  if.then51  if.end58  
Processing path: entry  if.end  if.end47  if.then51  if.else56  
After path modifications process path
entry  if.end  if.end47  if.then51  if.else56  
Processing path: entry  if.end  if.end47  if.end59  if.then63  
After path modifications process path
entry  if.end  if.end47  if.end59  if.then63  
Processing path: entry  if.end  if.end47  if.end59  if.end64  if.then68  
After path modifications process path
entry  if.end  if.end47  if.end59  if.end64  if.then68  
Processing path: entry  if.end  if.end47  if.end59  if.end64  if.end69  if.then82  
After path modifications process path
entry  if.end  if.end47  if.end59  if.end64  if.end69  if.then82  
Processing path: entry  if.end  if.end47  if.end59  if.end64  if.end69  if.end83  
After path modifications process path
entry  if.end  if.end47  if.end59  if.end64  if.end69  if.end83  
Processing call instruction..
Can't handle this operand   %Gain0 = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @frame_init4(i64* %Gain0, %struct.klatt_global_t** %globals.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !14, !data_indep_instr !10
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @frame_init4(i64* %Gain0, %struct.klatt_global_t** %globals.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !14, !data_indep_instr !10
 Processing function:flutter
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %pars.addr = alloca %struct.klatt_frame_t*, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @flutter0(%struct.klatt_frame_t** %pars.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @flutter0(%struct.klatt_frame_t** %pars.addr, %struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Processing function:impulsive_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Processing function:natural_source
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.else  
After path modifications process path
entry  if.else  
 Skipping function per FilterFunctionPass:pitch_synch_par_reset
 Skipping function per FilterFunctionPass:resonator
 Processing function:antiresonator
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:clip
 Processing function:overload_warning
Short range hashing enabled.
Processing path: entry  if.then  if.end  
After path modifications process path
entry  if.then  if.end  
Processing path: entry  if.then  if.then1  
After path modifications process path
entry  if.then  if.then1  
Processing path: entry  if.end4  
After path modifications process path
entry  if.end4  
 Processing function:dBconvert
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Skipping function per FilterFunctionPass:DBtoLIN
 Skipping function per FilterFunctionPass:setabc
 Skipping function per FilterFunctionPass:setzeroabc
 Skipping function per FilterFunctionPass:setabcg
 Processing function:parwave_init
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Processing call instruction..
Can't handle this operand   %globals.addr = alloca %struct.klatt_global_t*, align 8, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @parwave_init0(%struct.klatt_global_t** %globals.addr), !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
No oh has been applied in the path
 Skipping function per FilterFunctionPass:init_synth
 Skipping function per FilterFunctionPass:au_header
 Processing function:wblong
Short range hashing enabled.
Processing path: entry  for.cond  for.body  for.inc  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing call instruction..
Can't handle this operand   %fd.addr = alloca i32, align 4, !input_indep_block !5, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @wblong0(i32* %fd.addr, i32* %i, i64* %x.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @wblong0(i32* %fd.addr, i32* %i, i64* %x.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Can't handle this operand   %x.addr = alloca i64, align 8, !input_dep_instr !6, !control_dep_instr !7, !data_dep_instr !8 of the call   call void @wblong0(i32* %fd.addr, i32* %i, i64* %x.addr), !input_indep_block !5, !control_dep_instr !7, !input_indep_instr !10, !data_indep_instr !11
Processing path: entry  
After path modifications process path
entry  
Processing path: entry  for.cond  for.end  
Extended path is 
entry  for.cond  for.body  for.inc  for.end  
After path modifications process path
entry  for.cond  for.body  for.inc  for.end  
Processing path: entry  for.end  
After path modifications process path
entry  for.end  
 Skipping function per FilterFunctionPass:file_init
 Skipping function per FilterFunctionPass:aufile_write
 Skipping function per FilterFunctionPass:aufile_term
 Processing function:dict_find
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
Null pointer skipped:i8* null
No oh has been applied in the path
 Skipping function per FilterFunctionPass:dict_init
 Processing function:dict_term
Short range hashing enabled.
Processing path: entry  
After path modifications process path
entry  
No oh has been applied in the path
 Processing function:getargs
Short range hashing enabled.
Processing path: entry  while.cond10  vaarg.in_reg  
After path modifications process path
vaarg.in_reg  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Non numeric pointers (int and float) are skipped:  %module.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 i8*
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Insert assertion skipped because there was no hash update in between!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.in_reg19  
After path modifications process path
while.body13  vaarg.in_reg19  
Hash path invariants only
Invariants are
  br label %vaarg.end25, !control_dep_instr !11, !data_indep_instr !9
  %34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.in_reg31  
After path modifications process path
while.body13  vaarg.end25  vaarg.in_reg31  
Hash path invariants only
Invariants are
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %vaarg.end37, !control_dep_instr !11, !data_indep_instr !9
  %53 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.in_reg43  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.in_reg43  
Hash path invariants only
Invariants are
  br label %vaarg.end49, !control_dep_instr !11, !data_indep_instr !9
  %73 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 3, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  if.end132  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  if.end132  
Hash path invariants only
Invariants are
  br label %if.end183, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.then108  if.then112  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.then108  if.then112  
Hash path invariants only
Invariants are
  br label %if.end115, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x101 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs6(i8** %a, i8** %x101, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.then108  if.end115  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.then108  if.end115  
Hash path invariants only
Invariants are
  br label %if.end117, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.end117  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.end117  
Hash path invariants only
Invariants are
  br label %if.end121, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.then100  if.else116  
After path modifications process path
while.body8  if.then95  if.then97  if.then100  if.else116  
Hash path invariants only
Invariants are
  br label %if.end117, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x101 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs7(i8** %var, i8** %x101), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.end121  
After path modifications process path
while.body8  if.then95  if.then97  if.end121  
Hash path invariants only
Invariants are
  br label %if.end129, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.then97  if.else118  
After path modifications process path
while.body8  if.then95  if.then97  if.else118  
Hash path invariants only
Invariants are
  br label %if.end121, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs8(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.end129  
After path modifications process path
while.body8  if.then95  if.end129  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %l = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %count = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs11(i8** %s, i32* %l, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.then125  
After path modifications process path
while.body8  if.then95  if.else122  if.then125  
Hash path invariants only
Invariants are
  br label %if.end128, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs9(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs9(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.end128  
After path modifications process path
while.body8  if.then95  if.else122  if.end128  
Hash path invariants only
Invariants are
  br label %if.end129, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  land.lhs.true92  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.then90  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then95  if.else122  if.else126  
After path modifications process path
while.body8  if.then95  if.else122  if.else126  
Hash path invariants only
Invariants are
  br label %if.end128, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs10(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs10(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end183  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end183  
Hash path invariants only
Invariants are
  br label %if.end184, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.then152  if.then156  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.then152  if.then156  
Hash path invariants only
Invariants are
  br label %if.end159, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x145 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs12(i8** %a, i8** %x145, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.then152  if.end159  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.then152  if.end159  
Hash path invariants only
Invariants are
  br label %if.end161, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.end161  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.end161  
Hash path invariants only
Invariants are
  br label %if.end165, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.then144  if.else160  
After path modifications process path
while.body8  if.then138  if.then140  if.then144  if.else160  
Hash path invariants only
Invariants are
  br label %if.end161, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %x145 = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs13(i8** %var, i8** %x145), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.end165  
After path modifications process path
while.body8  if.then138  if.then140  if.end165  
Hash path invariants only
Invariants are
  br label %if.end179, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.then140  if.else162  
After path modifications process path
while.body8  if.then138  if.then140  if.else162  
Hash path invariants only
Invariants are
  br label %if.end165, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs14(i8** %a, i8*** %argv.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.end179  
After path modifications process path
while.body8  if.then138  if.end179  
Hash path invariants only
Invariants are
  br label %while.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %s = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %count = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs17(i8** %s, i32* %count), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  if.then171  
After path modifications process path
while.body8  if.then138  if.else166  if.then171  
Hash path invariants only
Invariants are
  br label %if.end178, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %flag = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs15(i8** %var, i32* %flag), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  if.end178  
After path modifications process path
while.body8  if.then138  if.else166  if.end178  
Hash path invariants only
Invariants are
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  br label %if.end179, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  if.then138  if.else166  lor.lhs.false168  if.else174  
After path modifications process path
while.body8  if.then138  if.else166  lor.lhs.false168  if.else174  
Hash path invariants only
Invariants are
  br label %if.end178, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs16(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs16(i8** %var), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.else133  if.end182  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.else87  if.end182  
Hash path invariants only
Invariants are
  br label %if.end183, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.end184  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  
Hash path invariants only
Invariants are
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.epilog  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.epilog  
Hash path invariants only
Invariants are
  br label %if.end81, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs4(i8** %desc), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %desc = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs4(i8** %desc), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb  
Hash path invariants only
Invariants are
  call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %sw.epilog, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs1(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.then73  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.then73  
Hash path invariants only
Invariants are
  br label %if.end76, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs2(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.end76  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.end76  
Hash path invariants only
Invariants are
  br label %sw.epilog, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.else  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.then61  sw.bb68  if.else  
Hash path invariants only
Invariants are
  call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %if.end76, !control_dep_instr !11, !data_indep_instr !9
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %fmt = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs3(i8** %var, i8** %fmt), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.end81  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.end81  
Hash path invariants only
Invariants are
  br label %if.end86, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.true  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.true  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.end  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.end  
Hash path invariants only
Invariants are
  br label %if.end81, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.false  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.then58  if.else78  cond.false  
Hash path invariants only
Invariants are
  br label %cond.end, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.end86  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.end86  
Hash path invariants only
Invariants are
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %if.end184, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.else82  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.end  if.else82  
Hash path invariants only
Invariants are
  br label %if.end86, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %var = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %desc = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %a = alloca i8*, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs5(i8** %var, i8** %desc, i8** %a), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.then55  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.end49  if.then53  if.then55  
Hash path invariants only
Invariants are
  br label %if.end, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs0(i8** %module.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  store i32 1, i32* @help_only, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %module.addr = alloca i8*, align 8, !input_indep_block !5, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs0(i8** %module.addr), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.end37  vaarg.in_mem45  
After path modifications process path
while.body13  vaarg.end25  vaarg.end37  vaarg.in_mem45  
Hash path invariants only
Invariants are
  %overflow_arg_area_p46 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  br label %vaarg.end49, !control_dep_instr !11, !data_indep_instr !9
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay39 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p40 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay39, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.end25  vaarg.in_mem33  
After path modifications process path
while.body13  vaarg.end25  vaarg.in_mem33  
Hash path invariants only
Invariants are
  br label %vaarg.end37, !control_dep_instr !11, !data_indep_instr !9
  %overflow_arg_area_p34 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay27, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay27 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  while.body13  vaarg.in_mem21  
After path modifications process path
while.body13  vaarg.in_mem21  
Hash path invariants only
Invariants are
  br label %vaarg.end25, !control_dep_instr !11, !data_indep_instr !9
  %overflow_arg_area_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 2, !control_dep_instr !11, !data_dep_instr !7, !input_dep_block !12
  %gp_offset_p16 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay15, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay15 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  while.end  if.end189  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.end  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  if.then188  
After path modifications process path
while.body  land.lhs.true  if.then  if.then188  
Hash path invariants only
Invariants are
  br label %while.end190, !control_dep_instr !11, !data_indep_instr !9
  store i32 0, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  while.end  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond10  vaarg.in_mem  
After path modifications process path
vaarg.in_mem  
Hash path invariants only
Invariants are
  br label %vaarg.end, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  
After path modifications process path
while.body  land.lhs.true  if.then  
Hash path invariants only
Invariants are
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  while.body8  
After path modifications process path
while.body8  
Hash path invariants only
Invariants are
  store i32 0, i32* %count, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0, !control_dep_instr !11, !data_dep_instr !7
  %arraydecay9 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !control_dep_instr !11, !data_dep_instr !7
  br label %while.cond10, !control_dep_instr !11, !data_indep_instr !9
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  for.cond  for.body  for.inc  
After path modifications process path
for.body  
Hash path invariants only
Invariants are
  br label %for.inc, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %argv.addr = alloca i8**, align 8, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs19(i8*** %argv.addr, i32* %off, i32* %j), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
No oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.then193  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.then193  
Hash path invariants only
Invariants are
  br label %for.cond, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  for.cond  
After path modifications process path is empty
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.then193  for.end  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.then193  for.end  
Hash path invariants only
Invariants are
  br label %if.end204, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %for.cond, !control_dep_instr !11, !data_indep_instr !9
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %j = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %argc.addr = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Can't handle this operand   %off = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs18(i32* %j, i32* %argc.addr, i32* %i, i32* %off), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.end204  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.end204  
Hash path invariants only
Invariants are
  br label %if.end207, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  if.then  while.end190  if.else202  
After path modifications process path
while.body  land.lhs.true  if.then  while.end190  if.else202  
Hash path invariants only
Invariants are
  br label %if.end204, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs21(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
  br label %while.cond6, !control_dep_instr !11, !data_indep_instr !9
  store i32 1, i32* %off, align 4, !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs21(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  while.cond6  
After path modifications process path is empty
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  land.lhs.true  lor.lhs.false  
After path modifications process path
while.body  land.lhs.true  lor.lhs.false  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  if.end207  
After path modifications process path
while.body  
Hash path invariants only
No invariant in the path. Skip path
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.body  if.else205  
After path modifications process path
while.body  if.else205  
Hash path invariants only
Invariants are
  br label %if.end207, !control_dep_instr !11, !data_indep_instr !9
  call void @getargs22(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Can't handle this operand   %i = alloca i32, align 4, !input_dep_instr !6, !data_dep_instr !7 of the call   call void @getargs22(i32* %i), !control_dep_instr !11, !data_indep_instr !9, !input_dep_block !12
Processing path: entry  
After path modifications process path
entry  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
Processing path: entry  while.cond  while.end208  land.lhs.true210  if.then212  
After path modifications process path is empty
Processing path: entry  while.end208  land.lhs.true210  if.then212  
After path modifications process path
entry  while.end208  land.lhs.true210  if.then212  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Processing call instruction..
Processing path: entry  while.cond  while.end208  if.end214  
After path modifications process path is empty
Processing path: entry  while.end208  if.end214  
After path modifications process path
entry  while.end208  if.end214  
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
Insert assertion evaluating function:getargs callsites detected =5
Insert assertion skipped function:getargs because it has more than one call site, see #24.!
No oh has been applied in the path
No short range oh has been applied in the path
 Skipping function per FilterFunctionPass:audio_init
 Processing function:audio_open
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing call instruction..
Processing path: entry  return  
After path modifications process path
entry  return  
Processing path: entry  if.end  
After path modifications process path
entry  if.end  
 Processing function:audio_term
Short range hashing enabled.
Processing path: entry  if.then  
After path modifications process path
entry  if.then  
Processing path: entry  if.end  if.then3  
After path modifications process path
entry  if.end  if.then3  
Processing path: entry  if.end  if.end7  
After path modifications process path
entry  if.end  if.end7  
 Skipping function per FilterFunctionPass:audio_play
Extract path function for assertion assert_getargs_path_1
Extract path function for assertion assert_getargs_path_2
Extract path function for assertion assert_getargs_path_4
Extract path function for assertion assert_getargs_path_5
Extract path function for assertion assert_getargs_path_6
Extract path function for assertion assert_getargs_path_8
Extract path function for assertion assert_getargs_path_9
Extract path function for assertion assert_getargs_path_10
Extract path function for assertion assert_getargs_path_12
Extract path function for assertion assert_getargs_path_13
Extract path function for assertion assert_getargs_path_14
Extract path function for assertion assert_getargs_path_16
Extract path function for assertion assert_getargs_path_17
Extract path function for assertion assert_getargs_path_18
Extract path function for assertion assert_getargs_path_20
Extract path function for assertion assert_getargs_path_21
Extract path function for assertion assert_getargs_path_22
Extract path function for assertion assert_getargs_path_24
Extract path function for assertion assert_getargs_path_25
Extract path function for assertion assert_getargs_path_26
Extract path function for assertion assert_getargs_path_28
Extract path function for assertion assert_getargs_path_29
Extract path function for assertion assert_getargs_path_30
Extract path function for assertion assert_getargs_path_32
Extract path function for assertion assert_getargs_path_33
Extract path function for assertion assert_getargs_path_34
Extract path function for assertion assert_getargs_path_36
Extract path function for assertion assert_getargs_path_37
Extract path function for assertion assert_getargs_path_38
Extract path function for assertion assert_getargs_path_40
Extract path function for assertion assert_getargs_path_41
Extract path function for assertion assert_getargs_path_42
Extract path function for assertion assert_getargs_path_44
Extract path function for assertion assert_getargs_path_45
Extract path function for assertion assert_getargs_path_46
Extract path function for assertion assert_getargs_path_48
Extract path function for assertion assert_getargs_path_49
Extract path function for assertion assert_getargs_path_50
Extract path function for assertion assert_getargs_path_52
Extract path function for assertion assert_getargs_path_53
Extract path function for assertion assert_getargs_path_54
Extract path function for assertion assert_getargs_path_56
Extract path function for assertion assert_getargs_path_57
Extract path function for assertion assert_getargs_path_58
Extract path function for assertion assert_getargs_path_60
Extract path function for assertion assert_getargs_path_61
Extract path function for assertion assert_getargs_path_62
Extract path function for assertion assert_getargs_path_64
Extract path function for assertion assert_getargs_path_65
Extract path function for assertion assert_getargs_path_66
Extract path function for assertion assert_getargs_path_68
Extract path function for assertion assert_getargs_path_69
Extract path function for assertion assert_getargs_path_70
Extract path function for assertion assert_getargs_path_72
Extract path function for assertion assert_getargs_path_73
Extract path function for assertion assert_getargs_path_74
Extract path function for assertion assert_getargs_path_76
Extract path function for assertion assert_getargs_path_77
Extract path function for assertion assert_getargs_path_78
Extract path function for assertion assert_getargs_path_80
Extract path function for assertion assert_getargs_path_81
Extract path function for assertion assert_getargs_path_82
Extract path function for assertion assert_getargs_path_84
Extract path function for assertion assert_getargs_path_85
Extract path function for assertion assert_getargs_path_86
Extract path function for assertion assert_getargs_path_88
Extract path function for assertion assert_getargs_path_89
Extract path function for assertion assert_getargs_path_90
Extract path function for assertion assert_getargs_path_92
Extract path function for assertion assert_getargs_path_93
Extract path function for assertion assert_getargs_path_94
Extract path function for assertion assert_getargs_path_96
Extract path function for assertion assert_getargs_path_97
Extract path function for assertion assert_getargs_path_98
Extract path function for assertion assert_getargs_path_100
Extract path function for assertion assert_getargs_path_101
Extract path function for assertion assert_getargs_path_102
Extract path function for assertion assert_getargs_path_104
Extract path function for assertion assert_getargs_path_105
Extract path function for assertion assert_getargs_path_106
Extract path function for assertion assert_getargs_path_108
Extract path function for assertion assert_getargs_path_109
Extract path function for assertion assert_getargs_path_110
Extract path function for assertion assert_getargs_path_112
Extract path function for assertion assert_getargs_path_113
Extract path function for assertion assert_getargs_path_114
Extract path function for assertion assert_getargs_path_116
Extract path function for assertion assert_getargs_path_117
Extract path function for assertion assert_getargs_path_118
Extract path function for assertion assert_getargs_path_120
Extract path function for assertion assert_getargs_path_121
Extract path function for assertion assert_getargs_path_122
Extract path function for assertion assert_getargs_path_124
Extract path function for assertion assert_getargs_path_125
Extract path function for assertion assert_getargs_path_126
Extract path function for assertion assert_getargs_path_128
Extract path function for assertion assert_getargs_path_129
Extract path function for assertion assert_getargs_path_130
Extract path function for assertion assert_getargs_path_132
Extract path function for assertion assert_getargs_path_133
Extract path function for assertion assert_getargs_path_134
Extract path function for assertion assert_getargs_path_136
Extract path function for assertion assert_getargs_path_137
Extract path function for assertion assert_getargs_path_138
Extract path function for assertion assert_getargs_path_140
Extract path function for assertion assert_getargs_path_141
Extract path function for assertion assert_getargs_path_142
Extract path function for assertion assert_getargs_path_144
Extract path function for assertion assert_getargs_path_145
Extract path function for assertion assert_getargs_path_146
Extract path function for assertion assert_getargs_path_148
Extract path function for assertion assert_getargs_path_149
Extract path function for assertion assert_getargs_path_150
Extract path function for assertion assert_getargs_path_152
Extract path function for assertion assert_getargs_path_153
Extract path function for assertion assert_getargs_path_154
Extract path function for assertion assert_getargs_path_156
Extract path function for assertion assert_getargs_path_157
Extract path function for assertion assert_getargs_path_158
Extract path function for assertion assert_getargs_path_160
Extract path function for assertion assert_getargs_path_161
Extract path function for assertion assert_getargs_path_162
Extract path function for assertion assert_getargs_path_164
Extract path function for assertion assert_getargs_path_165
Extract path function for assertion assert_getargs_path_166
Extract path function for assertion assert_getargs_path_168
Extract path function for assertion assert_getargs_path_169
Extract path function for assertion assert_getargs_path_170
Extract path function for assertion assert_getargs_path_173
Extract path function for assertion assert_getargs_path_174
Extract path function for assertion assert_getargs_path_177
Extract path function for assertion assert_getargs_path_178
Extract path function for assertion assert_getargs_path_181
Extract path function for assertion assert_getargs_path_182
Extract path function for assertion assert_getargs_path_185
Extract path function for assertion assert_getargs_path_189
Extract path function for assertion assert_getargs_path_192
Extract path function for assertion assert_getargs_path_195
Extract path function for assertion assert_getargs_path_202
Extract path function for assertion assert_getargs_path_205
Extract path function for assertion assert_audio_open_path_0
Extract path function for assertion assert_audio_open_path_1
Extract path function for assertion assert_audio_open_path_2
Extract path function for assertion assert_overload_warning_path_0
Extract path function for assertion assert_overload_warning_path_1
Extract path function for assertion assert_overload_warning_path_2
Extract path function for assertion assert_frame_init_path_0
Extract path function for assertion assert_frame_init_path_1
Extract path function for assertion assert_frame_init_path_2
Extract path function for assertion assert_frame_init_path_3
Extract path function for assertion assert_frame_init_path_4
Extract path function for assertion assert_frame_init_path_5
Extract path function for assertion assert_frame_init_path_6
Extract path function for assertion assert_frame_init_path_7
Extract path function for assertion assert_frame_init_path_8
Extract path function for assertion assert_frame_init_path_9
Extract path function for assertion assert_frame_init_path_10
Extract path function for assertion assert_init_holmes_path_2
Extract path function for assertion assert_init_holmes_path_3
Extract path function for assertion assert_init_holmes_path_4
Extract path function for assertion assert_init_holmes_path_5
Extract path function for assertion assert_init_holmes_path_6
Extract path function for assertion assert_linear_path_0
Extract path function for assertion assert_linear_path_1
Extract path function for assertion assert_linear_path_2
Extract path function for assertion assert_linear_path_3
Extract path function for assertion assert_Darray_find_path_0
Extract path function for assertion assert_Darray_find_path_1
Extract path function for assertion assert_Darray_find_path_2
Extract path function for assertion assert_Darray_find_path_3
Extract path function for assertion assert_Darray_find_path_4
Extract path function for assertion assert_Darray_find_path_5
Extract path function for assertion assert_Darray_find_path_6
Extract path function for assertion assert_Darray_find_path_7
Extract path function for assertion assert_Darray_find_path_8
Extract path function for assertion assert_Darray_find_path_9
Extract path function for assertion assert_Darray_find_path_10
Extract path function for assertion assert_Darray_find_path_11
Extract path function for assertion assert_Darray_find_path_12
Extract path function for assertion assert_say_file_path_1
Extract path function for assertion assert_say_file_path_3
Extract path function for assertion assert_say_file_path_5
Extract path function for assertion assert_wblong_path_0
Extract path function for assertion assert_wblong_path_1
Extract path function for assertion assert_wblong_path_2
Extract path function for assertion assert_wblong_path_3
Extract path function for assertion assert_set_trans_path_0
Extract path function for assertion assert_set_trans_path_1
Extract path function for assertion assert_set_trans_path_2
Extract path function for assertion assert_set_trans_path_3
Extract path function for assertion assert_set_trans_path_4
Extract path function for assertion assert_set_trans_path_5
Extract path function for assertion assert_set_trans_path_6
Extract path function for assertion assert_set_trans_path_7
Extract path function for assertion assert_set_trans_path_8
Extract path function for assertion assert_set_trans_path_9
Extract path function for assertion assert_set_trans_path_11
Extract path function for assertion assert_NRL_path_0
Extract path function for assertion assert_NRL_path_2
Extract path function for assertion assert_NRL_path_5
Extract path function for assertion assert_spell_out_path_1
Extract path function for assertion assert_spell_out_path_3
Extract path function for assertion assert_audio_term_path_0
Extract path function for assertion assert_audio_term_path_1
Extract path function for assertion assert_audio_term_path_2
Extract path function for assertion assert_darray_free_path_0
Extract path function for assertion assert_darray_free_path_1
Extract path function for assertion assert_concat_args_path_1
Extract path function for assertion assert_concat_args_path_5
Extract path function for assertion assert_concat_args_path_7
Extract path function for assertion assert_concat_args_path_9
Extract path function for assertion assert_concat_args_path_11
Extract path function for assertion assert_concat_args_path_13
Extract path function for assertion assert_concat_args_path_15
Extract path function for assertion assert_concat_args_path_17
Extract path function for assertion assert_concat_args_path_20
Extract path function for assertion assert_concat_args_path_22
Extract path function for assertion assert_phone_to_elm_path_0
Extract path function for assertion assert_phone_to_elm_path_1
Extract path function for assertion assert_phone_to_elm_path_3
Extract path function for assertion assert_phone_to_elm_path_4
Extract path function for assertion assert_phone_to_elm_path_5
Extract path function for assertion assert_phone_to_elm_path_6
Extract path function for assertion assert_phone_to_elm_path_7
Extract path function for assertion assert_phone_to_elm_path_9
Extract path function for assertion assert_phone_to_elm_path_10
Extract path function for assertion assert_phone_to_elm_path_12
Extract path function for assertion assert_phone_to_elm_path_13
Extract path function for assertion assert_phone_to_elm_path_14
Extract path function for assertion assert_phone_to_elm_path_15
Extract path function for assertion assert_phone_to_elm_path_16
Extract path function for assertion assert_phone_to_elm_path_17
Extract path function for assertion assert_phone_to_elm_path_18
Extract path function for assertion assert_phone_to_elm_path_19
Extract path function for assertion assert_phone_to_elm_path_20
Extract path function for assertion assert_phone_to_elm_path_21
Extract path function for assertion assert_phone_to_elm_path_22
Extract path function for assertion assert_phone_to_elm_path_23
Extract path function for assertion assert_phone_to_elm_path_24
Extract path function for assertion assert_phone_to_elm_path_26
Extract path function for assertion assert_phone_to_elm_path_27
Extract path function for assertion assert_suspect_word_path_0
Extract path function for assertion assert_suspect_word_path_1
Extract path function for assertion assert_suspect_word_path_2
Extract path function for assertion assert_suspect_word_path_3
Extract path function for assertion assert_suspect_word_path_4
Extract path function for assertion assert_suspect_word_path_5
Extract path function for assertion assert_suspect_word_path_6
Extract path function for assertion assert_suspect_word_path_7
Extract path function for assertion assert_suspect_word_path_8
Extract path function for assertion assert_suspect_word_path_9
Extract path function for assertion assert_suspect_word_path_11
Extract path function for assertion assert_suspect_word_path_13
Extract path function for assertion assert_suspect_word_path_15
Extract path function for assertion assert_say_string_path_0
Extract path function for assertion assert_say_string_path_1
Extract path function for assertion assert_natural_source_path_0
Extract path function for assertion assert_natural_source_path_1
Extract path function for assertion assert_natural_source_path_2
Extract path function for assertion assert_darray_find_path_0
Extract path function for assertion assert_darray_find_path_1
Extract path function for assertion assert_darray_find_path_2
Extract path function for assertion assert_isvowel_path_0
Extract path function for assertion assert_isvowel_path_1
Extract path function for assertion assert_rightmatch_path_0
Extract path function for assertion assert_rightmatch_path_1
Extract path function for assertion assert_rightmatch_path_2
Extract path function for assertion assert_rightmatch_path_3
Extract path function for assertion assert_rightmatch_path_4
Extract path function for assertion assert_rightmatch_path_5
Extract path function for assertion assert_rightmatch_path_6
Extract path function for assertion assert_rightmatch_path_7
Extract path function for assertion assert_rightmatch_path_8
Extract path function for assertion assert_rightmatch_path_9
Extract path function for assertion assert_rightmatch_path_11
Extract path function for assertion assert_rightmatch_path_12
Extract path function for assertion assert_rightmatch_path_14
Extract path function for assertion assert_rightmatch_path_15
Extract path function for assertion assert_rightmatch_path_16
Extract path function for assertion assert_rightmatch_path_17
Extract path function for assertion assert_rightmatch_path_18
Extract path function for assertion assert_rightmatch_path_19
Extract path function for assertion assert_rightmatch_path_21
Extract path function for assertion assert_rightmatch_path_22
Extract path function for assertion assert_rightmatch_path_24
Extract path function for assertion assert_rightmatch_path_25
Extract path function for assertion assert_rightmatch_path_26
Extract path function for assertion assert_rightmatch_path_27
Extract path function for assertion assert_rightmatch_path_28
Extract path function for assertion assert_rightmatch_path_29
Extract path function for assertion assert_rightmatch_path_30
Extract path function for assertion assert_rightmatch_path_31
Extract path function for assertion assert_rightmatch_path_32
Extract path function for assertion assert_rightmatch_path_33
Extract path function for assertion assert_rightmatch_path_34
Extract path function for assertion assert_rightmatch_path_35
Extract path function for assertion assert_rightmatch_path_36
Extract path function for assertion assert_rightmatch_path_37
Extract path function for assertion assert_rightmatch_path_38
Extract path function for assertion assert_rightmatch_path_39
Extract path function for assertion assert_rightmatch_path_40
Extract path function for assertion assert_rightmatch_path_41
Extract path function for assertion assert_rightmatch_path_42
Extract path function for assertion assert_rightmatch_path_43
Extract path function for assertion assert_rightmatch_path_44
Extract path function for assertion assert_rightmatch_path_45
Extract path function for assertion assert_rightmatch_path_46
Extract path function for assertion assert_rightmatch_path_47
Extract path function for assertion assert_rightmatch_path_48
Extract path function for assertion assert_rightmatch_path_49
Extract path function for assertion assert_rightmatch_path_50
Extract path function for assertion assert_rightmatch_path_51
Extract path function for assertion assert_rightmatch_path_52
Extract path function for assertion assert_rightmatch_path_53
Extract path function for assertion assert_rightmatch_path_54
Extract path function for assertion assert_rightmatch_path_55
Extract path function for assertion assert_rightmatch_path_57
Extract path function for assertion assert_find_rule_path_11
Extract path function for assertion assert_find_rule_path_14
Extract path function for assertion assert_find_rule_path_17
Extract path function for assertion assert_find_rule_path_20
Extract path function for assertion assert_impulsive_source_path_0
Extract path function for assertion assert_impulsive_source_path_1
Extract path function for assertion assert_impulsive_source_path_2
Extract path function for assertion assert_enter_path_2
Extract path function for assertion assert_enter_path_6
Extract path function for assertion assert_xlate_word_path_1
Extract path function for assertion assert_xlate_word_path_2
Extract path function for assertion assert_xlate_word_path_4
Extract path function for assertion assert_xlate_word_path_5
Extract path function for assertion assert_xlate_word_path_7
Extract path function for assertion assert_xlate_word_path_9
Extract path function for assertion assert_xlate_word_path_10
Extract path function for assertion assert_xlate_word_path_11
Extract path function for assertion assert_xlate_word_path_13
Extract path function for assertion assert_xlate_word_path_14
Extract path function for assertion assert_xlate_word_path_15
Extract path function for assertion assert_xlate_word_path_16
Extract path function for assertion assert_xlate_word_path_17
Extract path function for assertion assert_xlate_word_path_18
Extract path function for assertion assert_xlate_word_path_19
Extract path function for assertion assert_xlate_word_path_20
Extract path function for assertion assert_xlate_word_path_22
Extract path function for assertion assert_xlate_word_path_24
Extract path function for assertion assert_jsru_freq_path_0
Extract path function for assertion assert_jsru_freq_path_1
OH stats is requested, dumping stat file...
Processed instructions number 5223
{
    "numberOfAssertCalls": 0,
    "numberOfBlocksInFunctionsWithNoDG": 59,
    "numberOfDataDependentInstructions": 1198,
    "numberOfHashVariables": 1,
    "numberOfImplicitlyProtectedInstructions": 0,
    "numberOfInstructionsInFilteredFunctions": 2711,
    "numberOfInstructionsInFunctionsWithNoDG": 271,
    "numberOfNonHashableBlocks": 58,
    "numberOfNonHashableInstructions": 268,
    "numberOfOHProcessedInstr": 2241,
    "numberOfOtherUnprotectedInstructions": 7,
    "numberOfOtherUnprotectedLoopVariantInstructions": 3,
    "numberOfProtectedArguments": 0,
    "numberOfProtectedBlocks": 1,
    "numberOfProtectedFunctions": 27,
    "numberOfProtectedGuardArguments": 0,
    "numberOfProtectedGuardInstructions": 0,
    "numberOfProtectedInstructions": 2,
    "numberOfSensitiveBlocks": 449,
    "numberOfSensitiveFunctions": 38,
    "numberOfShortRangeAssertCalls": 346,
    "numberOfShortRangeImplicitlyProtectedInstructions": 0,
    "numberOfShortRangeProtectedArguments": 6,
    "numberOfShortRangeProtectedBlocks": 308,
    "numberOfShortRangeProtectedGuardArguments": 0,
    "numberOfShortRangeProtectedGuardInstructions": 0,
    "numberOfShortRangeProtectedInstructions": 261,
    "numberOfUnprotectedArgumentReachableInstructions": 63,
    "numberOfUnprotectedArgumentReachableLoopBlocks": 0,
    "numberOfUnprotectedDataDependentBlocks": 0,
    "numberOfUnprotectedDataDependentLoopBlocks": 82,
    "numberOfUnprotectedGlobalReachableInstructions": 91,
    "numberOfUnprotectedGlobalReachableLoopBlocks": 0,
    "numberOfUnprotectedInputDependentInstructions": 0,
    "numberOfUnprotectedLoopInstructions": 348
}
ERR. processed 38 function, while filter count is 182
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 205.2805 seconds (205.2842 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  195.8859 ( 95.9%)   0.9880 ( 94.3%)  196.8739 ( 95.9%)  196.8775 ( 95.9%)  Instruments bitcode with hashing and logging functions
   7.7547 (  3.8%)   0.0476 (  4.5%)   7.8022 (  3.8%)   7.8023 (  3.8%)  runs input dependency analysis
   0.4060 (  0.2%)   0.0061 (  0.6%)   0.4122 (  0.2%)   0.4116 (  0.2%)  Memory SSA
   0.0663 (  0.0%)   0.0000 (  0.0%)   0.0663 (  0.0%)   0.0663 (  0.0%)  Bitcode Writer
   0.0474 (  0.0%)   0.0007 (  0.1%)   0.0482 (  0.0%)   0.0488 (  0.0%)  Dominator Tree Construction
   0.0340 (  0.0%)   0.0006 (  0.1%)   0.0346 (  0.0%)   0.0345 (  0.0%)  Natural Loop Information
   0.0151 (  0.0%)   0.0000 (  0.0%)   0.0151 (  0.0%)   0.0150 (  0.0%)  Module Verifier
   0.0053 (  0.0%)   0.0002 (  0.0%)   0.0055 (  0.0%)   0.0054 (  0.0%)  Post-Dominator Tree Construction
   0.0049 (  0.0%)   0.0002 (  0.0%)   0.0051 (  0.0%)   0.0053 (  0.0%)  Dominator Tree Construction
   0.0033 (  0.0%)   0.0002 (  0.0%)   0.0035 (  0.0%)   0.0035 (  0.0%)  Natural Loop Information
   0.0025 (  0.0%)   0.0001 (  0.0%)   0.0026 (  0.0%)   0.0026 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0016 (  0.2%)   0.0025 (  0.0%)   0.0025 (  0.0%)  Instruments bitcode with guards
   0.0000 (  0.0%)   0.0023 (  0.2%)   0.0023 (  0.0%)   0.0023 (  0.0%)  Include functions in a given file in any transformation
   0.0023 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)   0.0022 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Call site information
   0.0011 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Dead Global Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  runs indirect and virtual calls analysis
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Remove unreachable blocks from the CFG
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Marks functions in a given file as assert functions
  204.2328 (100.0%)   1.0477 (100.0%)  205.2805 (100.0%)  205.2842 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0247 seconds (0.0247 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0206 (100.0%)   0.0040 (100.0%)   0.0247 (100.0%)   0.0247 (100.0%)  Parse IR
   0.0206 (100.0%)   0.0040 (100.0%)   0.0247 (100.0%)   0.0247 (100.0%)  Total
